{-
   Docker Engine API

   The Engine API is an HTTP API served by Docker Engine. It is the API the Docker client uses to communicate with the Engine, so everything the Docker client can do can be done with the API.  Most of the client's commands map directly to API endpoints (e.g. `docker ps` is `GET /containers/json`). The notable exception is running containers, which consists of several API calls.  # Errors  The API uses standard HTTP status codes to indicate the success or failure of the API call. The body of the response will be JSON in the following format:  ``` {   \"message\": \"page not found\" } ```  # Versioning  The API is usually changed in each release, so API calls are versioned to ensure that clients don't break. To lock to a specific version of the API, you prefix the URL with its version, for example, call `/v1.30/info` to use the v1.30 version of the `/info` endpoint. If the API version specified in the URL is not supported by the daemon, a HTTP `400 Bad Request` error message is returned.  If you omit the version-prefix, the current version of the API (v1.38) is used. For example, calling `/info` is the same as calling `/v1.38/info`. Using the API without a version-prefix is deprecated and will be removed in a future release.  Engine releases in the near future should support this version of the API, so your client will continue to work even if it is talking to a newer Engine.  The API uses an open schema model, which means server may add extra properties to responses. Likewise, the server will ignore any extra query parameters and request body properties. When you write clients, you need to ignore additional properties in responses to ensure they do not break when talking to newer daemons.   # Authentication  Authentication for registries is handled client side. The client has to send authentication details to various endpoints that need to communicate with registries, such as `POST /images/(name)/push`. These are sent as `X-Registry-Auth` header as a Base64 encoded (JSON) string with the following structure:  ``` {   \"username\": \"string\",   \"password\": \"string\",   \"email\": \"string\",   \"serveraddress\": \"string\" } ```  The `serveraddress` is a domain/IP without a protocol. Throughout this structure, double quotes are required.  If you have already got an identity token from the [`/auth` endpoint](#operation/SystemAuth), you can just pass this instead of credentials:  ``` {   \"identitytoken\": \"9cbaf023786cd7...\" } ``` 

   OpenAPI Version: 3.0.1
   Docker Engine API API version: 1.38
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : DockerEngine.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module DockerEngine.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import DockerEngine.Model
import DockerEngine.Core


-- * Address

-- | 'addressAddr' Lens
addressAddrL :: Lens_' Address (Maybe Text)
addressAddrL f Address{..} = (\addressAddr -> Address { addressAddr, ..} ) <$> f addressAddr
{-# INLINE addressAddrL #-}

-- | 'addressPrefixLen' Lens
addressPrefixLenL :: Lens_' Address (Maybe Int)
addressPrefixLenL f Address{..} = (\addressPrefixLen -> Address { addressPrefixLen, ..} ) <$> f addressPrefixLen
{-# INLINE addressPrefixLenL #-}



-- * AuthConfig

-- | 'authConfigUsername' Lens
authConfigUsernameL :: Lens_' AuthConfig (Maybe Text)
authConfigUsernameL f AuthConfig{..} = (\authConfigUsername -> AuthConfig { authConfigUsername, ..} ) <$> f authConfigUsername
{-# INLINE authConfigUsernameL #-}

-- | 'authConfigPassword' Lens
authConfigPasswordL :: Lens_' AuthConfig (Maybe Text)
authConfigPasswordL f AuthConfig{..} = (\authConfigPassword -> AuthConfig { authConfigPassword, ..} ) <$> f authConfigPassword
{-# INLINE authConfigPasswordL #-}

-- | 'authConfigEmail' Lens
authConfigEmailL :: Lens_' AuthConfig (Maybe Text)
authConfigEmailL f AuthConfig{..} = (\authConfigEmail -> AuthConfig { authConfigEmail, ..} ) <$> f authConfigEmail
{-# INLINE authConfigEmailL #-}

-- | 'authConfigServeraddress' Lens
authConfigServeraddressL :: Lens_' AuthConfig (Maybe Text)
authConfigServeraddressL f AuthConfig{..} = (\authConfigServeraddress -> AuthConfig { authConfigServeraddress, ..} ) <$> f authConfigServeraddress
{-# INLINE authConfigServeraddressL #-}



-- * BuildInfo

-- | 'buildInfoId' Lens
buildInfoIdL :: Lens_' BuildInfo (Maybe Text)
buildInfoIdL f BuildInfo{..} = (\buildInfoId -> BuildInfo { buildInfoId, ..} ) <$> f buildInfoId
{-# INLINE buildInfoIdL #-}

-- | 'buildInfoStream' Lens
buildInfoStreamL :: Lens_' BuildInfo (Maybe Text)
buildInfoStreamL f BuildInfo{..} = (\buildInfoStream -> BuildInfo { buildInfoStream, ..} ) <$> f buildInfoStream
{-# INLINE buildInfoStreamL #-}

-- | 'buildInfoError' Lens
buildInfoErrorL :: Lens_' BuildInfo (Maybe Text)
buildInfoErrorL f BuildInfo{..} = (\buildInfoError -> BuildInfo { buildInfoError, ..} ) <$> f buildInfoError
{-# INLINE buildInfoErrorL #-}

-- | 'buildInfoErrorDetail' Lens
buildInfoErrorDetailL :: Lens_' BuildInfo (Maybe ErrorDetail)
buildInfoErrorDetailL f BuildInfo{..} = (\buildInfoErrorDetail -> BuildInfo { buildInfoErrorDetail, ..} ) <$> f buildInfoErrorDetail
{-# INLINE buildInfoErrorDetailL #-}

-- | 'buildInfoStatus' Lens
buildInfoStatusL :: Lens_' BuildInfo (Maybe Text)
buildInfoStatusL f BuildInfo{..} = (\buildInfoStatus -> BuildInfo { buildInfoStatus, ..} ) <$> f buildInfoStatus
{-# INLINE buildInfoStatusL #-}

-- | 'buildInfoProgress' Lens
buildInfoProgressL :: Lens_' BuildInfo (Maybe Text)
buildInfoProgressL f BuildInfo{..} = (\buildInfoProgress -> BuildInfo { buildInfoProgress, ..} ) <$> f buildInfoProgress
{-# INLINE buildInfoProgressL #-}

-- | 'buildInfoProgressDetail' Lens
buildInfoProgressDetailL :: Lens_' BuildInfo (Maybe ProgressDetail)
buildInfoProgressDetailL f BuildInfo{..} = (\buildInfoProgressDetail -> BuildInfo { buildInfoProgressDetail, ..} ) <$> f buildInfoProgressDetail
{-# INLINE buildInfoProgressDetailL #-}

-- | 'buildInfoAux' Lens
buildInfoAuxL :: Lens_' BuildInfo (Maybe ImageID)
buildInfoAuxL f BuildInfo{..} = (\buildInfoAux -> BuildInfo { buildInfoAux, ..} ) <$> f buildInfoAux
{-# INLINE buildInfoAuxL #-}



-- * BuildPruneResponse

-- | 'buildPruneResponseSpaceReclaimed' Lens
buildPruneResponseSpaceReclaimedL :: Lens_' BuildPruneResponse (Maybe Integer)
buildPruneResponseSpaceReclaimedL f BuildPruneResponse{..} = (\buildPruneResponseSpaceReclaimed -> BuildPruneResponse { buildPruneResponseSpaceReclaimed, ..} ) <$> f buildPruneResponseSpaceReclaimed
{-# INLINE buildPruneResponseSpaceReclaimedL #-}



-- * ClusterInfo

-- | 'clusterInfoId' Lens
clusterInfoIdL :: Lens_' ClusterInfo (Maybe Text)
clusterInfoIdL f ClusterInfo{..} = (\clusterInfoId -> ClusterInfo { clusterInfoId, ..} ) <$> f clusterInfoId
{-# INLINE clusterInfoIdL #-}

-- | 'clusterInfoVersion' Lens
clusterInfoVersionL :: Lens_' ClusterInfo (Maybe ObjectVersion)
clusterInfoVersionL f ClusterInfo{..} = (\clusterInfoVersion -> ClusterInfo { clusterInfoVersion, ..} ) <$> f clusterInfoVersion
{-# INLINE clusterInfoVersionL #-}

-- | 'clusterInfoCreatedAt' Lens
clusterInfoCreatedAtL :: Lens_' ClusterInfo (Maybe Text)
clusterInfoCreatedAtL f ClusterInfo{..} = (\clusterInfoCreatedAt -> ClusterInfo { clusterInfoCreatedAt, ..} ) <$> f clusterInfoCreatedAt
{-# INLINE clusterInfoCreatedAtL #-}

-- | 'clusterInfoUpdatedAt' Lens
clusterInfoUpdatedAtL :: Lens_' ClusterInfo (Maybe Text)
clusterInfoUpdatedAtL f ClusterInfo{..} = (\clusterInfoUpdatedAt -> ClusterInfo { clusterInfoUpdatedAt, ..} ) <$> f clusterInfoUpdatedAt
{-# INLINE clusterInfoUpdatedAtL #-}

-- | 'clusterInfoSpec' Lens
clusterInfoSpecL :: Lens_' ClusterInfo (Maybe SwarmSpec)
clusterInfoSpecL f ClusterInfo{..} = (\clusterInfoSpec -> ClusterInfo { clusterInfoSpec, ..} ) <$> f clusterInfoSpec
{-# INLINE clusterInfoSpecL #-}

-- | 'clusterInfoTlsInfo' Lens
clusterInfoTlsInfoL :: Lens_' ClusterInfo (Maybe TLSInfo)
clusterInfoTlsInfoL f ClusterInfo{..} = (\clusterInfoTlsInfo -> ClusterInfo { clusterInfoTlsInfo, ..} ) <$> f clusterInfoTlsInfo
{-# INLINE clusterInfoTlsInfoL #-}

-- | 'clusterInfoRootRotationInProgress' Lens
clusterInfoRootRotationInProgressL :: Lens_' ClusterInfo (Maybe Bool)
clusterInfoRootRotationInProgressL f ClusterInfo{..} = (\clusterInfoRootRotationInProgress -> ClusterInfo { clusterInfoRootRotationInProgress, ..} ) <$> f clusterInfoRootRotationInProgress
{-# INLINE clusterInfoRootRotationInProgressL #-}



-- * Commit

-- | 'commitId' Lens
commitIdL :: Lens_' Commit (Maybe Text)
commitIdL f Commit{..} = (\commitId -> Commit { commitId, ..} ) <$> f commitId
{-# INLINE commitIdL #-}

-- | 'commitExpected' Lens
commitExpectedL :: Lens_' Commit (Maybe Text)
commitExpectedL f Commit{..} = (\commitExpected -> Commit { commitExpected, ..} ) <$> f commitExpected
{-# INLINE commitExpectedL #-}



-- * Config

-- | 'configId' Lens
configIdL :: Lens_' Config (Maybe Text)
configIdL f Config{..} = (\configId -> Config { configId, ..} ) <$> f configId
{-# INLINE configIdL #-}

-- | 'configVersion' Lens
configVersionL :: Lens_' Config (Maybe ObjectVersion)
configVersionL f Config{..} = (\configVersion -> Config { configVersion, ..} ) <$> f configVersion
{-# INLINE configVersionL #-}

-- | 'configCreatedAt' Lens
configCreatedAtL :: Lens_' Config (Maybe Text)
configCreatedAtL f Config{..} = (\configCreatedAt -> Config { configCreatedAt, ..} ) <$> f configCreatedAt
{-# INLINE configCreatedAtL #-}

-- | 'configUpdatedAt' Lens
configUpdatedAtL :: Lens_' Config (Maybe Text)
configUpdatedAtL f Config{..} = (\configUpdatedAt -> Config { configUpdatedAt, ..} ) <$> f configUpdatedAt
{-# INLINE configUpdatedAtL #-}

-- | 'configSpec' Lens
configSpecL :: Lens_' Config (Maybe ConfigSpec)
configSpecL f Config{..} = (\configSpec -> Config { configSpec, ..} ) <$> f configSpec
{-# INLINE configSpecL #-}



-- * ConfigCreateRequest

-- | 'configCreateRequestName' Lens
configCreateRequestNameL :: Lens_' ConfigCreateRequest (Maybe Text)
configCreateRequestNameL f ConfigCreateRequest{..} = (\configCreateRequestName -> ConfigCreateRequest { configCreateRequestName, ..} ) <$> f configCreateRequestName
{-# INLINE configCreateRequestNameL #-}

-- | 'configCreateRequestLabels' Lens
configCreateRequestLabelsL :: Lens_' ConfigCreateRequest (Maybe (Map.Map String Text))
configCreateRequestLabelsL f ConfigCreateRequest{..} = (\configCreateRequestLabels -> ConfigCreateRequest { configCreateRequestLabels, ..} ) <$> f configCreateRequestLabels
{-# INLINE configCreateRequestLabelsL #-}

-- | 'configCreateRequestData' Lens
configCreateRequestDataL :: Lens_' ConfigCreateRequest (Maybe Text)
configCreateRequestDataL f ConfigCreateRequest{..} = (\configCreateRequestData -> ConfigCreateRequest { configCreateRequestData, ..} ) <$> f configCreateRequestData
{-# INLINE configCreateRequestDataL #-}

-- | 'configCreateRequestTemplating' Lens
configCreateRequestTemplatingL :: Lens_' ConfigCreateRequest (Maybe Driver)
configCreateRequestTemplatingL f ConfigCreateRequest{..} = (\configCreateRequestTemplating -> ConfigCreateRequest { configCreateRequestTemplating, ..} ) <$> f configCreateRequestTemplating
{-# INLINE configCreateRequestTemplatingL #-}



-- * ConfigSpec

-- | 'configSpecName' Lens
configSpecNameL :: Lens_' ConfigSpec (Maybe Text)
configSpecNameL f ConfigSpec{..} = (\configSpecName -> ConfigSpec { configSpecName, ..} ) <$> f configSpecName
{-# INLINE configSpecNameL #-}

-- | 'configSpecLabels' Lens
configSpecLabelsL :: Lens_' ConfigSpec (Maybe (Map.Map String Text))
configSpecLabelsL f ConfigSpec{..} = (\configSpecLabels -> ConfigSpec { configSpecLabels, ..} ) <$> f configSpecLabels
{-# INLINE configSpecLabelsL #-}

-- | 'configSpecData' Lens
configSpecDataL :: Lens_' ConfigSpec (Maybe Text)
configSpecDataL f ConfigSpec{..} = (\configSpecData -> ConfigSpec { configSpecData, ..} ) <$> f configSpecData
{-# INLINE configSpecDataL #-}

-- | 'configSpecTemplating' Lens
configSpecTemplatingL :: Lens_' ConfigSpec (Maybe Driver)
configSpecTemplatingL f ConfigSpec{..} = (\configSpecTemplating -> ConfigSpec { configSpecTemplating, ..} ) <$> f configSpecTemplating
{-# INLINE configSpecTemplatingL #-}



-- * ContainerChangeResponseItem

-- | 'containerChangeResponseItemPath' Lens
containerChangeResponseItemPathL :: Lens_' ContainerChangeResponseItem (Text)
containerChangeResponseItemPathL f ContainerChangeResponseItem{..} = (\containerChangeResponseItemPath -> ContainerChangeResponseItem { containerChangeResponseItemPath, ..} ) <$> f containerChangeResponseItemPath
{-# INLINE containerChangeResponseItemPathL #-}

-- | 'containerChangeResponseItemKind' Lens
containerChangeResponseItemKindL :: Lens_' ContainerChangeResponseItem (Int)
containerChangeResponseItemKindL f ContainerChangeResponseItem{..} = (\containerChangeResponseItemKind -> ContainerChangeResponseItem { containerChangeResponseItemKind, ..} ) <$> f containerChangeResponseItemKind
{-# INLINE containerChangeResponseItemKindL #-}



-- * ContainerConfig

-- | 'containerConfigHostname' Lens
containerConfigHostnameL :: Lens_' ContainerConfig (Maybe Text)
containerConfigHostnameL f ContainerConfig{..} = (\containerConfigHostname -> ContainerConfig { containerConfigHostname, ..} ) <$> f containerConfigHostname
{-# INLINE containerConfigHostnameL #-}

-- | 'containerConfigDomainname' Lens
containerConfigDomainnameL :: Lens_' ContainerConfig (Maybe Text)
containerConfigDomainnameL f ContainerConfig{..} = (\containerConfigDomainname -> ContainerConfig { containerConfigDomainname, ..} ) <$> f containerConfigDomainname
{-# INLINE containerConfigDomainnameL #-}

-- | 'containerConfigUser' Lens
containerConfigUserL :: Lens_' ContainerConfig (Maybe Text)
containerConfigUserL f ContainerConfig{..} = (\containerConfigUser -> ContainerConfig { containerConfigUser, ..} ) <$> f containerConfigUser
{-# INLINE containerConfigUserL #-}

-- | 'containerConfigAttachStdin' Lens
containerConfigAttachStdinL :: Lens_' ContainerConfig (Maybe Bool)
containerConfigAttachStdinL f ContainerConfig{..} = (\containerConfigAttachStdin -> ContainerConfig { containerConfigAttachStdin, ..} ) <$> f containerConfigAttachStdin
{-# INLINE containerConfigAttachStdinL #-}

-- | 'containerConfigAttachStdout' Lens
containerConfigAttachStdoutL :: Lens_' ContainerConfig (Maybe Bool)
containerConfigAttachStdoutL f ContainerConfig{..} = (\containerConfigAttachStdout -> ContainerConfig { containerConfigAttachStdout, ..} ) <$> f containerConfigAttachStdout
{-# INLINE containerConfigAttachStdoutL #-}

-- | 'containerConfigAttachStderr' Lens
containerConfigAttachStderrL :: Lens_' ContainerConfig (Maybe Bool)
containerConfigAttachStderrL f ContainerConfig{..} = (\containerConfigAttachStderr -> ContainerConfig { containerConfigAttachStderr, ..} ) <$> f containerConfigAttachStderr
{-# INLINE containerConfigAttachStderrL #-}

-- | 'containerConfigExposedPorts' Lens
containerConfigExposedPortsL :: Lens_' ContainerConfig (Maybe (Map.Map String A.Value))
containerConfigExposedPortsL f ContainerConfig{..} = (\containerConfigExposedPorts -> ContainerConfig { containerConfigExposedPorts, ..} ) <$> f containerConfigExposedPorts
{-# INLINE containerConfigExposedPortsL #-}

-- | 'containerConfigTty' Lens
containerConfigTtyL :: Lens_' ContainerConfig (Maybe Bool)
containerConfigTtyL f ContainerConfig{..} = (\containerConfigTty -> ContainerConfig { containerConfigTty, ..} ) <$> f containerConfigTty
{-# INLINE containerConfigTtyL #-}

-- | 'containerConfigOpenStdin' Lens
containerConfigOpenStdinL :: Lens_' ContainerConfig (Maybe Bool)
containerConfigOpenStdinL f ContainerConfig{..} = (\containerConfigOpenStdin -> ContainerConfig { containerConfigOpenStdin, ..} ) <$> f containerConfigOpenStdin
{-# INLINE containerConfigOpenStdinL #-}

-- | 'containerConfigStdinOnce' Lens
containerConfigStdinOnceL :: Lens_' ContainerConfig (Maybe Bool)
containerConfigStdinOnceL f ContainerConfig{..} = (\containerConfigStdinOnce -> ContainerConfig { containerConfigStdinOnce, ..} ) <$> f containerConfigStdinOnce
{-# INLINE containerConfigStdinOnceL #-}

-- | 'containerConfigEnv' Lens
containerConfigEnvL :: Lens_' ContainerConfig (Maybe [Text])
containerConfigEnvL f ContainerConfig{..} = (\containerConfigEnv -> ContainerConfig { containerConfigEnv, ..} ) <$> f containerConfigEnv
{-# INLINE containerConfigEnvL #-}

-- | 'containerConfigCmd' Lens
containerConfigCmdL :: Lens_' ContainerConfig (Maybe [Text])
containerConfigCmdL f ContainerConfig{..} = (\containerConfigCmd -> ContainerConfig { containerConfigCmd, ..} ) <$> f containerConfigCmd
{-# INLINE containerConfigCmdL #-}

-- | 'containerConfigHealthcheck' Lens
containerConfigHealthcheckL :: Lens_' ContainerConfig (Maybe HealthConfig)
containerConfigHealthcheckL f ContainerConfig{..} = (\containerConfigHealthcheck -> ContainerConfig { containerConfigHealthcheck, ..} ) <$> f containerConfigHealthcheck
{-# INLINE containerConfigHealthcheckL #-}

-- | 'containerConfigArgsEscaped' Lens
containerConfigArgsEscapedL :: Lens_' ContainerConfig (Maybe Bool)
containerConfigArgsEscapedL f ContainerConfig{..} = (\containerConfigArgsEscaped -> ContainerConfig { containerConfigArgsEscaped, ..} ) <$> f containerConfigArgsEscaped
{-# INLINE containerConfigArgsEscapedL #-}

-- | 'containerConfigImage' Lens
containerConfigImageL :: Lens_' ContainerConfig (Maybe Text)
containerConfigImageL f ContainerConfig{..} = (\containerConfigImage -> ContainerConfig { containerConfigImage, ..} ) <$> f containerConfigImage
{-# INLINE containerConfigImageL #-}

-- | 'containerConfigVolumes' Lens
containerConfigVolumesL :: Lens_' ContainerConfig (Maybe (Map.Map String A.Value))
containerConfigVolumesL f ContainerConfig{..} = (\containerConfigVolumes -> ContainerConfig { containerConfigVolumes, ..} ) <$> f containerConfigVolumes
{-# INLINE containerConfigVolumesL #-}

-- | 'containerConfigWorkingDir' Lens
containerConfigWorkingDirL :: Lens_' ContainerConfig (Maybe Text)
containerConfigWorkingDirL f ContainerConfig{..} = (\containerConfigWorkingDir -> ContainerConfig { containerConfigWorkingDir, ..} ) <$> f containerConfigWorkingDir
{-# INLINE containerConfigWorkingDirL #-}

-- | 'containerConfigEntrypoint' Lens
containerConfigEntrypointL :: Lens_' ContainerConfig (Maybe [Text])
containerConfigEntrypointL f ContainerConfig{..} = (\containerConfigEntrypoint -> ContainerConfig { containerConfigEntrypoint, ..} ) <$> f containerConfigEntrypoint
{-# INLINE containerConfigEntrypointL #-}

-- | 'containerConfigNetworkDisabled' Lens
containerConfigNetworkDisabledL :: Lens_' ContainerConfig (Maybe Bool)
containerConfigNetworkDisabledL f ContainerConfig{..} = (\containerConfigNetworkDisabled -> ContainerConfig { containerConfigNetworkDisabled, ..} ) <$> f containerConfigNetworkDisabled
{-# INLINE containerConfigNetworkDisabledL #-}

-- | 'containerConfigMacAddress' Lens
containerConfigMacAddressL :: Lens_' ContainerConfig (Maybe Text)
containerConfigMacAddressL f ContainerConfig{..} = (\containerConfigMacAddress -> ContainerConfig { containerConfigMacAddress, ..} ) <$> f containerConfigMacAddress
{-# INLINE containerConfigMacAddressL #-}

-- | 'containerConfigOnBuild' Lens
containerConfigOnBuildL :: Lens_' ContainerConfig (Maybe [Text])
containerConfigOnBuildL f ContainerConfig{..} = (\containerConfigOnBuild -> ContainerConfig { containerConfigOnBuild, ..} ) <$> f containerConfigOnBuild
{-# INLINE containerConfigOnBuildL #-}

-- | 'containerConfigLabels' Lens
containerConfigLabelsL :: Lens_' ContainerConfig (Maybe (Map.Map String Text))
containerConfigLabelsL f ContainerConfig{..} = (\containerConfigLabels -> ContainerConfig { containerConfigLabels, ..} ) <$> f containerConfigLabels
{-# INLINE containerConfigLabelsL #-}

-- | 'containerConfigStopSignal' Lens
containerConfigStopSignalL :: Lens_' ContainerConfig (Maybe Text)
containerConfigStopSignalL f ContainerConfig{..} = (\containerConfigStopSignal -> ContainerConfig { containerConfigStopSignal, ..} ) <$> f containerConfigStopSignal
{-# INLINE containerConfigStopSignalL #-}

-- | 'containerConfigStopTimeout' Lens
containerConfigStopTimeoutL :: Lens_' ContainerConfig (Maybe Int)
containerConfigStopTimeoutL f ContainerConfig{..} = (\containerConfigStopTimeout -> ContainerConfig { containerConfigStopTimeout, ..} ) <$> f containerConfigStopTimeout
{-# INLINE containerConfigStopTimeoutL #-}

-- | 'containerConfigShell' Lens
containerConfigShellL :: Lens_' ContainerConfig (Maybe [Text])
containerConfigShellL f ContainerConfig{..} = (\containerConfigShell -> ContainerConfig { containerConfigShell, ..} ) <$> f containerConfigShell
{-# INLINE containerConfigShellL #-}



-- * ContainerCreateRequest

-- | 'containerCreateRequestHostname' Lens
containerCreateRequestHostnameL :: Lens_' ContainerCreateRequest (Maybe Text)
containerCreateRequestHostnameL f ContainerCreateRequest{..} = (\containerCreateRequestHostname -> ContainerCreateRequest { containerCreateRequestHostname, ..} ) <$> f containerCreateRequestHostname
{-# INLINE containerCreateRequestHostnameL #-}

-- | 'containerCreateRequestDomainname' Lens
containerCreateRequestDomainnameL :: Lens_' ContainerCreateRequest (Maybe Text)
containerCreateRequestDomainnameL f ContainerCreateRequest{..} = (\containerCreateRequestDomainname -> ContainerCreateRequest { containerCreateRequestDomainname, ..} ) <$> f containerCreateRequestDomainname
{-# INLINE containerCreateRequestDomainnameL #-}

-- | 'containerCreateRequestUser' Lens
containerCreateRequestUserL :: Lens_' ContainerCreateRequest (Maybe Text)
containerCreateRequestUserL f ContainerCreateRequest{..} = (\containerCreateRequestUser -> ContainerCreateRequest { containerCreateRequestUser, ..} ) <$> f containerCreateRequestUser
{-# INLINE containerCreateRequestUserL #-}

-- | 'containerCreateRequestAttachStdin' Lens
containerCreateRequestAttachStdinL :: Lens_' ContainerCreateRequest (Maybe Bool)
containerCreateRequestAttachStdinL f ContainerCreateRequest{..} = (\containerCreateRequestAttachStdin -> ContainerCreateRequest { containerCreateRequestAttachStdin, ..} ) <$> f containerCreateRequestAttachStdin
{-# INLINE containerCreateRequestAttachStdinL #-}

-- | 'containerCreateRequestAttachStdout' Lens
containerCreateRequestAttachStdoutL :: Lens_' ContainerCreateRequest (Maybe Bool)
containerCreateRequestAttachStdoutL f ContainerCreateRequest{..} = (\containerCreateRequestAttachStdout -> ContainerCreateRequest { containerCreateRequestAttachStdout, ..} ) <$> f containerCreateRequestAttachStdout
{-# INLINE containerCreateRequestAttachStdoutL #-}

-- | 'containerCreateRequestAttachStderr' Lens
containerCreateRequestAttachStderrL :: Lens_' ContainerCreateRequest (Maybe Bool)
containerCreateRequestAttachStderrL f ContainerCreateRequest{..} = (\containerCreateRequestAttachStderr -> ContainerCreateRequest { containerCreateRequestAttachStderr, ..} ) <$> f containerCreateRequestAttachStderr
{-# INLINE containerCreateRequestAttachStderrL #-}

-- | 'containerCreateRequestExposedPorts' Lens
containerCreateRequestExposedPortsL :: Lens_' ContainerCreateRequest (Maybe (Map.Map String A.Value))
containerCreateRequestExposedPortsL f ContainerCreateRequest{..} = (\containerCreateRequestExposedPorts -> ContainerCreateRequest { containerCreateRequestExposedPorts, ..} ) <$> f containerCreateRequestExposedPorts
{-# INLINE containerCreateRequestExposedPortsL #-}

-- | 'containerCreateRequestTty' Lens
containerCreateRequestTtyL :: Lens_' ContainerCreateRequest (Maybe Bool)
containerCreateRequestTtyL f ContainerCreateRequest{..} = (\containerCreateRequestTty -> ContainerCreateRequest { containerCreateRequestTty, ..} ) <$> f containerCreateRequestTty
{-# INLINE containerCreateRequestTtyL #-}

-- | 'containerCreateRequestOpenStdin' Lens
containerCreateRequestOpenStdinL :: Lens_' ContainerCreateRequest (Maybe Bool)
containerCreateRequestOpenStdinL f ContainerCreateRequest{..} = (\containerCreateRequestOpenStdin -> ContainerCreateRequest { containerCreateRequestOpenStdin, ..} ) <$> f containerCreateRequestOpenStdin
{-# INLINE containerCreateRequestOpenStdinL #-}

-- | 'containerCreateRequestStdinOnce' Lens
containerCreateRequestStdinOnceL :: Lens_' ContainerCreateRequest (Maybe Bool)
containerCreateRequestStdinOnceL f ContainerCreateRequest{..} = (\containerCreateRequestStdinOnce -> ContainerCreateRequest { containerCreateRequestStdinOnce, ..} ) <$> f containerCreateRequestStdinOnce
{-# INLINE containerCreateRequestStdinOnceL #-}

-- | 'containerCreateRequestEnv' Lens
containerCreateRequestEnvL :: Lens_' ContainerCreateRequest (Maybe [Text])
containerCreateRequestEnvL f ContainerCreateRequest{..} = (\containerCreateRequestEnv -> ContainerCreateRequest { containerCreateRequestEnv, ..} ) <$> f containerCreateRequestEnv
{-# INLINE containerCreateRequestEnvL #-}

-- | 'containerCreateRequestCmd' Lens
containerCreateRequestCmdL :: Lens_' ContainerCreateRequest (Maybe [Text])
containerCreateRequestCmdL f ContainerCreateRequest{..} = (\containerCreateRequestCmd -> ContainerCreateRequest { containerCreateRequestCmd, ..} ) <$> f containerCreateRequestCmd
{-# INLINE containerCreateRequestCmdL #-}

-- | 'containerCreateRequestHealthcheck' Lens
containerCreateRequestHealthcheckL :: Lens_' ContainerCreateRequest (Maybe HealthConfig)
containerCreateRequestHealthcheckL f ContainerCreateRequest{..} = (\containerCreateRequestHealthcheck -> ContainerCreateRequest { containerCreateRequestHealthcheck, ..} ) <$> f containerCreateRequestHealthcheck
{-# INLINE containerCreateRequestHealthcheckL #-}

-- | 'containerCreateRequestArgsEscaped' Lens
containerCreateRequestArgsEscapedL :: Lens_' ContainerCreateRequest (Maybe Bool)
containerCreateRequestArgsEscapedL f ContainerCreateRequest{..} = (\containerCreateRequestArgsEscaped -> ContainerCreateRequest { containerCreateRequestArgsEscaped, ..} ) <$> f containerCreateRequestArgsEscaped
{-# INLINE containerCreateRequestArgsEscapedL #-}

-- | 'containerCreateRequestImage' Lens
containerCreateRequestImageL :: Lens_' ContainerCreateRequest (Maybe Text)
containerCreateRequestImageL f ContainerCreateRequest{..} = (\containerCreateRequestImage -> ContainerCreateRequest { containerCreateRequestImage, ..} ) <$> f containerCreateRequestImage
{-# INLINE containerCreateRequestImageL #-}

-- | 'containerCreateRequestVolumes' Lens
containerCreateRequestVolumesL :: Lens_' ContainerCreateRequest (Maybe (Map.Map String A.Value))
containerCreateRequestVolumesL f ContainerCreateRequest{..} = (\containerCreateRequestVolumes -> ContainerCreateRequest { containerCreateRequestVolumes, ..} ) <$> f containerCreateRequestVolumes
{-# INLINE containerCreateRequestVolumesL #-}

-- | 'containerCreateRequestWorkingDir' Lens
containerCreateRequestWorkingDirL :: Lens_' ContainerCreateRequest (Maybe Text)
containerCreateRequestWorkingDirL f ContainerCreateRequest{..} = (\containerCreateRequestWorkingDir -> ContainerCreateRequest { containerCreateRequestWorkingDir, ..} ) <$> f containerCreateRequestWorkingDir
{-# INLINE containerCreateRequestWorkingDirL #-}

-- | 'containerCreateRequestEntrypoint' Lens
containerCreateRequestEntrypointL :: Lens_' ContainerCreateRequest (Maybe [Text])
containerCreateRequestEntrypointL f ContainerCreateRequest{..} = (\containerCreateRequestEntrypoint -> ContainerCreateRequest { containerCreateRequestEntrypoint, ..} ) <$> f containerCreateRequestEntrypoint
{-# INLINE containerCreateRequestEntrypointL #-}

-- | 'containerCreateRequestNetworkDisabled' Lens
containerCreateRequestNetworkDisabledL :: Lens_' ContainerCreateRequest (Maybe Bool)
containerCreateRequestNetworkDisabledL f ContainerCreateRequest{..} = (\containerCreateRequestNetworkDisabled -> ContainerCreateRequest { containerCreateRequestNetworkDisabled, ..} ) <$> f containerCreateRequestNetworkDisabled
{-# INLINE containerCreateRequestNetworkDisabledL #-}

-- | 'containerCreateRequestMacAddress' Lens
containerCreateRequestMacAddressL :: Lens_' ContainerCreateRequest (Maybe Text)
containerCreateRequestMacAddressL f ContainerCreateRequest{..} = (\containerCreateRequestMacAddress -> ContainerCreateRequest { containerCreateRequestMacAddress, ..} ) <$> f containerCreateRequestMacAddress
{-# INLINE containerCreateRequestMacAddressL #-}

-- | 'containerCreateRequestOnBuild' Lens
containerCreateRequestOnBuildL :: Lens_' ContainerCreateRequest (Maybe [Text])
containerCreateRequestOnBuildL f ContainerCreateRequest{..} = (\containerCreateRequestOnBuild -> ContainerCreateRequest { containerCreateRequestOnBuild, ..} ) <$> f containerCreateRequestOnBuild
{-# INLINE containerCreateRequestOnBuildL #-}

-- | 'containerCreateRequestLabels' Lens
containerCreateRequestLabelsL :: Lens_' ContainerCreateRequest (Maybe (Map.Map String Text))
containerCreateRequestLabelsL f ContainerCreateRequest{..} = (\containerCreateRequestLabels -> ContainerCreateRequest { containerCreateRequestLabels, ..} ) <$> f containerCreateRequestLabels
{-# INLINE containerCreateRequestLabelsL #-}

-- | 'containerCreateRequestStopSignal' Lens
containerCreateRequestStopSignalL :: Lens_' ContainerCreateRequest (Maybe Text)
containerCreateRequestStopSignalL f ContainerCreateRequest{..} = (\containerCreateRequestStopSignal -> ContainerCreateRequest { containerCreateRequestStopSignal, ..} ) <$> f containerCreateRequestStopSignal
{-# INLINE containerCreateRequestStopSignalL #-}

-- | 'containerCreateRequestStopTimeout' Lens
containerCreateRequestStopTimeoutL :: Lens_' ContainerCreateRequest (Maybe Int)
containerCreateRequestStopTimeoutL f ContainerCreateRequest{..} = (\containerCreateRequestStopTimeout -> ContainerCreateRequest { containerCreateRequestStopTimeout, ..} ) <$> f containerCreateRequestStopTimeout
{-# INLINE containerCreateRequestStopTimeoutL #-}

-- | 'containerCreateRequestShell' Lens
containerCreateRequestShellL :: Lens_' ContainerCreateRequest (Maybe [Text])
containerCreateRequestShellL f ContainerCreateRequest{..} = (\containerCreateRequestShell -> ContainerCreateRequest { containerCreateRequestShell, ..} ) <$> f containerCreateRequestShell
{-# INLINE containerCreateRequestShellL #-}

-- | 'containerCreateRequestHostConfig' Lens
containerCreateRequestHostConfigL :: Lens_' ContainerCreateRequest (Maybe HostConfig)
containerCreateRequestHostConfigL f ContainerCreateRequest{..} = (\containerCreateRequestHostConfig -> ContainerCreateRequest { containerCreateRequestHostConfig, ..} ) <$> f containerCreateRequestHostConfig
{-# INLINE containerCreateRequestHostConfigL #-}

-- | 'containerCreateRequestNetworkingConfig' Lens
containerCreateRequestNetworkingConfigL :: Lens_' ContainerCreateRequest (Maybe ContainerCreateRequestAllOfNetworkingConfig)
containerCreateRequestNetworkingConfigL f ContainerCreateRequest{..} = (\containerCreateRequestNetworkingConfig -> ContainerCreateRequest { containerCreateRequestNetworkingConfig, ..} ) <$> f containerCreateRequestNetworkingConfig
{-# INLINE containerCreateRequestNetworkingConfigL #-}



-- * ContainerCreateRequestAllOfNetworkingConfig

-- | 'containerCreateRequestAllOfNetworkingConfigEndpointsConfig' Lens
containerCreateRequestAllOfNetworkingConfigEndpointsConfigL :: Lens_' ContainerCreateRequestAllOfNetworkingConfig (Maybe (Map.Map String EndpointSettings))
containerCreateRequestAllOfNetworkingConfigEndpointsConfigL f ContainerCreateRequestAllOfNetworkingConfig{..} = (\containerCreateRequestAllOfNetworkingConfigEndpointsConfig -> ContainerCreateRequestAllOfNetworkingConfig { containerCreateRequestAllOfNetworkingConfigEndpointsConfig, ..} ) <$> f containerCreateRequestAllOfNetworkingConfigEndpointsConfig
{-# INLINE containerCreateRequestAllOfNetworkingConfigEndpointsConfigL #-}



-- * ContainerCreateResponse

-- | 'containerCreateResponseId' Lens
containerCreateResponseIdL :: Lens_' ContainerCreateResponse (Text)
containerCreateResponseIdL f ContainerCreateResponse{..} = (\containerCreateResponseId -> ContainerCreateResponse { containerCreateResponseId, ..} ) <$> f containerCreateResponseId
{-# INLINE containerCreateResponseIdL #-}

-- | 'containerCreateResponseWarnings' Lens
containerCreateResponseWarningsL :: Lens_' ContainerCreateResponse ([Text])
containerCreateResponseWarningsL f ContainerCreateResponse{..} = (\containerCreateResponseWarnings -> ContainerCreateResponse { containerCreateResponseWarnings, ..} ) <$> f containerCreateResponseWarnings
{-# INLINE containerCreateResponseWarningsL #-}



-- * ContainerExecRequest

-- | 'containerExecRequestAttachStdin' Lens
containerExecRequestAttachStdinL :: Lens_' ContainerExecRequest (Maybe Bool)
containerExecRequestAttachStdinL f ContainerExecRequest{..} = (\containerExecRequestAttachStdin -> ContainerExecRequest { containerExecRequestAttachStdin, ..} ) <$> f containerExecRequestAttachStdin
{-# INLINE containerExecRequestAttachStdinL #-}

-- | 'containerExecRequestAttachStdout' Lens
containerExecRequestAttachStdoutL :: Lens_' ContainerExecRequest (Maybe Bool)
containerExecRequestAttachStdoutL f ContainerExecRequest{..} = (\containerExecRequestAttachStdout -> ContainerExecRequest { containerExecRequestAttachStdout, ..} ) <$> f containerExecRequestAttachStdout
{-# INLINE containerExecRequestAttachStdoutL #-}

-- | 'containerExecRequestAttachStderr' Lens
containerExecRequestAttachStderrL :: Lens_' ContainerExecRequest (Maybe Bool)
containerExecRequestAttachStderrL f ContainerExecRequest{..} = (\containerExecRequestAttachStderr -> ContainerExecRequest { containerExecRequestAttachStderr, ..} ) <$> f containerExecRequestAttachStderr
{-# INLINE containerExecRequestAttachStderrL #-}

-- | 'containerExecRequestDetachKeys' Lens
containerExecRequestDetachKeysL :: Lens_' ContainerExecRequest (Maybe Text)
containerExecRequestDetachKeysL f ContainerExecRequest{..} = (\containerExecRequestDetachKeys -> ContainerExecRequest { containerExecRequestDetachKeys, ..} ) <$> f containerExecRequestDetachKeys
{-# INLINE containerExecRequestDetachKeysL #-}

-- | 'containerExecRequestTty' Lens
containerExecRequestTtyL :: Lens_' ContainerExecRequest (Maybe Bool)
containerExecRequestTtyL f ContainerExecRequest{..} = (\containerExecRequestTty -> ContainerExecRequest { containerExecRequestTty, ..} ) <$> f containerExecRequestTty
{-# INLINE containerExecRequestTtyL #-}

-- | 'containerExecRequestEnv' Lens
containerExecRequestEnvL :: Lens_' ContainerExecRequest (Maybe [Text])
containerExecRequestEnvL f ContainerExecRequest{..} = (\containerExecRequestEnv -> ContainerExecRequest { containerExecRequestEnv, ..} ) <$> f containerExecRequestEnv
{-# INLINE containerExecRequestEnvL #-}

-- | 'containerExecRequestCmd' Lens
containerExecRequestCmdL :: Lens_' ContainerExecRequest (Maybe [Text])
containerExecRequestCmdL f ContainerExecRequest{..} = (\containerExecRequestCmd -> ContainerExecRequest { containerExecRequestCmd, ..} ) <$> f containerExecRequestCmd
{-# INLINE containerExecRequestCmdL #-}

-- | 'containerExecRequestPrivileged' Lens
containerExecRequestPrivilegedL :: Lens_' ContainerExecRequest (Maybe Bool)
containerExecRequestPrivilegedL f ContainerExecRequest{..} = (\containerExecRequestPrivileged -> ContainerExecRequest { containerExecRequestPrivileged, ..} ) <$> f containerExecRequestPrivileged
{-# INLINE containerExecRequestPrivilegedL #-}

-- | 'containerExecRequestUser' Lens
containerExecRequestUserL :: Lens_' ContainerExecRequest (Maybe Text)
containerExecRequestUserL f ContainerExecRequest{..} = (\containerExecRequestUser -> ContainerExecRequest { containerExecRequestUser, ..} ) <$> f containerExecRequestUser
{-# INLINE containerExecRequestUserL #-}

-- | 'containerExecRequestWorkingDir' Lens
containerExecRequestWorkingDirL :: Lens_' ContainerExecRequest (Maybe Text)
containerExecRequestWorkingDirL f ContainerExecRequest{..} = (\containerExecRequestWorkingDir -> ContainerExecRequest { containerExecRequestWorkingDir, ..} ) <$> f containerExecRequestWorkingDir
{-# INLINE containerExecRequestWorkingDirL #-}



-- * ContainerInspectResponse

-- | 'containerInspectResponseId' Lens
containerInspectResponseIdL :: Lens_' ContainerInspectResponse (Maybe Text)
containerInspectResponseIdL f ContainerInspectResponse{..} = (\containerInspectResponseId -> ContainerInspectResponse { containerInspectResponseId, ..} ) <$> f containerInspectResponseId
{-# INLINE containerInspectResponseIdL #-}

-- | 'containerInspectResponseCreated' Lens
containerInspectResponseCreatedL :: Lens_' ContainerInspectResponse (Maybe Text)
containerInspectResponseCreatedL f ContainerInspectResponse{..} = (\containerInspectResponseCreated -> ContainerInspectResponse { containerInspectResponseCreated, ..} ) <$> f containerInspectResponseCreated
{-# INLINE containerInspectResponseCreatedL #-}

-- | 'containerInspectResponsePath' Lens
containerInspectResponsePathL :: Lens_' ContainerInspectResponse (Maybe Text)
containerInspectResponsePathL f ContainerInspectResponse{..} = (\containerInspectResponsePath -> ContainerInspectResponse { containerInspectResponsePath, ..} ) <$> f containerInspectResponsePath
{-# INLINE containerInspectResponsePathL #-}

-- | 'containerInspectResponseArgs' Lens
containerInspectResponseArgsL :: Lens_' ContainerInspectResponse (Maybe [Text])
containerInspectResponseArgsL f ContainerInspectResponse{..} = (\containerInspectResponseArgs -> ContainerInspectResponse { containerInspectResponseArgs, ..} ) <$> f containerInspectResponseArgs
{-# INLINE containerInspectResponseArgsL #-}

-- | 'containerInspectResponseState' Lens
containerInspectResponseStateL :: Lens_' ContainerInspectResponse (Maybe ContainerInspectResponseState)
containerInspectResponseStateL f ContainerInspectResponse{..} = (\containerInspectResponseState -> ContainerInspectResponse { containerInspectResponseState, ..} ) <$> f containerInspectResponseState
{-# INLINE containerInspectResponseStateL #-}

-- | 'containerInspectResponseImage' Lens
containerInspectResponseImageL :: Lens_' ContainerInspectResponse (Maybe Text)
containerInspectResponseImageL f ContainerInspectResponse{..} = (\containerInspectResponseImage -> ContainerInspectResponse { containerInspectResponseImage, ..} ) <$> f containerInspectResponseImage
{-# INLINE containerInspectResponseImageL #-}

-- | 'containerInspectResponseResolvConfPath' Lens
containerInspectResponseResolvConfPathL :: Lens_' ContainerInspectResponse (Maybe Text)
containerInspectResponseResolvConfPathL f ContainerInspectResponse{..} = (\containerInspectResponseResolvConfPath -> ContainerInspectResponse { containerInspectResponseResolvConfPath, ..} ) <$> f containerInspectResponseResolvConfPath
{-# INLINE containerInspectResponseResolvConfPathL #-}

-- | 'containerInspectResponseHostnamePath' Lens
containerInspectResponseHostnamePathL :: Lens_' ContainerInspectResponse (Maybe Text)
containerInspectResponseHostnamePathL f ContainerInspectResponse{..} = (\containerInspectResponseHostnamePath -> ContainerInspectResponse { containerInspectResponseHostnamePath, ..} ) <$> f containerInspectResponseHostnamePath
{-# INLINE containerInspectResponseHostnamePathL #-}

-- | 'containerInspectResponseHostsPath' Lens
containerInspectResponseHostsPathL :: Lens_' ContainerInspectResponse (Maybe Text)
containerInspectResponseHostsPathL f ContainerInspectResponse{..} = (\containerInspectResponseHostsPath -> ContainerInspectResponse { containerInspectResponseHostsPath, ..} ) <$> f containerInspectResponseHostsPath
{-# INLINE containerInspectResponseHostsPathL #-}

-- | 'containerInspectResponseLogPath' Lens
containerInspectResponseLogPathL :: Lens_' ContainerInspectResponse (Maybe Text)
containerInspectResponseLogPathL f ContainerInspectResponse{..} = (\containerInspectResponseLogPath -> ContainerInspectResponse { containerInspectResponseLogPath, ..} ) <$> f containerInspectResponseLogPath
{-# INLINE containerInspectResponseLogPathL #-}

-- | 'containerInspectResponseNode' Lens
containerInspectResponseNodeL :: Lens_' ContainerInspectResponse (Maybe A.Value)
containerInspectResponseNodeL f ContainerInspectResponse{..} = (\containerInspectResponseNode -> ContainerInspectResponse { containerInspectResponseNode, ..} ) <$> f containerInspectResponseNode
{-# INLINE containerInspectResponseNodeL #-}

-- | 'containerInspectResponseName' Lens
containerInspectResponseNameL :: Lens_' ContainerInspectResponse (Maybe Text)
containerInspectResponseNameL f ContainerInspectResponse{..} = (\containerInspectResponseName -> ContainerInspectResponse { containerInspectResponseName, ..} ) <$> f containerInspectResponseName
{-# INLINE containerInspectResponseNameL #-}

-- | 'containerInspectResponseRestartCount' Lens
containerInspectResponseRestartCountL :: Lens_' ContainerInspectResponse (Maybe Int)
containerInspectResponseRestartCountL f ContainerInspectResponse{..} = (\containerInspectResponseRestartCount -> ContainerInspectResponse { containerInspectResponseRestartCount, ..} ) <$> f containerInspectResponseRestartCount
{-# INLINE containerInspectResponseRestartCountL #-}

-- | 'containerInspectResponseDriver' Lens
containerInspectResponseDriverL :: Lens_' ContainerInspectResponse (Maybe Text)
containerInspectResponseDriverL f ContainerInspectResponse{..} = (\containerInspectResponseDriver -> ContainerInspectResponse { containerInspectResponseDriver, ..} ) <$> f containerInspectResponseDriver
{-# INLINE containerInspectResponseDriverL #-}

-- | 'containerInspectResponseMountLabel' Lens
containerInspectResponseMountLabelL :: Lens_' ContainerInspectResponse (Maybe Text)
containerInspectResponseMountLabelL f ContainerInspectResponse{..} = (\containerInspectResponseMountLabel -> ContainerInspectResponse { containerInspectResponseMountLabel, ..} ) <$> f containerInspectResponseMountLabel
{-# INLINE containerInspectResponseMountLabelL #-}

-- | 'containerInspectResponseProcessLabel' Lens
containerInspectResponseProcessLabelL :: Lens_' ContainerInspectResponse (Maybe Text)
containerInspectResponseProcessLabelL f ContainerInspectResponse{..} = (\containerInspectResponseProcessLabel -> ContainerInspectResponse { containerInspectResponseProcessLabel, ..} ) <$> f containerInspectResponseProcessLabel
{-# INLINE containerInspectResponseProcessLabelL #-}

-- | 'containerInspectResponseAppArmorProfile' Lens
containerInspectResponseAppArmorProfileL :: Lens_' ContainerInspectResponse (Maybe Text)
containerInspectResponseAppArmorProfileL f ContainerInspectResponse{..} = (\containerInspectResponseAppArmorProfile -> ContainerInspectResponse { containerInspectResponseAppArmorProfile, ..} ) <$> f containerInspectResponseAppArmorProfile
{-# INLINE containerInspectResponseAppArmorProfileL #-}

-- | 'containerInspectResponseExecIds' Lens
containerInspectResponseExecIdsL :: Lens_' ContainerInspectResponse (Maybe [Text])
containerInspectResponseExecIdsL f ContainerInspectResponse{..} = (\containerInspectResponseExecIds -> ContainerInspectResponse { containerInspectResponseExecIds, ..} ) <$> f containerInspectResponseExecIds
{-# INLINE containerInspectResponseExecIdsL #-}

-- | 'containerInspectResponseHostConfig' Lens
containerInspectResponseHostConfigL :: Lens_' ContainerInspectResponse (Maybe HostConfig)
containerInspectResponseHostConfigL f ContainerInspectResponse{..} = (\containerInspectResponseHostConfig -> ContainerInspectResponse { containerInspectResponseHostConfig, ..} ) <$> f containerInspectResponseHostConfig
{-# INLINE containerInspectResponseHostConfigL #-}

-- | 'containerInspectResponseGraphDriver' Lens
containerInspectResponseGraphDriverL :: Lens_' ContainerInspectResponse (Maybe GraphDriverData)
containerInspectResponseGraphDriverL f ContainerInspectResponse{..} = (\containerInspectResponseGraphDriver -> ContainerInspectResponse { containerInspectResponseGraphDriver, ..} ) <$> f containerInspectResponseGraphDriver
{-# INLINE containerInspectResponseGraphDriverL #-}

-- | 'containerInspectResponseSizeRw' Lens
containerInspectResponseSizeRwL :: Lens_' ContainerInspectResponse (Maybe Integer)
containerInspectResponseSizeRwL f ContainerInspectResponse{..} = (\containerInspectResponseSizeRw -> ContainerInspectResponse { containerInspectResponseSizeRw, ..} ) <$> f containerInspectResponseSizeRw
{-# INLINE containerInspectResponseSizeRwL #-}

-- | 'containerInspectResponseSizeRootFs' Lens
containerInspectResponseSizeRootFsL :: Lens_' ContainerInspectResponse (Maybe Integer)
containerInspectResponseSizeRootFsL f ContainerInspectResponse{..} = (\containerInspectResponseSizeRootFs -> ContainerInspectResponse { containerInspectResponseSizeRootFs, ..} ) <$> f containerInspectResponseSizeRootFs
{-# INLINE containerInspectResponseSizeRootFsL #-}

-- | 'containerInspectResponseMounts' Lens
containerInspectResponseMountsL :: Lens_' ContainerInspectResponse (Maybe [MountPoint])
containerInspectResponseMountsL f ContainerInspectResponse{..} = (\containerInspectResponseMounts -> ContainerInspectResponse { containerInspectResponseMounts, ..} ) <$> f containerInspectResponseMounts
{-# INLINE containerInspectResponseMountsL #-}

-- | 'containerInspectResponseConfig' Lens
containerInspectResponseConfigL :: Lens_' ContainerInspectResponse (Maybe ContainerConfig)
containerInspectResponseConfigL f ContainerInspectResponse{..} = (\containerInspectResponseConfig -> ContainerInspectResponse { containerInspectResponseConfig, ..} ) <$> f containerInspectResponseConfig
{-# INLINE containerInspectResponseConfigL #-}

-- | 'containerInspectResponseNetworkSettings' Lens
containerInspectResponseNetworkSettingsL :: Lens_' ContainerInspectResponse (Maybe NetworkSettings)
containerInspectResponseNetworkSettingsL f ContainerInspectResponse{..} = (\containerInspectResponseNetworkSettings -> ContainerInspectResponse { containerInspectResponseNetworkSettings, ..} ) <$> f containerInspectResponseNetworkSettings
{-# INLINE containerInspectResponseNetworkSettingsL #-}



-- * ContainerInspectResponseState

-- | 'containerInspectResponseStateStatus' Lens
containerInspectResponseStateStatusL :: Lens_' ContainerInspectResponseState (Maybe E'Status)
containerInspectResponseStateStatusL f ContainerInspectResponseState{..} = (\containerInspectResponseStateStatus -> ContainerInspectResponseState { containerInspectResponseStateStatus, ..} ) <$> f containerInspectResponseStateStatus
{-# INLINE containerInspectResponseStateStatusL #-}

-- | 'containerInspectResponseStateRunning' Lens
containerInspectResponseStateRunningL :: Lens_' ContainerInspectResponseState (Maybe Bool)
containerInspectResponseStateRunningL f ContainerInspectResponseState{..} = (\containerInspectResponseStateRunning -> ContainerInspectResponseState { containerInspectResponseStateRunning, ..} ) <$> f containerInspectResponseStateRunning
{-# INLINE containerInspectResponseStateRunningL #-}

-- | 'containerInspectResponseStatePaused' Lens
containerInspectResponseStatePausedL :: Lens_' ContainerInspectResponseState (Maybe Bool)
containerInspectResponseStatePausedL f ContainerInspectResponseState{..} = (\containerInspectResponseStatePaused -> ContainerInspectResponseState { containerInspectResponseStatePaused, ..} ) <$> f containerInspectResponseStatePaused
{-# INLINE containerInspectResponseStatePausedL #-}

-- | 'containerInspectResponseStateRestarting' Lens
containerInspectResponseStateRestartingL :: Lens_' ContainerInspectResponseState (Maybe Bool)
containerInspectResponseStateRestartingL f ContainerInspectResponseState{..} = (\containerInspectResponseStateRestarting -> ContainerInspectResponseState { containerInspectResponseStateRestarting, ..} ) <$> f containerInspectResponseStateRestarting
{-# INLINE containerInspectResponseStateRestartingL #-}

-- | 'containerInspectResponseStateOomKilled' Lens
containerInspectResponseStateOomKilledL :: Lens_' ContainerInspectResponseState (Maybe Bool)
containerInspectResponseStateOomKilledL f ContainerInspectResponseState{..} = (\containerInspectResponseStateOomKilled -> ContainerInspectResponseState { containerInspectResponseStateOomKilled, ..} ) <$> f containerInspectResponseStateOomKilled
{-# INLINE containerInspectResponseStateOomKilledL #-}

-- | 'containerInspectResponseStateDead' Lens
containerInspectResponseStateDeadL :: Lens_' ContainerInspectResponseState (Maybe Bool)
containerInspectResponseStateDeadL f ContainerInspectResponseState{..} = (\containerInspectResponseStateDead -> ContainerInspectResponseState { containerInspectResponseStateDead, ..} ) <$> f containerInspectResponseStateDead
{-# INLINE containerInspectResponseStateDeadL #-}

-- | 'containerInspectResponseStatePid' Lens
containerInspectResponseStatePidL :: Lens_' ContainerInspectResponseState (Maybe Int)
containerInspectResponseStatePidL f ContainerInspectResponseState{..} = (\containerInspectResponseStatePid -> ContainerInspectResponseState { containerInspectResponseStatePid, ..} ) <$> f containerInspectResponseStatePid
{-# INLINE containerInspectResponseStatePidL #-}

-- | 'containerInspectResponseStateExitCode' Lens
containerInspectResponseStateExitCodeL :: Lens_' ContainerInspectResponseState (Maybe Int)
containerInspectResponseStateExitCodeL f ContainerInspectResponseState{..} = (\containerInspectResponseStateExitCode -> ContainerInspectResponseState { containerInspectResponseStateExitCode, ..} ) <$> f containerInspectResponseStateExitCode
{-# INLINE containerInspectResponseStateExitCodeL #-}

-- | 'containerInspectResponseStateError' Lens
containerInspectResponseStateErrorL :: Lens_' ContainerInspectResponseState (Maybe Text)
containerInspectResponseStateErrorL f ContainerInspectResponseState{..} = (\containerInspectResponseStateError -> ContainerInspectResponseState { containerInspectResponseStateError, ..} ) <$> f containerInspectResponseStateError
{-# INLINE containerInspectResponseStateErrorL #-}

-- | 'containerInspectResponseStateStartedAt' Lens
containerInspectResponseStateStartedAtL :: Lens_' ContainerInspectResponseState (Maybe Text)
containerInspectResponseStateStartedAtL f ContainerInspectResponseState{..} = (\containerInspectResponseStateStartedAt -> ContainerInspectResponseState { containerInspectResponseStateStartedAt, ..} ) <$> f containerInspectResponseStateStartedAt
{-# INLINE containerInspectResponseStateStartedAtL #-}

-- | 'containerInspectResponseStateFinishedAt' Lens
containerInspectResponseStateFinishedAtL :: Lens_' ContainerInspectResponseState (Maybe Text)
containerInspectResponseStateFinishedAtL f ContainerInspectResponseState{..} = (\containerInspectResponseStateFinishedAt -> ContainerInspectResponseState { containerInspectResponseStateFinishedAt, ..} ) <$> f containerInspectResponseStateFinishedAt
{-# INLINE containerInspectResponseStateFinishedAtL #-}



-- * ContainerPruneResponse

-- | 'containerPruneResponseContainersDeleted' Lens
containerPruneResponseContainersDeletedL :: Lens_' ContainerPruneResponse (Maybe [Text])
containerPruneResponseContainersDeletedL f ContainerPruneResponse{..} = (\containerPruneResponseContainersDeleted -> ContainerPruneResponse { containerPruneResponseContainersDeleted, ..} ) <$> f containerPruneResponseContainersDeleted
{-# INLINE containerPruneResponseContainersDeletedL #-}

-- | 'containerPruneResponseSpaceReclaimed' Lens
containerPruneResponseSpaceReclaimedL :: Lens_' ContainerPruneResponse (Maybe Integer)
containerPruneResponseSpaceReclaimedL f ContainerPruneResponse{..} = (\containerPruneResponseSpaceReclaimed -> ContainerPruneResponse { containerPruneResponseSpaceReclaimed, ..} ) <$> f containerPruneResponseSpaceReclaimed
{-# INLINE containerPruneResponseSpaceReclaimedL #-}



-- * ContainerSummaryInner

-- | 'containerSummaryInnerId' Lens
containerSummaryInnerIdL :: Lens_' ContainerSummaryInner (Maybe Text)
containerSummaryInnerIdL f ContainerSummaryInner{..} = (\containerSummaryInnerId -> ContainerSummaryInner { containerSummaryInnerId, ..} ) <$> f containerSummaryInnerId
{-# INLINE containerSummaryInnerIdL #-}

-- | 'containerSummaryInnerNames' Lens
containerSummaryInnerNamesL :: Lens_' ContainerSummaryInner (Maybe [Text])
containerSummaryInnerNamesL f ContainerSummaryInner{..} = (\containerSummaryInnerNames -> ContainerSummaryInner { containerSummaryInnerNames, ..} ) <$> f containerSummaryInnerNames
{-# INLINE containerSummaryInnerNamesL #-}

-- | 'containerSummaryInnerImage' Lens
containerSummaryInnerImageL :: Lens_' ContainerSummaryInner (Maybe Text)
containerSummaryInnerImageL f ContainerSummaryInner{..} = (\containerSummaryInnerImage -> ContainerSummaryInner { containerSummaryInnerImage, ..} ) <$> f containerSummaryInnerImage
{-# INLINE containerSummaryInnerImageL #-}

-- | 'containerSummaryInnerImageId' Lens
containerSummaryInnerImageIdL :: Lens_' ContainerSummaryInner (Maybe Text)
containerSummaryInnerImageIdL f ContainerSummaryInner{..} = (\containerSummaryInnerImageId -> ContainerSummaryInner { containerSummaryInnerImageId, ..} ) <$> f containerSummaryInnerImageId
{-# INLINE containerSummaryInnerImageIdL #-}

-- | 'containerSummaryInnerCommand' Lens
containerSummaryInnerCommandL :: Lens_' ContainerSummaryInner (Maybe Text)
containerSummaryInnerCommandL f ContainerSummaryInner{..} = (\containerSummaryInnerCommand -> ContainerSummaryInner { containerSummaryInnerCommand, ..} ) <$> f containerSummaryInnerCommand
{-# INLINE containerSummaryInnerCommandL #-}

-- | 'containerSummaryInnerCreated' Lens
containerSummaryInnerCreatedL :: Lens_' ContainerSummaryInner (Maybe Integer)
containerSummaryInnerCreatedL f ContainerSummaryInner{..} = (\containerSummaryInnerCreated -> ContainerSummaryInner { containerSummaryInnerCreated, ..} ) <$> f containerSummaryInnerCreated
{-# INLINE containerSummaryInnerCreatedL #-}

-- | 'containerSummaryInnerPorts' Lens
containerSummaryInnerPortsL :: Lens_' ContainerSummaryInner (Maybe [Port])
containerSummaryInnerPortsL f ContainerSummaryInner{..} = (\containerSummaryInnerPorts -> ContainerSummaryInner { containerSummaryInnerPorts, ..} ) <$> f containerSummaryInnerPorts
{-# INLINE containerSummaryInnerPortsL #-}

-- | 'containerSummaryInnerSizeRw' Lens
containerSummaryInnerSizeRwL :: Lens_' ContainerSummaryInner (Maybe Integer)
containerSummaryInnerSizeRwL f ContainerSummaryInner{..} = (\containerSummaryInnerSizeRw -> ContainerSummaryInner { containerSummaryInnerSizeRw, ..} ) <$> f containerSummaryInnerSizeRw
{-# INLINE containerSummaryInnerSizeRwL #-}

-- | 'containerSummaryInnerSizeRootFs' Lens
containerSummaryInnerSizeRootFsL :: Lens_' ContainerSummaryInner (Maybe Integer)
containerSummaryInnerSizeRootFsL f ContainerSummaryInner{..} = (\containerSummaryInnerSizeRootFs -> ContainerSummaryInner { containerSummaryInnerSizeRootFs, ..} ) <$> f containerSummaryInnerSizeRootFs
{-# INLINE containerSummaryInnerSizeRootFsL #-}

-- | 'containerSummaryInnerLabels' Lens
containerSummaryInnerLabelsL :: Lens_' ContainerSummaryInner (Maybe (Map.Map String Text))
containerSummaryInnerLabelsL f ContainerSummaryInner{..} = (\containerSummaryInnerLabels -> ContainerSummaryInner { containerSummaryInnerLabels, ..} ) <$> f containerSummaryInnerLabels
{-# INLINE containerSummaryInnerLabelsL #-}

-- | 'containerSummaryInnerState' Lens
containerSummaryInnerStateL :: Lens_' ContainerSummaryInner (Maybe Text)
containerSummaryInnerStateL f ContainerSummaryInner{..} = (\containerSummaryInnerState -> ContainerSummaryInner { containerSummaryInnerState, ..} ) <$> f containerSummaryInnerState
{-# INLINE containerSummaryInnerStateL #-}

-- | 'containerSummaryInnerStatus' Lens
containerSummaryInnerStatusL :: Lens_' ContainerSummaryInner (Maybe Text)
containerSummaryInnerStatusL f ContainerSummaryInner{..} = (\containerSummaryInnerStatus -> ContainerSummaryInner { containerSummaryInnerStatus, ..} ) <$> f containerSummaryInnerStatus
{-# INLINE containerSummaryInnerStatusL #-}

-- | 'containerSummaryInnerHostConfig' Lens
containerSummaryInnerHostConfigL :: Lens_' ContainerSummaryInner (Maybe ContainerSummaryInnerHostConfig)
containerSummaryInnerHostConfigL f ContainerSummaryInner{..} = (\containerSummaryInnerHostConfig -> ContainerSummaryInner { containerSummaryInnerHostConfig, ..} ) <$> f containerSummaryInnerHostConfig
{-# INLINE containerSummaryInnerHostConfigL #-}

-- | 'containerSummaryInnerNetworkSettings' Lens
containerSummaryInnerNetworkSettingsL :: Lens_' ContainerSummaryInner (Maybe ContainerSummaryInnerNetworkSettings)
containerSummaryInnerNetworkSettingsL f ContainerSummaryInner{..} = (\containerSummaryInnerNetworkSettings -> ContainerSummaryInner { containerSummaryInnerNetworkSettings, ..} ) <$> f containerSummaryInnerNetworkSettings
{-# INLINE containerSummaryInnerNetworkSettingsL #-}

-- | 'containerSummaryInnerMounts' Lens
containerSummaryInnerMountsL :: Lens_' ContainerSummaryInner (Maybe [MountPoint])
containerSummaryInnerMountsL f ContainerSummaryInner{..} = (\containerSummaryInnerMounts -> ContainerSummaryInner { containerSummaryInnerMounts, ..} ) <$> f containerSummaryInnerMounts
{-# INLINE containerSummaryInnerMountsL #-}



-- * ContainerSummaryInnerHostConfig

-- | 'containerSummaryInnerHostConfigNetworkMode' Lens
containerSummaryInnerHostConfigNetworkModeL :: Lens_' ContainerSummaryInnerHostConfig (Maybe Text)
containerSummaryInnerHostConfigNetworkModeL f ContainerSummaryInnerHostConfig{..} = (\containerSummaryInnerHostConfigNetworkMode -> ContainerSummaryInnerHostConfig { containerSummaryInnerHostConfigNetworkMode, ..} ) <$> f containerSummaryInnerHostConfigNetworkMode
{-# INLINE containerSummaryInnerHostConfigNetworkModeL #-}



-- * ContainerSummaryInnerNetworkSettings

-- | 'containerSummaryInnerNetworkSettingsNetworks' Lens
containerSummaryInnerNetworkSettingsNetworksL :: Lens_' ContainerSummaryInnerNetworkSettings (Maybe (Map.Map String EndpointSettings))
containerSummaryInnerNetworkSettingsNetworksL f ContainerSummaryInnerNetworkSettings{..} = (\containerSummaryInnerNetworkSettingsNetworks -> ContainerSummaryInnerNetworkSettings { containerSummaryInnerNetworkSettingsNetworks, ..} ) <$> f containerSummaryInnerNetworkSettingsNetworks
{-# INLINE containerSummaryInnerNetworkSettingsNetworksL #-}



-- * ContainerTopResponse

-- | 'containerTopResponseTitles' Lens
containerTopResponseTitlesL :: Lens_' ContainerTopResponse (Maybe [Text])
containerTopResponseTitlesL f ContainerTopResponse{..} = (\containerTopResponseTitles -> ContainerTopResponse { containerTopResponseTitles, ..} ) <$> f containerTopResponseTitles
{-# INLINE containerTopResponseTitlesL #-}

-- | 'containerTopResponseProcesses' Lens
containerTopResponseProcessesL :: Lens_' ContainerTopResponse (Maybe [[Text]])
containerTopResponseProcessesL f ContainerTopResponse{..} = (\containerTopResponseProcesses -> ContainerTopResponse { containerTopResponseProcesses, ..} ) <$> f containerTopResponseProcesses
{-# INLINE containerTopResponseProcessesL #-}



-- * ContainerUpdateRequest

-- | 'containerUpdateRequestCpuShares' Lens
containerUpdateRequestCpuSharesL :: Lens_' ContainerUpdateRequest (Maybe Int)
containerUpdateRequestCpuSharesL f ContainerUpdateRequest{..} = (\containerUpdateRequestCpuShares -> ContainerUpdateRequest { containerUpdateRequestCpuShares, ..} ) <$> f containerUpdateRequestCpuShares
{-# INLINE containerUpdateRequestCpuSharesL #-}

-- | 'containerUpdateRequestMemory' Lens
containerUpdateRequestMemoryL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestMemoryL f ContainerUpdateRequest{..} = (\containerUpdateRequestMemory -> ContainerUpdateRequest { containerUpdateRequestMemory, ..} ) <$> f containerUpdateRequestMemory
{-# INLINE containerUpdateRequestMemoryL #-}

-- | 'containerUpdateRequestCgroupParent' Lens
containerUpdateRequestCgroupParentL :: Lens_' ContainerUpdateRequest (Maybe Text)
containerUpdateRequestCgroupParentL f ContainerUpdateRequest{..} = (\containerUpdateRequestCgroupParent -> ContainerUpdateRequest { containerUpdateRequestCgroupParent, ..} ) <$> f containerUpdateRequestCgroupParent
{-# INLINE containerUpdateRequestCgroupParentL #-}

-- | 'containerUpdateRequestBlkioWeight' Lens
containerUpdateRequestBlkioWeightL :: Lens_' ContainerUpdateRequest (Maybe Int)
containerUpdateRequestBlkioWeightL f ContainerUpdateRequest{..} = (\containerUpdateRequestBlkioWeight -> ContainerUpdateRequest { containerUpdateRequestBlkioWeight, ..} ) <$> f containerUpdateRequestBlkioWeight
{-# INLINE containerUpdateRequestBlkioWeightL #-}

-- | 'containerUpdateRequestBlkioWeightDevice' Lens
containerUpdateRequestBlkioWeightDeviceL :: Lens_' ContainerUpdateRequest (Maybe [ResourcesBlkioWeightDeviceInner])
containerUpdateRequestBlkioWeightDeviceL f ContainerUpdateRequest{..} = (\containerUpdateRequestBlkioWeightDevice -> ContainerUpdateRequest { containerUpdateRequestBlkioWeightDevice, ..} ) <$> f containerUpdateRequestBlkioWeightDevice
{-# INLINE containerUpdateRequestBlkioWeightDeviceL #-}

-- | 'containerUpdateRequestBlkioDeviceReadBps' Lens
containerUpdateRequestBlkioDeviceReadBpsL :: Lens_' ContainerUpdateRequest (Maybe [ThrottleDevice])
containerUpdateRequestBlkioDeviceReadBpsL f ContainerUpdateRequest{..} = (\containerUpdateRequestBlkioDeviceReadBps -> ContainerUpdateRequest { containerUpdateRequestBlkioDeviceReadBps, ..} ) <$> f containerUpdateRequestBlkioDeviceReadBps
{-# INLINE containerUpdateRequestBlkioDeviceReadBpsL #-}

-- | 'containerUpdateRequestBlkioDeviceWriteBps' Lens
containerUpdateRequestBlkioDeviceWriteBpsL :: Lens_' ContainerUpdateRequest (Maybe [ThrottleDevice])
containerUpdateRequestBlkioDeviceWriteBpsL f ContainerUpdateRequest{..} = (\containerUpdateRequestBlkioDeviceWriteBps -> ContainerUpdateRequest { containerUpdateRequestBlkioDeviceWriteBps, ..} ) <$> f containerUpdateRequestBlkioDeviceWriteBps
{-# INLINE containerUpdateRequestBlkioDeviceWriteBpsL #-}

-- | 'containerUpdateRequestBlkioDeviceReadIOps' Lens
containerUpdateRequestBlkioDeviceReadIOpsL :: Lens_' ContainerUpdateRequest (Maybe [ThrottleDevice])
containerUpdateRequestBlkioDeviceReadIOpsL f ContainerUpdateRequest{..} = (\containerUpdateRequestBlkioDeviceReadIOps -> ContainerUpdateRequest { containerUpdateRequestBlkioDeviceReadIOps, ..} ) <$> f containerUpdateRequestBlkioDeviceReadIOps
{-# INLINE containerUpdateRequestBlkioDeviceReadIOpsL #-}

-- | 'containerUpdateRequestBlkioDeviceWriteIOps' Lens
containerUpdateRequestBlkioDeviceWriteIOpsL :: Lens_' ContainerUpdateRequest (Maybe [ThrottleDevice])
containerUpdateRequestBlkioDeviceWriteIOpsL f ContainerUpdateRequest{..} = (\containerUpdateRequestBlkioDeviceWriteIOps -> ContainerUpdateRequest { containerUpdateRequestBlkioDeviceWriteIOps, ..} ) <$> f containerUpdateRequestBlkioDeviceWriteIOps
{-# INLINE containerUpdateRequestBlkioDeviceWriteIOpsL #-}

-- | 'containerUpdateRequestCpuPeriod' Lens
containerUpdateRequestCpuPeriodL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestCpuPeriodL f ContainerUpdateRequest{..} = (\containerUpdateRequestCpuPeriod -> ContainerUpdateRequest { containerUpdateRequestCpuPeriod, ..} ) <$> f containerUpdateRequestCpuPeriod
{-# INLINE containerUpdateRequestCpuPeriodL #-}

-- | 'containerUpdateRequestCpuQuota' Lens
containerUpdateRequestCpuQuotaL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestCpuQuotaL f ContainerUpdateRequest{..} = (\containerUpdateRequestCpuQuota -> ContainerUpdateRequest { containerUpdateRequestCpuQuota, ..} ) <$> f containerUpdateRequestCpuQuota
{-# INLINE containerUpdateRequestCpuQuotaL #-}

-- | 'containerUpdateRequestCpuRealtimePeriod' Lens
containerUpdateRequestCpuRealtimePeriodL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestCpuRealtimePeriodL f ContainerUpdateRequest{..} = (\containerUpdateRequestCpuRealtimePeriod -> ContainerUpdateRequest { containerUpdateRequestCpuRealtimePeriod, ..} ) <$> f containerUpdateRequestCpuRealtimePeriod
{-# INLINE containerUpdateRequestCpuRealtimePeriodL #-}

-- | 'containerUpdateRequestCpuRealtimeRuntime' Lens
containerUpdateRequestCpuRealtimeRuntimeL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestCpuRealtimeRuntimeL f ContainerUpdateRequest{..} = (\containerUpdateRequestCpuRealtimeRuntime -> ContainerUpdateRequest { containerUpdateRequestCpuRealtimeRuntime, ..} ) <$> f containerUpdateRequestCpuRealtimeRuntime
{-# INLINE containerUpdateRequestCpuRealtimeRuntimeL #-}

-- | 'containerUpdateRequestCpusetCpus' Lens
containerUpdateRequestCpusetCpusL :: Lens_' ContainerUpdateRequest (Maybe Text)
containerUpdateRequestCpusetCpusL f ContainerUpdateRequest{..} = (\containerUpdateRequestCpusetCpus -> ContainerUpdateRequest { containerUpdateRequestCpusetCpus, ..} ) <$> f containerUpdateRequestCpusetCpus
{-# INLINE containerUpdateRequestCpusetCpusL #-}

-- | 'containerUpdateRequestCpusetMems' Lens
containerUpdateRequestCpusetMemsL :: Lens_' ContainerUpdateRequest (Maybe Text)
containerUpdateRequestCpusetMemsL f ContainerUpdateRequest{..} = (\containerUpdateRequestCpusetMems -> ContainerUpdateRequest { containerUpdateRequestCpusetMems, ..} ) <$> f containerUpdateRequestCpusetMems
{-# INLINE containerUpdateRequestCpusetMemsL #-}

-- | 'containerUpdateRequestDevices' Lens
containerUpdateRequestDevicesL :: Lens_' ContainerUpdateRequest (Maybe [DeviceMapping])
containerUpdateRequestDevicesL f ContainerUpdateRequest{..} = (\containerUpdateRequestDevices -> ContainerUpdateRequest { containerUpdateRequestDevices, ..} ) <$> f containerUpdateRequestDevices
{-# INLINE containerUpdateRequestDevicesL #-}

-- | 'containerUpdateRequestDeviceCgroupRules' Lens
containerUpdateRequestDeviceCgroupRulesL :: Lens_' ContainerUpdateRequest (Maybe [Text])
containerUpdateRequestDeviceCgroupRulesL f ContainerUpdateRequest{..} = (\containerUpdateRequestDeviceCgroupRules -> ContainerUpdateRequest { containerUpdateRequestDeviceCgroupRules, ..} ) <$> f containerUpdateRequestDeviceCgroupRules
{-# INLINE containerUpdateRequestDeviceCgroupRulesL #-}

-- | 'containerUpdateRequestDiskQuota' Lens
containerUpdateRequestDiskQuotaL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestDiskQuotaL f ContainerUpdateRequest{..} = (\containerUpdateRequestDiskQuota -> ContainerUpdateRequest { containerUpdateRequestDiskQuota, ..} ) <$> f containerUpdateRequestDiskQuota
{-# INLINE containerUpdateRequestDiskQuotaL #-}

-- | 'containerUpdateRequestKernelMemory' Lens
containerUpdateRequestKernelMemoryL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestKernelMemoryL f ContainerUpdateRequest{..} = (\containerUpdateRequestKernelMemory -> ContainerUpdateRequest { containerUpdateRequestKernelMemory, ..} ) <$> f containerUpdateRequestKernelMemory
{-# INLINE containerUpdateRequestKernelMemoryL #-}

-- | 'containerUpdateRequestMemoryReservation' Lens
containerUpdateRequestMemoryReservationL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestMemoryReservationL f ContainerUpdateRequest{..} = (\containerUpdateRequestMemoryReservation -> ContainerUpdateRequest { containerUpdateRequestMemoryReservation, ..} ) <$> f containerUpdateRequestMemoryReservation
{-# INLINE containerUpdateRequestMemoryReservationL #-}

-- | 'containerUpdateRequestMemorySwap' Lens
containerUpdateRequestMemorySwapL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestMemorySwapL f ContainerUpdateRequest{..} = (\containerUpdateRequestMemorySwap -> ContainerUpdateRequest { containerUpdateRequestMemorySwap, ..} ) <$> f containerUpdateRequestMemorySwap
{-# INLINE containerUpdateRequestMemorySwapL #-}

-- | 'containerUpdateRequestMemorySwappiness' Lens
containerUpdateRequestMemorySwappinessL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestMemorySwappinessL f ContainerUpdateRequest{..} = (\containerUpdateRequestMemorySwappiness -> ContainerUpdateRequest { containerUpdateRequestMemorySwappiness, ..} ) <$> f containerUpdateRequestMemorySwappiness
{-# INLINE containerUpdateRequestMemorySwappinessL #-}

-- | 'containerUpdateRequestNanoCpus' Lens
containerUpdateRequestNanoCpusL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestNanoCpusL f ContainerUpdateRequest{..} = (\containerUpdateRequestNanoCpus -> ContainerUpdateRequest { containerUpdateRequestNanoCpus, ..} ) <$> f containerUpdateRequestNanoCpus
{-# INLINE containerUpdateRequestNanoCpusL #-}

-- | 'containerUpdateRequestOomKillDisable' Lens
containerUpdateRequestOomKillDisableL :: Lens_' ContainerUpdateRequest (Maybe Bool)
containerUpdateRequestOomKillDisableL f ContainerUpdateRequest{..} = (\containerUpdateRequestOomKillDisable -> ContainerUpdateRequest { containerUpdateRequestOomKillDisable, ..} ) <$> f containerUpdateRequestOomKillDisable
{-# INLINE containerUpdateRequestOomKillDisableL #-}

-- | 'containerUpdateRequestInit' Lens
containerUpdateRequestInitL :: Lens_' ContainerUpdateRequest (Maybe Bool)
containerUpdateRequestInitL f ContainerUpdateRequest{..} = (\containerUpdateRequestInit -> ContainerUpdateRequest { containerUpdateRequestInit, ..} ) <$> f containerUpdateRequestInit
{-# INLINE containerUpdateRequestInitL #-}

-- | 'containerUpdateRequestPidsLimit' Lens
containerUpdateRequestPidsLimitL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestPidsLimitL f ContainerUpdateRequest{..} = (\containerUpdateRequestPidsLimit -> ContainerUpdateRequest { containerUpdateRequestPidsLimit, ..} ) <$> f containerUpdateRequestPidsLimit
{-# INLINE containerUpdateRequestPidsLimitL #-}

-- | 'containerUpdateRequestUlimits' Lens
containerUpdateRequestUlimitsL :: Lens_' ContainerUpdateRequest (Maybe [ResourcesUlimitsInner])
containerUpdateRequestUlimitsL f ContainerUpdateRequest{..} = (\containerUpdateRequestUlimits -> ContainerUpdateRequest { containerUpdateRequestUlimits, ..} ) <$> f containerUpdateRequestUlimits
{-# INLINE containerUpdateRequestUlimitsL #-}

-- | 'containerUpdateRequestCpuCount' Lens
containerUpdateRequestCpuCountL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestCpuCountL f ContainerUpdateRequest{..} = (\containerUpdateRequestCpuCount -> ContainerUpdateRequest { containerUpdateRequestCpuCount, ..} ) <$> f containerUpdateRequestCpuCount
{-# INLINE containerUpdateRequestCpuCountL #-}

-- | 'containerUpdateRequestCpuPercent' Lens
containerUpdateRequestCpuPercentL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestCpuPercentL f ContainerUpdateRequest{..} = (\containerUpdateRequestCpuPercent -> ContainerUpdateRequest { containerUpdateRequestCpuPercent, ..} ) <$> f containerUpdateRequestCpuPercent
{-# INLINE containerUpdateRequestCpuPercentL #-}

-- | 'containerUpdateRequestIoMaximumIOps' Lens
containerUpdateRequestIoMaximumIOpsL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestIoMaximumIOpsL f ContainerUpdateRequest{..} = (\containerUpdateRequestIoMaximumIOps -> ContainerUpdateRequest { containerUpdateRequestIoMaximumIOps, ..} ) <$> f containerUpdateRequestIoMaximumIOps
{-# INLINE containerUpdateRequestIoMaximumIOpsL #-}

-- | 'containerUpdateRequestIoMaximumBandwidth' Lens
containerUpdateRequestIoMaximumBandwidthL :: Lens_' ContainerUpdateRequest (Maybe Integer)
containerUpdateRequestIoMaximumBandwidthL f ContainerUpdateRequest{..} = (\containerUpdateRequestIoMaximumBandwidth -> ContainerUpdateRequest { containerUpdateRequestIoMaximumBandwidth, ..} ) <$> f containerUpdateRequestIoMaximumBandwidth
{-# INLINE containerUpdateRequestIoMaximumBandwidthL #-}

-- | 'containerUpdateRequestRestartPolicy' Lens
containerUpdateRequestRestartPolicyL :: Lens_' ContainerUpdateRequest (Maybe RestartPolicy)
containerUpdateRequestRestartPolicyL f ContainerUpdateRequest{..} = (\containerUpdateRequestRestartPolicy -> ContainerUpdateRequest { containerUpdateRequestRestartPolicy, ..} ) <$> f containerUpdateRequestRestartPolicy
{-# INLINE containerUpdateRequestRestartPolicyL #-}



-- * ContainerUpdateResponse

-- | 'containerUpdateResponseWarnings' Lens
containerUpdateResponseWarningsL :: Lens_' ContainerUpdateResponse (Maybe [Text])
containerUpdateResponseWarningsL f ContainerUpdateResponse{..} = (\containerUpdateResponseWarnings -> ContainerUpdateResponse { containerUpdateResponseWarnings, ..} ) <$> f containerUpdateResponseWarnings
{-# INLINE containerUpdateResponseWarningsL #-}



-- * ContainerWaitResponse

-- | 'containerWaitResponseStatusCode' Lens
containerWaitResponseStatusCodeL :: Lens_' ContainerWaitResponse (Int)
containerWaitResponseStatusCodeL f ContainerWaitResponse{..} = (\containerWaitResponseStatusCode -> ContainerWaitResponse { containerWaitResponseStatusCode, ..} ) <$> f containerWaitResponseStatusCode
{-# INLINE containerWaitResponseStatusCodeL #-}

-- | 'containerWaitResponseError' Lens
containerWaitResponseErrorL :: Lens_' ContainerWaitResponse (Maybe ContainerWaitResponseError)
containerWaitResponseErrorL f ContainerWaitResponse{..} = (\containerWaitResponseError -> ContainerWaitResponse { containerWaitResponseError, ..} ) <$> f containerWaitResponseError
{-# INLINE containerWaitResponseErrorL #-}



-- * ContainerWaitResponseError

-- | 'containerWaitResponseErrorMessage' Lens
containerWaitResponseErrorMessageL :: Lens_' ContainerWaitResponseError (Maybe Text)
containerWaitResponseErrorMessageL f ContainerWaitResponseError{..} = (\containerWaitResponseErrorMessage -> ContainerWaitResponseError { containerWaitResponseErrorMessage, ..} ) <$> f containerWaitResponseErrorMessage
{-# INLINE containerWaitResponseErrorMessageL #-}



-- * CreateImageInfo

-- | 'createImageInfoId' Lens
createImageInfoIdL :: Lens_' CreateImageInfo (Maybe Text)
createImageInfoIdL f CreateImageInfo{..} = (\createImageInfoId -> CreateImageInfo { createImageInfoId, ..} ) <$> f createImageInfoId
{-# INLINE createImageInfoIdL #-}

-- | 'createImageInfoError' Lens
createImageInfoErrorL :: Lens_' CreateImageInfo (Maybe Text)
createImageInfoErrorL f CreateImageInfo{..} = (\createImageInfoError -> CreateImageInfo { createImageInfoError, ..} ) <$> f createImageInfoError
{-# INLINE createImageInfoErrorL #-}

-- | 'createImageInfoStatus' Lens
createImageInfoStatusL :: Lens_' CreateImageInfo (Maybe Text)
createImageInfoStatusL f CreateImageInfo{..} = (\createImageInfoStatus -> CreateImageInfo { createImageInfoStatus, ..} ) <$> f createImageInfoStatus
{-# INLINE createImageInfoStatusL #-}

-- | 'createImageInfoProgress' Lens
createImageInfoProgressL :: Lens_' CreateImageInfo (Maybe Text)
createImageInfoProgressL f CreateImageInfo{..} = (\createImageInfoProgress -> CreateImageInfo { createImageInfoProgress, ..} ) <$> f createImageInfoProgress
{-# INLINE createImageInfoProgressL #-}

-- | 'createImageInfoProgressDetail' Lens
createImageInfoProgressDetailL :: Lens_' CreateImageInfo (Maybe ProgressDetail)
createImageInfoProgressDetailL f CreateImageInfo{..} = (\createImageInfoProgressDetail -> CreateImageInfo { createImageInfoProgressDetail, ..} ) <$> f createImageInfoProgressDetail
{-# INLINE createImageInfoProgressDetailL #-}



-- * DeviceMapping

-- | 'deviceMappingPathOnHost' Lens
deviceMappingPathOnHostL :: Lens_' DeviceMapping (Maybe Text)
deviceMappingPathOnHostL f DeviceMapping{..} = (\deviceMappingPathOnHost -> DeviceMapping { deviceMappingPathOnHost, ..} ) <$> f deviceMappingPathOnHost
{-# INLINE deviceMappingPathOnHostL #-}

-- | 'deviceMappingPathInContainer' Lens
deviceMappingPathInContainerL :: Lens_' DeviceMapping (Maybe Text)
deviceMappingPathInContainerL f DeviceMapping{..} = (\deviceMappingPathInContainer -> DeviceMapping { deviceMappingPathInContainer, ..} ) <$> f deviceMappingPathInContainer
{-# INLINE deviceMappingPathInContainerL #-}

-- | 'deviceMappingCgroupPermissions' Lens
deviceMappingCgroupPermissionsL :: Lens_' DeviceMapping (Maybe Text)
deviceMappingCgroupPermissionsL f DeviceMapping{..} = (\deviceMappingCgroupPermissions -> DeviceMapping { deviceMappingCgroupPermissions, ..} ) <$> f deviceMappingCgroupPermissions
{-# INLINE deviceMappingCgroupPermissionsL #-}



-- * DistributionInspectResponse

-- | 'distributionInspectResponseDescriptor' Lens
distributionInspectResponseDescriptorL :: Lens_' DistributionInspectResponse (DistributionInspectResponseDescriptor)
distributionInspectResponseDescriptorL f DistributionInspectResponse{..} = (\distributionInspectResponseDescriptor -> DistributionInspectResponse { distributionInspectResponseDescriptor, ..} ) <$> f distributionInspectResponseDescriptor
{-# INLINE distributionInspectResponseDescriptorL #-}

-- | 'distributionInspectResponsePlatforms' Lens
distributionInspectResponsePlatformsL :: Lens_' DistributionInspectResponse ([DistributionInspectResponsePlatformsInner])
distributionInspectResponsePlatformsL f DistributionInspectResponse{..} = (\distributionInspectResponsePlatforms -> DistributionInspectResponse { distributionInspectResponsePlatforms, ..} ) <$> f distributionInspectResponsePlatforms
{-# INLINE distributionInspectResponsePlatformsL #-}



-- * DistributionInspectResponseDescriptor

-- | 'distributionInspectResponseDescriptorMediaType' Lens
distributionInspectResponseDescriptorMediaTypeL :: Lens_' DistributionInspectResponseDescriptor (Maybe Text)
distributionInspectResponseDescriptorMediaTypeL f DistributionInspectResponseDescriptor{..} = (\distributionInspectResponseDescriptorMediaType -> DistributionInspectResponseDescriptor { distributionInspectResponseDescriptorMediaType, ..} ) <$> f distributionInspectResponseDescriptorMediaType
{-# INLINE distributionInspectResponseDescriptorMediaTypeL #-}

-- | 'distributionInspectResponseDescriptorSize' Lens
distributionInspectResponseDescriptorSizeL :: Lens_' DistributionInspectResponseDescriptor (Maybe Integer)
distributionInspectResponseDescriptorSizeL f DistributionInspectResponseDescriptor{..} = (\distributionInspectResponseDescriptorSize -> DistributionInspectResponseDescriptor { distributionInspectResponseDescriptorSize, ..} ) <$> f distributionInspectResponseDescriptorSize
{-# INLINE distributionInspectResponseDescriptorSizeL #-}

-- | 'distributionInspectResponseDescriptorDigest' Lens
distributionInspectResponseDescriptorDigestL :: Lens_' DistributionInspectResponseDescriptor (Maybe Text)
distributionInspectResponseDescriptorDigestL f DistributionInspectResponseDescriptor{..} = (\distributionInspectResponseDescriptorDigest -> DistributionInspectResponseDescriptor { distributionInspectResponseDescriptorDigest, ..} ) <$> f distributionInspectResponseDescriptorDigest
{-# INLINE distributionInspectResponseDescriptorDigestL #-}

-- | 'distributionInspectResponseDescriptorUrls' Lens
distributionInspectResponseDescriptorUrlsL :: Lens_' DistributionInspectResponseDescriptor (Maybe [Text])
distributionInspectResponseDescriptorUrlsL f DistributionInspectResponseDescriptor{..} = (\distributionInspectResponseDescriptorUrls -> DistributionInspectResponseDescriptor { distributionInspectResponseDescriptorUrls, ..} ) <$> f distributionInspectResponseDescriptorUrls
{-# INLINE distributionInspectResponseDescriptorUrlsL #-}



-- * DistributionInspectResponsePlatformsInner

-- | 'distributionInspectResponsePlatformsInnerArchitecture' Lens
distributionInspectResponsePlatformsInnerArchitectureL :: Lens_' DistributionInspectResponsePlatformsInner (Maybe Text)
distributionInspectResponsePlatformsInnerArchitectureL f DistributionInspectResponsePlatformsInner{..} = (\distributionInspectResponsePlatformsInnerArchitecture -> DistributionInspectResponsePlatformsInner { distributionInspectResponsePlatformsInnerArchitecture, ..} ) <$> f distributionInspectResponsePlatformsInnerArchitecture
{-# INLINE distributionInspectResponsePlatformsInnerArchitectureL #-}

-- | 'distributionInspectResponsePlatformsInnerOs' Lens
distributionInspectResponsePlatformsInnerOsL :: Lens_' DistributionInspectResponsePlatformsInner (Maybe Text)
distributionInspectResponsePlatformsInnerOsL f DistributionInspectResponsePlatformsInner{..} = (\distributionInspectResponsePlatformsInnerOs -> DistributionInspectResponsePlatformsInner { distributionInspectResponsePlatformsInnerOs, ..} ) <$> f distributionInspectResponsePlatformsInnerOs
{-# INLINE distributionInspectResponsePlatformsInnerOsL #-}

-- | 'distributionInspectResponsePlatformsInnerOsVersion' Lens
distributionInspectResponsePlatformsInnerOsVersionL :: Lens_' DistributionInspectResponsePlatformsInner (Maybe Text)
distributionInspectResponsePlatformsInnerOsVersionL f DistributionInspectResponsePlatformsInner{..} = (\distributionInspectResponsePlatformsInnerOsVersion -> DistributionInspectResponsePlatformsInner { distributionInspectResponsePlatformsInnerOsVersion, ..} ) <$> f distributionInspectResponsePlatformsInnerOsVersion
{-# INLINE distributionInspectResponsePlatformsInnerOsVersionL #-}

-- | 'distributionInspectResponsePlatformsInnerOsFeatures' Lens
distributionInspectResponsePlatformsInnerOsFeaturesL :: Lens_' DistributionInspectResponsePlatformsInner (Maybe [Text])
distributionInspectResponsePlatformsInnerOsFeaturesL f DistributionInspectResponsePlatformsInner{..} = (\distributionInspectResponsePlatformsInnerOsFeatures -> DistributionInspectResponsePlatformsInner { distributionInspectResponsePlatformsInnerOsFeatures, ..} ) <$> f distributionInspectResponsePlatformsInnerOsFeatures
{-# INLINE distributionInspectResponsePlatformsInnerOsFeaturesL #-}

-- | 'distributionInspectResponsePlatformsInnerVariant' Lens
distributionInspectResponsePlatformsInnerVariantL :: Lens_' DistributionInspectResponsePlatformsInner (Maybe Text)
distributionInspectResponsePlatformsInnerVariantL f DistributionInspectResponsePlatformsInner{..} = (\distributionInspectResponsePlatformsInnerVariant -> DistributionInspectResponsePlatformsInner { distributionInspectResponsePlatformsInnerVariant, ..} ) <$> f distributionInspectResponsePlatformsInnerVariant
{-# INLINE distributionInspectResponsePlatformsInnerVariantL #-}

-- | 'distributionInspectResponsePlatformsInnerFeatures' Lens
distributionInspectResponsePlatformsInnerFeaturesL :: Lens_' DistributionInspectResponsePlatformsInner (Maybe [Text])
distributionInspectResponsePlatformsInnerFeaturesL f DistributionInspectResponsePlatformsInner{..} = (\distributionInspectResponsePlatformsInnerFeatures -> DistributionInspectResponsePlatformsInner { distributionInspectResponsePlatformsInnerFeatures, ..} ) <$> f distributionInspectResponsePlatformsInnerFeatures
{-# INLINE distributionInspectResponsePlatformsInnerFeaturesL #-}



-- * Driver

-- | 'driverName' Lens
driverNameL :: Lens_' Driver (Text)
driverNameL f Driver{..} = (\driverName -> Driver { driverName, ..} ) <$> f driverName
{-# INLINE driverNameL #-}

-- | 'driverOptions' Lens
driverOptionsL :: Lens_' Driver (Maybe (Map.Map String Text))
driverOptionsL f Driver{..} = (\driverOptions -> Driver { driverOptions, ..} ) <$> f driverOptions
{-# INLINE driverOptionsL #-}



-- * EndpointIPAMConfig

-- | 'endpointIPAMConfigIpv4Address' Lens
endpointIPAMConfigIpv4AddressL :: Lens_' EndpointIPAMConfig (Maybe Text)
endpointIPAMConfigIpv4AddressL f EndpointIPAMConfig{..} = (\endpointIPAMConfigIpv4Address -> EndpointIPAMConfig { endpointIPAMConfigIpv4Address, ..} ) <$> f endpointIPAMConfigIpv4Address
{-# INLINE endpointIPAMConfigIpv4AddressL #-}

-- | 'endpointIPAMConfigIpv6Address' Lens
endpointIPAMConfigIpv6AddressL :: Lens_' EndpointIPAMConfig (Maybe Text)
endpointIPAMConfigIpv6AddressL f EndpointIPAMConfig{..} = (\endpointIPAMConfigIpv6Address -> EndpointIPAMConfig { endpointIPAMConfigIpv6Address, ..} ) <$> f endpointIPAMConfigIpv6Address
{-# INLINE endpointIPAMConfigIpv6AddressL #-}

-- | 'endpointIPAMConfigLinkLocalIps' Lens
endpointIPAMConfigLinkLocalIpsL :: Lens_' EndpointIPAMConfig (Maybe [Text])
endpointIPAMConfigLinkLocalIpsL f EndpointIPAMConfig{..} = (\endpointIPAMConfigLinkLocalIps -> EndpointIPAMConfig { endpointIPAMConfigLinkLocalIps, ..} ) <$> f endpointIPAMConfigLinkLocalIps
{-# INLINE endpointIPAMConfigLinkLocalIpsL #-}



-- * EndpointPortConfig

-- | 'endpointPortConfigName' Lens
endpointPortConfigNameL :: Lens_' EndpointPortConfig (Maybe Text)
endpointPortConfigNameL f EndpointPortConfig{..} = (\endpointPortConfigName -> EndpointPortConfig { endpointPortConfigName, ..} ) <$> f endpointPortConfigName
{-# INLINE endpointPortConfigNameL #-}

-- | 'endpointPortConfigProtocol' Lens
endpointPortConfigProtocolL :: Lens_' EndpointPortConfig (Maybe E'Type)
endpointPortConfigProtocolL f EndpointPortConfig{..} = (\endpointPortConfigProtocol -> EndpointPortConfig { endpointPortConfigProtocol, ..} ) <$> f endpointPortConfigProtocol
{-# INLINE endpointPortConfigProtocolL #-}

-- | 'endpointPortConfigTargetPort' Lens
endpointPortConfigTargetPortL :: Lens_' EndpointPortConfig (Maybe Int)
endpointPortConfigTargetPortL f EndpointPortConfig{..} = (\endpointPortConfigTargetPort -> EndpointPortConfig { endpointPortConfigTargetPort, ..} ) <$> f endpointPortConfigTargetPort
{-# INLINE endpointPortConfigTargetPortL #-}

-- | 'endpointPortConfigPublishedPort' Lens
endpointPortConfigPublishedPortL :: Lens_' EndpointPortConfig (Maybe Int)
endpointPortConfigPublishedPortL f EndpointPortConfig{..} = (\endpointPortConfigPublishedPort -> EndpointPortConfig { endpointPortConfigPublishedPort, ..} ) <$> f endpointPortConfigPublishedPort
{-# INLINE endpointPortConfigPublishedPortL #-}

-- | 'endpointPortConfigPublishMode' Lens
endpointPortConfigPublishModeL :: Lens_' EndpointPortConfig (Maybe E'PublishMode)
endpointPortConfigPublishModeL f EndpointPortConfig{..} = (\endpointPortConfigPublishMode -> EndpointPortConfig { endpointPortConfigPublishMode, ..} ) <$> f endpointPortConfigPublishMode
{-# INLINE endpointPortConfigPublishModeL #-}



-- * EndpointSettings

-- | 'endpointSettingsIpamConfig' Lens
endpointSettingsIpamConfigL :: Lens_' EndpointSettings (Maybe EndpointIPAMConfig)
endpointSettingsIpamConfigL f EndpointSettings{..} = (\endpointSettingsIpamConfig -> EndpointSettings { endpointSettingsIpamConfig, ..} ) <$> f endpointSettingsIpamConfig
{-# INLINE endpointSettingsIpamConfigL #-}

-- | 'endpointSettingsLinks' Lens
endpointSettingsLinksL :: Lens_' EndpointSettings (Maybe [Text])
endpointSettingsLinksL f EndpointSettings{..} = (\endpointSettingsLinks -> EndpointSettings { endpointSettingsLinks, ..} ) <$> f endpointSettingsLinks
{-# INLINE endpointSettingsLinksL #-}

-- | 'endpointSettingsAliases' Lens
endpointSettingsAliasesL :: Lens_' EndpointSettings (Maybe [Text])
endpointSettingsAliasesL f EndpointSettings{..} = (\endpointSettingsAliases -> EndpointSettings { endpointSettingsAliases, ..} ) <$> f endpointSettingsAliases
{-# INLINE endpointSettingsAliasesL #-}

-- | 'endpointSettingsNetworkId' Lens
endpointSettingsNetworkIdL :: Lens_' EndpointSettings (Maybe Text)
endpointSettingsNetworkIdL f EndpointSettings{..} = (\endpointSettingsNetworkId -> EndpointSettings { endpointSettingsNetworkId, ..} ) <$> f endpointSettingsNetworkId
{-# INLINE endpointSettingsNetworkIdL #-}

-- | 'endpointSettingsEndpointId' Lens
endpointSettingsEndpointIdL :: Lens_' EndpointSettings (Maybe Text)
endpointSettingsEndpointIdL f EndpointSettings{..} = (\endpointSettingsEndpointId -> EndpointSettings { endpointSettingsEndpointId, ..} ) <$> f endpointSettingsEndpointId
{-# INLINE endpointSettingsEndpointIdL #-}

-- | 'endpointSettingsGateway' Lens
endpointSettingsGatewayL :: Lens_' EndpointSettings (Maybe Text)
endpointSettingsGatewayL f EndpointSettings{..} = (\endpointSettingsGateway -> EndpointSettings { endpointSettingsGateway, ..} ) <$> f endpointSettingsGateway
{-# INLINE endpointSettingsGatewayL #-}

-- | 'endpointSettingsIpAddress' Lens
endpointSettingsIpAddressL :: Lens_' EndpointSettings (Maybe Text)
endpointSettingsIpAddressL f EndpointSettings{..} = (\endpointSettingsIpAddress -> EndpointSettings { endpointSettingsIpAddress, ..} ) <$> f endpointSettingsIpAddress
{-# INLINE endpointSettingsIpAddressL #-}

-- | 'endpointSettingsIpPrefixLen' Lens
endpointSettingsIpPrefixLenL :: Lens_' EndpointSettings (Maybe Int)
endpointSettingsIpPrefixLenL f EndpointSettings{..} = (\endpointSettingsIpPrefixLen -> EndpointSettings { endpointSettingsIpPrefixLen, ..} ) <$> f endpointSettingsIpPrefixLen
{-# INLINE endpointSettingsIpPrefixLenL #-}

-- | 'endpointSettingsIpv6Gateway' Lens
endpointSettingsIpv6GatewayL :: Lens_' EndpointSettings (Maybe Text)
endpointSettingsIpv6GatewayL f EndpointSettings{..} = (\endpointSettingsIpv6Gateway -> EndpointSettings { endpointSettingsIpv6Gateway, ..} ) <$> f endpointSettingsIpv6Gateway
{-# INLINE endpointSettingsIpv6GatewayL #-}

-- | 'endpointSettingsGlobalIpv6Address' Lens
endpointSettingsGlobalIpv6AddressL :: Lens_' EndpointSettings (Maybe Text)
endpointSettingsGlobalIpv6AddressL f EndpointSettings{..} = (\endpointSettingsGlobalIpv6Address -> EndpointSettings { endpointSettingsGlobalIpv6Address, ..} ) <$> f endpointSettingsGlobalIpv6Address
{-# INLINE endpointSettingsGlobalIpv6AddressL #-}

-- | 'endpointSettingsGlobalIpv6PrefixLen' Lens
endpointSettingsGlobalIpv6PrefixLenL :: Lens_' EndpointSettings (Maybe Integer)
endpointSettingsGlobalIpv6PrefixLenL f EndpointSettings{..} = (\endpointSettingsGlobalIpv6PrefixLen -> EndpointSettings { endpointSettingsGlobalIpv6PrefixLen, ..} ) <$> f endpointSettingsGlobalIpv6PrefixLen
{-# INLINE endpointSettingsGlobalIpv6PrefixLenL #-}

-- | 'endpointSettingsMacAddress' Lens
endpointSettingsMacAddressL :: Lens_' EndpointSettings (Maybe Text)
endpointSettingsMacAddressL f EndpointSettings{..} = (\endpointSettingsMacAddress -> EndpointSettings { endpointSettingsMacAddress, ..} ) <$> f endpointSettingsMacAddress
{-# INLINE endpointSettingsMacAddressL #-}

-- | 'endpointSettingsDriverOpts' Lens
endpointSettingsDriverOptsL :: Lens_' EndpointSettings (Maybe (Map.Map String Text))
endpointSettingsDriverOptsL f EndpointSettings{..} = (\endpointSettingsDriverOpts -> EndpointSettings { endpointSettingsDriverOpts, ..} ) <$> f endpointSettingsDriverOpts
{-# INLINE endpointSettingsDriverOptsL #-}



-- * EndpointSpec

-- | 'endpointSpecMode' Lens
endpointSpecModeL :: Lens_' EndpointSpec (Maybe E'Mode)
endpointSpecModeL f EndpointSpec{..} = (\endpointSpecMode -> EndpointSpec { endpointSpecMode, ..} ) <$> f endpointSpecMode
{-# INLINE endpointSpecModeL #-}

-- | 'endpointSpecPorts' Lens
endpointSpecPortsL :: Lens_' EndpointSpec (Maybe [EndpointPortConfig])
endpointSpecPortsL f EndpointSpec{..} = (\endpointSpecPorts -> EndpointSpec { endpointSpecPorts, ..} ) <$> f endpointSpecPorts
{-# INLINE endpointSpecPortsL #-}



-- * EngineDescription

-- | 'engineDescriptionEngineVersion' Lens
engineDescriptionEngineVersionL :: Lens_' EngineDescription (Maybe Text)
engineDescriptionEngineVersionL f EngineDescription{..} = (\engineDescriptionEngineVersion -> EngineDescription { engineDescriptionEngineVersion, ..} ) <$> f engineDescriptionEngineVersion
{-# INLINE engineDescriptionEngineVersionL #-}

-- | 'engineDescriptionLabels' Lens
engineDescriptionLabelsL :: Lens_' EngineDescription (Maybe (Map.Map String Text))
engineDescriptionLabelsL f EngineDescription{..} = (\engineDescriptionLabels -> EngineDescription { engineDescriptionLabels, ..} ) <$> f engineDescriptionLabels
{-# INLINE engineDescriptionLabelsL #-}

-- | 'engineDescriptionPlugins' Lens
engineDescriptionPluginsL :: Lens_' EngineDescription (Maybe [EngineDescriptionPluginsInner])
engineDescriptionPluginsL f EngineDescription{..} = (\engineDescriptionPlugins -> EngineDescription { engineDescriptionPlugins, ..} ) <$> f engineDescriptionPlugins
{-# INLINE engineDescriptionPluginsL #-}



-- * EngineDescriptionPluginsInner

-- | 'engineDescriptionPluginsInnerType' Lens
engineDescriptionPluginsInnerTypeL :: Lens_' EngineDescriptionPluginsInner (Maybe Text)
engineDescriptionPluginsInnerTypeL f EngineDescriptionPluginsInner{..} = (\engineDescriptionPluginsInnerType -> EngineDescriptionPluginsInner { engineDescriptionPluginsInnerType, ..} ) <$> f engineDescriptionPluginsInnerType
{-# INLINE engineDescriptionPluginsInnerTypeL #-}

-- | 'engineDescriptionPluginsInnerName' Lens
engineDescriptionPluginsInnerNameL :: Lens_' EngineDescriptionPluginsInner (Maybe Text)
engineDescriptionPluginsInnerNameL f EngineDescriptionPluginsInner{..} = (\engineDescriptionPluginsInnerName -> EngineDescriptionPluginsInner { engineDescriptionPluginsInnerName, ..} ) <$> f engineDescriptionPluginsInnerName
{-# INLINE engineDescriptionPluginsInnerNameL #-}



-- * ErrorDetail

-- | 'errorDetailCode' Lens
errorDetailCodeL :: Lens_' ErrorDetail (Maybe Int)
errorDetailCodeL f ErrorDetail{..} = (\errorDetailCode -> ErrorDetail { errorDetailCode, ..} ) <$> f errorDetailCode
{-# INLINE errorDetailCodeL #-}

-- | 'errorDetailMessage' Lens
errorDetailMessageL :: Lens_' ErrorDetail (Maybe Text)
errorDetailMessageL f ErrorDetail{..} = (\errorDetailMessage -> ErrorDetail { errorDetailMessage, ..} ) <$> f errorDetailMessage
{-# INLINE errorDetailMessageL #-}



-- * ErrorResponse

-- | 'errorResponseMessage' Lens
errorResponseMessageL :: Lens_' ErrorResponse (Text)
errorResponseMessageL f ErrorResponse{..} = (\errorResponseMessage -> ErrorResponse { errorResponseMessage, ..} ) <$> f errorResponseMessage
{-# INLINE errorResponseMessageL #-}



-- * ExecInspectResponse

-- | 'execInspectResponseCanRemove' Lens
execInspectResponseCanRemoveL :: Lens_' ExecInspectResponse (Maybe Bool)
execInspectResponseCanRemoveL f ExecInspectResponse{..} = (\execInspectResponseCanRemove -> ExecInspectResponse { execInspectResponseCanRemove, ..} ) <$> f execInspectResponseCanRemove
{-# INLINE execInspectResponseCanRemoveL #-}

-- | 'execInspectResponseDetachKeys' Lens
execInspectResponseDetachKeysL :: Lens_' ExecInspectResponse (Maybe Text)
execInspectResponseDetachKeysL f ExecInspectResponse{..} = (\execInspectResponseDetachKeys -> ExecInspectResponse { execInspectResponseDetachKeys, ..} ) <$> f execInspectResponseDetachKeys
{-# INLINE execInspectResponseDetachKeysL #-}

-- | 'execInspectResponseId' Lens
execInspectResponseIdL :: Lens_' ExecInspectResponse (Maybe Text)
execInspectResponseIdL f ExecInspectResponse{..} = (\execInspectResponseId -> ExecInspectResponse { execInspectResponseId, ..} ) <$> f execInspectResponseId
{-# INLINE execInspectResponseIdL #-}

-- | 'execInspectResponseRunning' Lens
execInspectResponseRunningL :: Lens_' ExecInspectResponse (Maybe Bool)
execInspectResponseRunningL f ExecInspectResponse{..} = (\execInspectResponseRunning -> ExecInspectResponse { execInspectResponseRunning, ..} ) <$> f execInspectResponseRunning
{-# INLINE execInspectResponseRunningL #-}

-- | 'execInspectResponseExitCode' Lens
execInspectResponseExitCodeL :: Lens_' ExecInspectResponse (Maybe Int)
execInspectResponseExitCodeL f ExecInspectResponse{..} = (\execInspectResponseExitCode -> ExecInspectResponse { execInspectResponseExitCode, ..} ) <$> f execInspectResponseExitCode
{-# INLINE execInspectResponseExitCodeL #-}

-- | 'execInspectResponseProcessConfig' Lens
execInspectResponseProcessConfigL :: Lens_' ExecInspectResponse (Maybe ProcessConfig)
execInspectResponseProcessConfigL f ExecInspectResponse{..} = (\execInspectResponseProcessConfig -> ExecInspectResponse { execInspectResponseProcessConfig, ..} ) <$> f execInspectResponseProcessConfig
{-# INLINE execInspectResponseProcessConfigL #-}

-- | 'execInspectResponseOpenStdin' Lens
execInspectResponseOpenStdinL :: Lens_' ExecInspectResponse (Maybe Bool)
execInspectResponseOpenStdinL f ExecInspectResponse{..} = (\execInspectResponseOpenStdin -> ExecInspectResponse { execInspectResponseOpenStdin, ..} ) <$> f execInspectResponseOpenStdin
{-# INLINE execInspectResponseOpenStdinL #-}

-- | 'execInspectResponseOpenStderr' Lens
execInspectResponseOpenStderrL :: Lens_' ExecInspectResponse (Maybe Bool)
execInspectResponseOpenStderrL f ExecInspectResponse{..} = (\execInspectResponseOpenStderr -> ExecInspectResponse { execInspectResponseOpenStderr, ..} ) <$> f execInspectResponseOpenStderr
{-# INLINE execInspectResponseOpenStderrL #-}

-- | 'execInspectResponseOpenStdout' Lens
execInspectResponseOpenStdoutL :: Lens_' ExecInspectResponse (Maybe Bool)
execInspectResponseOpenStdoutL f ExecInspectResponse{..} = (\execInspectResponseOpenStdout -> ExecInspectResponse { execInspectResponseOpenStdout, ..} ) <$> f execInspectResponseOpenStdout
{-# INLINE execInspectResponseOpenStdoutL #-}

-- | 'execInspectResponseContainerId' Lens
execInspectResponseContainerIdL :: Lens_' ExecInspectResponse (Maybe Text)
execInspectResponseContainerIdL f ExecInspectResponse{..} = (\execInspectResponseContainerId -> ExecInspectResponse { execInspectResponseContainerId, ..} ) <$> f execInspectResponseContainerId
{-# INLINE execInspectResponseContainerIdL #-}

-- | 'execInspectResponsePid' Lens
execInspectResponsePidL :: Lens_' ExecInspectResponse (Maybe Int)
execInspectResponsePidL f ExecInspectResponse{..} = (\execInspectResponsePid -> ExecInspectResponse { execInspectResponsePid, ..} ) <$> f execInspectResponsePid
{-# INLINE execInspectResponsePidL #-}



-- * ExecStartRequest

-- | 'execStartRequestDetach' Lens
execStartRequestDetachL :: Lens_' ExecStartRequest (Maybe Bool)
execStartRequestDetachL f ExecStartRequest{..} = (\execStartRequestDetach -> ExecStartRequest { execStartRequestDetach, ..} ) <$> f execStartRequestDetach
{-# INLINE execStartRequestDetachL #-}

-- | 'execStartRequestTty' Lens
execStartRequestTtyL :: Lens_' ExecStartRequest (Maybe Bool)
execStartRequestTtyL f ExecStartRequest{..} = (\execStartRequestTty -> ExecStartRequest { execStartRequestTty, ..} ) <$> f execStartRequestTty
{-# INLINE execStartRequestTtyL #-}



-- * GenericResourcesInner

-- | 'genericResourcesInnerNamedResourceSpec' Lens
genericResourcesInnerNamedResourceSpecL :: Lens_' GenericResourcesInner (Maybe GenericResourcesInnerNamedResourceSpec)
genericResourcesInnerNamedResourceSpecL f GenericResourcesInner{..} = (\genericResourcesInnerNamedResourceSpec -> GenericResourcesInner { genericResourcesInnerNamedResourceSpec, ..} ) <$> f genericResourcesInnerNamedResourceSpec
{-# INLINE genericResourcesInnerNamedResourceSpecL #-}

-- | 'genericResourcesInnerDiscreteResourceSpec' Lens
genericResourcesInnerDiscreteResourceSpecL :: Lens_' GenericResourcesInner (Maybe GenericResourcesInnerDiscreteResourceSpec)
genericResourcesInnerDiscreteResourceSpecL f GenericResourcesInner{..} = (\genericResourcesInnerDiscreteResourceSpec -> GenericResourcesInner { genericResourcesInnerDiscreteResourceSpec, ..} ) <$> f genericResourcesInnerDiscreteResourceSpec
{-# INLINE genericResourcesInnerDiscreteResourceSpecL #-}



-- * GenericResourcesInnerDiscreteResourceSpec

-- | 'genericResourcesInnerDiscreteResourceSpecKind' Lens
genericResourcesInnerDiscreteResourceSpecKindL :: Lens_' GenericResourcesInnerDiscreteResourceSpec (Maybe Text)
genericResourcesInnerDiscreteResourceSpecKindL f GenericResourcesInnerDiscreteResourceSpec{..} = (\genericResourcesInnerDiscreteResourceSpecKind -> GenericResourcesInnerDiscreteResourceSpec { genericResourcesInnerDiscreteResourceSpecKind, ..} ) <$> f genericResourcesInnerDiscreteResourceSpecKind
{-# INLINE genericResourcesInnerDiscreteResourceSpecKindL #-}

-- | 'genericResourcesInnerDiscreteResourceSpecValue' Lens
genericResourcesInnerDiscreteResourceSpecValueL :: Lens_' GenericResourcesInnerDiscreteResourceSpec (Maybe Integer)
genericResourcesInnerDiscreteResourceSpecValueL f GenericResourcesInnerDiscreteResourceSpec{..} = (\genericResourcesInnerDiscreteResourceSpecValue -> GenericResourcesInnerDiscreteResourceSpec { genericResourcesInnerDiscreteResourceSpecValue, ..} ) <$> f genericResourcesInnerDiscreteResourceSpecValue
{-# INLINE genericResourcesInnerDiscreteResourceSpecValueL #-}



-- * GenericResourcesInnerNamedResourceSpec

-- | 'genericResourcesInnerNamedResourceSpecKind' Lens
genericResourcesInnerNamedResourceSpecKindL :: Lens_' GenericResourcesInnerNamedResourceSpec (Maybe Text)
genericResourcesInnerNamedResourceSpecKindL f GenericResourcesInnerNamedResourceSpec{..} = (\genericResourcesInnerNamedResourceSpecKind -> GenericResourcesInnerNamedResourceSpec { genericResourcesInnerNamedResourceSpecKind, ..} ) <$> f genericResourcesInnerNamedResourceSpecKind
{-# INLINE genericResourcesInnerNamedResourceSpecKindL #-}

-- | 'genericResourcesInnerNamedResourceSpecValue' Lens
genericResourcesInnerNamedResourceSpecValueL :: Lens_' GenericResourcesInnerNamedResourceSpec (Maybe Text)
genericResourcesInnerNamedResourceSpecValueL f GenericResourcesInnerNamedResourceSpec{..} = (\genericResourcesInnerNamedResourceSpecValue -> GenericResourcesInnerNamedResourceSpec { genericResourcesInnerNamedResourceSpecValue, ..} ) <$> f genericResourcesInnerNamedResourceSpecValue
{-# INLINE genericResourcesInnerNamedResourceSpecValueL #-}



-- * GraphDriverData

-- | 'graphDriverDataName' Lens
graphDriverDataNameL :: Lens_' GraphDriverData (Text)
graphDriverDataNameL f GraphDriverData{..} = (\graphDriverDataName -> GraphDriverData { graphDriverDataName, ..} ) <$> f graphDriverDataName
{-# INLINE graphDriverDataNameL #-}

-- | 'graphDriverDataData' Lens
graphDriverDataDataL :: Lens_' GraphDriverData ((Map.Map String Text))
graphDriverDataDataL f GraphDriverData{..} = (\graphDriverDataData -> GraphDriverData { graphDriverDataData, ..} ) <$> f graphDriverDataData
{-# INLINE graphDriverDataDataL #-}



-- * HealthConfig

-- | 'healthConfigTest' Lens
healthConfigTestL :: Lens_' HealthConfig (Maybe [Text])
healthConfigTestL f HealthConfig{..} = (\healthConfigTest -> HealthConfig { healthConfigTest, ..} ) <$> f healthConfigTest
{-# INLINE healthConfigTestL #-}

-- | 'healthConfigInterval' Lens
healthConfigIntervalL :: Lens_' HealthConfig (Maybe Int)
healthConfigIntervalL f HealthConfig{..} = (\healthConfigInterval -> HealthConfig { healthConfigInterval, ..} ) <$> f healthConfigInterval
{-# INLINE healthConfigIntervalL #-}

-- | 'healthConfigTimeout' Lens
healthConfigTimeoutL :: Lens_' HealthConfig (Maybe Int)
healthConfigTimeoutL f HealthConfig{..} = (\healthConfigTimeout -> HealthConfig { healthConfigTimeout, ..} ) <$> f healthConfigTimeout
{-# INLINE healthConfigTimeoutL #-}

-- | 'healthConfigRetries' Lens
healthConfigRetriesL :: Lens_' HealthConfig (Maybe Int)
healthConfigRetriesL f HealthConfig{..} = (\healthConfigRetries -> HealthConfig { healthConfigRetries, ..} ) <$> f healthConfigRetries
{-# INLINE healthConfigRetriesL #-}

-- | 'healthConfigStartPeriod' Lens
healthConfigStartPeriodL :: Lens_' HealthConfig (Maybe Int)
healthConfigStartPeriodL f HealthConfig{..} = (\healthConfigStartPeriod -> HealthConfig { healthConfigStartPeriod, ..} ) <$> f healthConfigStartPeriod
{-# INLINE healthConfigStartPeriodL #-}



-- * HistoryResponseItem

-- | 'historyResponseItemId' Lens
historyResponseItemIdL :: Lens_' HistoryResponseItem (Text)
historyResponseItemIdL f HistoryResponseItem{..} = (\historyResponseItemId -> HistoryResponseItem { historyResponseItemId, ..} ) <$> f historyResponseItemId
{-# INLINE historyResponseItemIdL #-}

-- | 'historyResponseItemCreated' Lens
historyResponseItemCreatedL :: Lens_' HistoryResponseItem (Integer)
historyResponseItemCreatedL f HistoryResponseItem{..} = (\historyResponseItemCreated -> HistoryResponseItem { historyResponseItemCreated, ..} ) <$> f historyResponseItemCreated
{-# INLINE historyResponseItemCreatedL #-}

-- | 'historyResponseItemCreatedBy' Lens
historyResponseItemCreatedByL :: Lens_' HistoryResponseItem (Text)
historyResponseItemCreatedByL f HistoryResponseItem{..} = (\historyResponseItemCreatedBy -> HistoryResponseItem { historyResponseItemCreatedBy, ..} ) <$> f historyResponseItemCreatedBy
{-# INLINE historyResponseItemCreatedByL #-}

-- | 'historyResponseItemTags' Lens
historyResponseItemTagsL :: Lens_' HistoryResponseItem ([Text])
historyResponseItemTagsL f HistoryResponseItem{..} = (\historyResponseItemTags -> HistoryResponseItem { historyResponseItemTags, ..} ) <$> f historyResponseItemTags
{-# INLINE historyResponseItemTagsL #-}

-- | 'historyResponseItemSize' Lens
historyResponseItemSizeL :: Lens_' HistoryResponseItem (Integer)
historyResponseItemSizeL f HistoryResponseItem{..} = (\historyResponseItemSize -> HistoryResponseItem { historyResponseItemSize, ..} ) <$> f historyResponseItemSize
{-# INLINE historyResponseItemSizeL #-}

-- | 'historyResponseItemComment' Lens
historyResponseItemCommentL :: Lens_' HistoryResponseItem (Text)
historyResponseItemCommentL f HistoryResponseItem{..} = (\historyResponseItemComment -> HistoryResponseItem { historyResponseItemComment, ..} ) <$> f historyResponseItemComment
{-# INLINE historyResponseItemCommentL #-}



-- * HostConfig

-- | 'hostConfigCpuShares' Lens
hostConfigCpuSharesL :: Lens_' HostConfig (Maybe Int)
hostConfigCpuSharesL f HostConfig{..} = (\hostConfigCpuShares -> HostConfig { hostConfigCpuShares, ..} ) <$> f hostConfigCpuShares
{-# INLINE hostConfigCpuSharesL #-}

-- | 'hostConfigMemory' Lens
hostConfigMemoryL :: Lens_' HostConfig (Maybe Integer)
hostConfigMemoryL f HostConfig{..} = (\hostConfigMemory -> HostConfig { hostConfigMemory, ..} ) <$> f hostConfigMemory
{-# INLINE hostConfigMemoryL #-}

-- | 'hostConfigCgroupParent' Lens
hostConfigCgroupParentL :: Lens_' HostConfig (Maybe Text)
hostConfigCgroupParentL f HostConfig{..} = (\hostConfigCgroupParent -> HostConfig { hostConfigCgroupParent, ..} ) <$> f hostConfigCgroupParent
{-# INLINE hostConfigCgroupParentL #-}

-- | 'hostConfigBlkioWeight' Lens
hostConfigBlkioWeightL :: Lens_' HostConfig (Maybe Int)
hostConfigBlkioWeightL f HostConfig{..} = (\hostConfigBlkioWeight -> HostConfig { hostConfigBlkioWeight, ..} ) <$> f hostConfigBlkioWeight
{-# INLINE hostConfigBlkioWeightL #-}

-- | 'hostConfigBlkioWeightDevice' Lens
hostConfigBlkioWeightDeviceL :: Lens_' HostConfig (Maybe [ResourcesBlkioWeightDeviceInner])
hostConfigBlkioWeightDeviceL f HostConfig{..} = (\hostConfigBlkioWeightDevice -> HostConfig { hostConfigBlkioWeightDevice, ..} ) <$> f hostConfigBlkioWeightDevice
{-# INLINE hostConfigBlkioWeightDeviceL #-}

-- | 'hostConfigBlkioDeviceReadBps' Lens
hostConfigBlkioDeviceReadBpsL :: Lens_' HostConfig (Maybe [ThrottleDevice])
hostConfigBlkioDeviceReadBpsL f HostConfig{..} = (\hostConfigBlkioDeviceReadBps -> HostConfig { hostConfigBlkioDeviceReadBps, ..} ) <$> f hostConfigBlkioDeviceReadBps
{-# INLINE hostConfigBlkioDeviceReadBpsL #-}

-- | 'hostConfigBlkioDeviceWriteBps' Lens
hostConfigBlkioDeviceWriteBpsL :: Lens_' HostConfig (Maybe [ThrottleDevice])
hostConfigBlkioDeviceWriteBpsL f HostConfig{..} = (\hostConfigBlkioDeviceWriteBps -> HostConfig { hostConfigBlkioDeviceWriteBps, ..} ) <$> f hostConfigBlkioDeviceWriteBps
{-# INLINE hostConfigBlkioDeviceWriteBpsL #-}

-- | 'hostConfigBlkioDeviceReadIOps' Lens
hostConfigBlkioDeviceReadIOpsL :: Lens_' HostConfig (Maybe [ThrottleDevice])
hostConfigBlkioDeviceReadIOpsL f HostConfig{..} = (\hostConfigBlkioDeviceReadIOps -> HostConfig { hostConfigBlkioDeviceReadIOps, ..} ) <$> f hostConfigBlkioDeviceReadIOps
{-# INLINE hostConfigBlkioDeviceReadIOpsL #-}

-- | 'hostConfigBlkioDeviceWriteIOps' Lens
hostConfigBlkioDeviceWriteIOpsL :: Lens_' HostConfig (Maybe [ThrottleDevice])
hostConfigBlkioDeviceWriteIOpsL f HostConfig{..} = (\hostConfigBlkioDeviceWriteIOps -> HostConfig { hostConfigBlkioDeviceWriteIOps, ..} ) <$> f hostConfigBlkioDeviceWriteIOps
{-# INLINE hostConfigBlkioDeviceWriteIOpsL #-}

-- | 'hostConfigCpuPeriod' Lens
hostConfigCpuPeriodL :: Lens_' HostConfig (Maybe Integer)
hostConfigCpuPeriodL f HostConfig{..} = (\hostConfigCpuPeriod -> HostConfig { hostConfigCpuPeriod, ..} ) <$> f hostConfigCpuPeriod
{-# INLINE hostConfigCpuPeriodL #-}

-- | 'hostConfigCpuQuota' Lens
hostConfigCpuQuotaL :: Lens_' HostConfig (Maybe Integer)
hostConfigCpuQuotaL f HostConfig{..} = (\hostConfigCpuQuota -> HostConfig { hostConfigCpuQuota, ..} ) <$> f hostConfigCpuQuota
{-# INLINE hostConfigCpuQuotaL #-}

-- | 'hostConfigCpuRealtimePeriod' Lens
hostConfigCpuRealtimePeriodL :: Lens_' HostConfig (Maybe Integer)
hostConfigCpuRealtimePeriodL f HostConfig{..} = (\hostConfigCpuRealtimePeriod -> HostConfig { hostConfigCpuRealtimePeriod, ..} ) <$> f hostConfigCpuRealtimePeriod
{-# INLINE hostConfigCpuRealtimePeriodL #-}

-- | 'hostConfigCpuRealtimeRuntime' Lens
hostConfigCpuRealtimeRuntimeL :: Lens_' HostConfig (Maybe Integer)
hostConfigCpuRealtimeRuntimeL f HostConfig{..} = (\hostConfigCpuRealtimeRuntime -> HostConfig { hostConfigCpuRealtimeRuntime, ..} ) <$> f hostConfigCpuRealtimeRuntime
{-# INLINE hostConfigCpuRealtimeRuntimeL #-}

-- | 'hostConfigCpusetCpus' Lens
hostConfigCpusetCpusL :: Lens_' HostConfig (Maybe Text)
hostConfigCpusetCpusL f HostConfig{..} = (\hostConfigCpusetCpus -> HostConfig { hostConfigCpusetCpus, ..} ) <$> f hostConfigCpusetCpus
{-# INLINE hostConfigCpusetCpusL #-}

-- | 'hostConfigCpusetMems' Lens
hostConfigCpusetMemsL :: Lens_' HostConfig (Maybe Text)
hostConfigCpusetMemsL f HostConfig{..} = (\hostConfigCpusetMems -> HostConfig { hostConfigCpusetMems, ..} ) <$> f hostConfigCpusetMems
{-# INLINE hostConfigCpusetMemsL #-}

-- | 'hostConfigDevices' Lens
hostConfigDevicesL :: Lens_' HostConfig (Maybe [DeviceMapping])
hostConfigDevicesL f HostConfig{..} = (\hostConfigDevices -> HostConfig { hostConfigDevices, ..} ) <$> f hostConfigDevices
{-# INLINE hostConfigDevicesL #-}

-- | 'hostConfigDeviceCgroupRules' Lens
hostConfigDeviceCgroupRulesL :: Lens_' HostConfig (Maybe [Text])
hostConfigDeviceCgroupRulesL f HostConfig{..} = (\hostConfigDeviceCgroupRules -> HostConfig { hostConfigDeviceCgroupRules, ..} ) <$> f hostConfigDeviceCgroupRules
{-# INLINE hostConfigDeviceCgroupRulesL #-}

-- | 'hostConfigDiskQuota' Lens
hostConfigDiskQuotaL :: Lens_' HostConfig (Maybe Integer)
hostConfigDiskQuotaL f HostConfig{..} = (\hostConfigDiskQuota -> HostConfig { hostConfigDiskQuota, ..} ) <$> f hostConfigDiskQuota
{-# INLINE hostConfigDiskQuotaL #-}

-- | 'hostConfigKernelMemory' Lens
hostConfigKernelMemoryL :: Lens_' HostConfig (Maybe Integer)
hostConfigKernelMemoryL f HostConfig{..} = (\hostConfigKernelMemory -> HostConfig { hostConfigKernelMemory, ..} ) <$> f hostConfigKernelMemory
{-# INLINE hostConfigKernelMemoryL #-}

-- | 'hostConfigMemoryReservation' Lens
hostConfigMemoryReservationL :: Lens_' HostConfig (Maybe Integer)
hostConfigMemoryReservationL f HostConfig{..} = (\hostConfigMemoryReservation -> HostConfig { hostConfigMemoryReservation, ..} ) <$> f hostConfigMemoryReservation
{-# INLINE hostConfigMemoryReservationL #-}

-- | 'hostConfigMemorySwap' Lens
hostConfigMemorySwapL :: Lens_' HostConfig (Maybe Integer)
hostConfigMemorySwapL f HostConfig{..} = (\hostConfigMemorySwap -> HostConfig { hostConfigMemorySwap, ..} ) <$> f hostConfigMemorySwap
{-# INLINE hostConfigMemorySwapL #-}

-- | 'hostConfigMemorySwappiness' Lens
hostConfigMemorySwappinessL :: Lens_' HostConfig (Maybe Integer)
hostConfigMemorySwappinessL f HostConfig{..} = (\hostConfigMemorySwappiness -> HostConfig { hostConfigMemorySwappiness, ..} ) <$> f hostConfigMemorySwappiness
{-# INLINE hostConfigMemorySwappinessL #-}

-- | 'hostConfigNanoCpus' Lens
hostConfigNanoCpusL :: Lens_' HostConfig (Maybe Integer)
hostConfigNanoCpusL f HostConfig{..} = (\hostConfigNanoCpus -> HostConfig { hostConfigNanoCpus, ..} ) <$> f hostConfigNanoCpus
{-# INLINE hostConfigNanoCpusL #-}

-- | 'hostConfigOomKillDisable' Lens
hostConfigOomKillDisableL :: Lens_' HostConfig (Maybe Bool)
hostConfigOomKillDisableL f HostConfig{..} = (\hostConfigOomKillDisable -> HostConfig { hostConfigOomKillDisable, ..} ) <$> f hostConfigOomKillDisable
{-# INLINE hostConfigOomKillDisableL #-}

-- | 'hostConfigInit' Lens
hostConfigInitL :: Lens_' HostConfig (Maybe Bool)
hostConfigInitL f HostConfig{..} = (\hostConfigInit -> HostConfig { hostConfigInit, ..} ) <$> f hostConfigInit
{-# INLINE hostConfigInitL #-}

-- | 'hostConfigPidsLimit' Lens
hostConfigPidsLimitL :: Lens_' HostConfig (Maybe Integer)
hostConfigPidsLimitL f HostConfig{..} = (\hostConfigPidsLimit -> HostConfig { hostConfigPidsLimit, ..} ) <$> f hostConfigPidsLimit
{-# INLINE hostConfigPidsLimitL #-}

-- | 'hostConfigUlimits' Lens
hostConfigUlimitsL :: Lens_' HostConfig (Maybe [ResourcesUlimitsInner])
hostConfigUlimitsL f HostConfig{..} = (\hostConfigUlimits -> HostConfig { hostConfigUlimits, ..} ) <$> f hostConfigUlimits
{-# INLINE hostConfigUlimitsL #-}

-- | 'hostConfigCpuCount' Lens
hostConfigCpuCountL :: Lens_' HostConfig (Maybe Integer)
hostConfigCpuCountL f HostConfig{..} = (\hostConfigCpuCount -> HostConfig { hostConfigCpuCount, ..} ) <$> f hostConfigCpuCount
{-# INLINE hostConfigCpuCountL #-}

-- | 'hostConfigCpuPercent' Lens
hostConfigCpuPercentL :: Lens_' HostConfig (Maybe Integer)
hostConfigCpuPercentL f HostConfig{..} = (\hostConfigCpuPercent -> HostConfig { hostConfigCpuPercent, ..} ) <$> f hostConfigCpuPercent
{-# INLINE hostConfigCpuPercentL #-}

-- | 'hostConfigIoMaximumIOps' Lens
hostConfigIoMaximumIOpsL :: Lens_' HostConfig (Maybe Integer)
hostConfigIoMaximumIOpsL f HostConfig{..} = (\hostConfigIoMaximumIOps -> HostConfig { hostConfigIoMaximumIOps, ..} ) <$> f hostConfigIoMaximumIOps
{-# INLINE hostConfigIoMaximumIOpsL #-}

-- | 'hostConfigIoMaximumBandwidth' Lens
hostConfigIoMaximumBandwidthL :: Lens_' HostConfig (Maybe Integer)
hostConfigIoMaximumBandwidthL f HostConfig{..} = (\hostConfigIoMaximumBandwidth -> HostConfig { hostConfigIoMaximumBandwidth, ..} ) <$> f hostConfigIoMaximumBandwidth
{-# INLINE hostConfigIoMaximumBandwidthL #-}

-- | 'hostConfigBinds' Lens
hostConfigBindsL :: Lens_' HostConfig (Maybe [Text])
hostConfigBindsL f HostConfig{..} = (\hostConfigBinds -> HostConfig { hostConfigBinds, ..} ) <$> f hostConfigBinds
{-# INLINE hostConfigBindsL #-}

-- | 'hostConfigContainerIdFile' Lens
hostConfigContainerIdFileL :: Lens_' HostConfig (Maybe Text)
hostConfigContainerIdFileL f HostConfig{..} = (\hostConfigContainerIdFile -> HostConfig { hostConfigContainerIdFile, ..} ) <$> f hostConfigContainerIdFile
{-# INLINE hostConfigContainerIdFileL #-}

-- | 'hostConfigLogConfig' Lens
hostConfigLogConfigL :: Lens_' HostConfig (Maybe HostConfigAllOfLogConfig)
hostConfigLogConfigL f HostConfig{..} = (\hostConfigLogConfig -> HostConfig { hostConfigLogConfig, ..} ) <$> f hostConfigLogConfig
{-# INLINE hostConfigLogConfigL #-}

-- | 'hostConfigNetworkMode' Lens
hostConfigNetworkModeL :: Lens_' HostConfig (Maybe Text)
hostConfigNetworkModeL f HostConfig{..} = (\hostConfigNetworkMode -> HostConfig { hostConfigNetworkMode, ..} ) <$> f hostConfigNetworkMode
{-# INLINE hostConfigNetworkModeL #-}

-- | 'hostConfigPortBindings' Lens
hostConfigPortBindingsL :: Lens_' HostConfig (Maybe (Map.Map String [PortBinding]))
hostConfigPortBindingsL f HostConfig{..} = (\hostConfigPortBindings -> HostConfig { hostConfigPortBindings, ..} ) <$> f hostConfigPortBindings
{-# INLINE hostConfigPortBindingsL #-}

-- | 'hostConfigRestartPolicy' Lens
hostConfigRestartPolicyL :: Lens_' HostConfig (Maybe RestartPolicy)
hostConfigRestartPolicyL f HostConfig{..} = (\hostConfigRestartPolicy -> HostConfig { hostConfigRestartPolicy, ..} ) <$> f hostConfigRestartPolicy
{-# INLINE hostConfigRestartPolicyL #-}

-- | 'hostConfigAutoRemove' Lens
hostConfigAutoRemoveL :: Lens_' HostConfig (Maybe Bool)
hostConfigAutoRemoveL f HostConfig{..} = (\hostConfigAutoRemove -> HostConfig { hostConfigAutoRemove, ..} ) <$> f hostConfigAutoRemove
{-# INLINE hostConfigAutoRemoveL #-}

-- | 'hostConfigVolumeDriver' Lens
hostConfigVolumeDriverL :: Lens_' HostConfig (Maybe Text)
hostConfigVolumeDriverL f HostConfig{..} = (\hostConfigVolumeDriver -> HostConfig { hostConfigVolumeDriver, ..} ) <$> f hostConfigVolumeDriver
{-# INLINE hostConfigVolumeDriverL #-}

-- | 'hostConfigVolumesFrom' Lens
hostConfigVolumesFromL :: Lens_' HostConfig (Maybe [Text])
hostConfigVolumesFromL f HostConfig{..} = (\hostConfigVolumesFrom -> HostConfig { hostConfigVolumesFrom, ..} ) <$> f hostConfigVolumesFrom
{-# INLINE hostConfigVolumesFromL #-}

-- | 'hostConfigMounts' Lens
hostConfigMountsL :: Lens_' HostConfig (Maybe [Mount])
hostConfigMountsL f HostConfig{..} = (\hostConfigMounts -> HostConfig { hostConfigMounts, ..} ) <$> f hostConfigMounts
{-# INLINE hostConfigMountsL #-}

-- | 'hostConfigCapAdd' Lens
hostConfigCapAddL :: Lens_' HostConfig (Maybe [Text])
hostConfigCapAddL f HostConfig{..} = (\hostConfigCapAdd -> HostConfig { hostConfigCapAdd, ..} ) <$> f hostConfigCapAdd
{-# INLINE hostConfigCapAddL #-}

-- | 'hostConfigCapDrop' Lens
hostConfigCapDropL :: Lens_' HostConfig (Maybe [Text])
hostConfigCapDropL f HostConfig{..} = (\hostConfigCapDrop -> HostConfig { hostConfigCapDrop, ..} ) <$> f hostConfigCapDrop
{-# INLINE hostConfigCapDropL #-}

-- | 'hostConfigDns' Lens
hostConfigDnsL :: Lens_' HostConfig (Maybe [Text])
hostConfigDnsL f HostConfig{..} = (\hostConfigDns -> HostConfig { hostConfigDns, ..} ) <$> f hostConfigDns
{-# INLINE hostConfigDnsL #-}

-- | 'hostConfigDnsOptions' Lens
hostConfigDnsOptionsL :: Lens_' HostConfig (Maybe [Text])
hostConfigDnsOptionsL f HostConfig{..} = (\hostConfigDnsOptions -> HostConfig { hostConfigDnsOptions, ..} ) <$> f hostConfigDnsOptions
{-# INLINE hostConfigDnsOptionsL #-}

-- | 'hostConfigDnsSearch' Lens
hostConfigDnsSearchL :: Lens_' HostConfig (Maybe [Text])
hostConfigDnsSearchL f HostConfig{..} = (\hostConfigDnsSearch -> HostConfig { hostConfigDnsSearch, ..} ) <$> f hostConfigDnsSearch
{-# INLINE hostConfigDnsSearchL #-}

-- | 'hostConfigExtraHosts' Lens
hostConfigExtraHostsL :: Lens_' HostConfig (Maybe [Text])
hostConfigExtraHostsL f HostConfig{..} = (\hostConfigExtraHosts -> HostConfig { hostConfigExtraHosts, ..} ) <$> f hostConfigExtraHosts
{-# INLINE hostConfigExtraHostsL #-}

-- | 'hostConfigGroupAdd' Lens
hostConfigGroupAddL :: Lens_' HostConfig (Maybe [Text])
hostConfigGroupAddL f HostConfig{..} = (\hostConfigGroupAdd -> HostConfig { hostConfigGroupAdd, ..} ) <$> f hostConfigGroupAdd
{-# INLINE hostConfigGroupAddL #-}

-- | 'hostConfigIpcMode' Lens
hostConfigIpcModeL :: Lens_' HostConfig (Maybe Text)
hostConfigIpcModeL f HostConfig{..} = (\hostConfigIpcMode -> HostConfig { hostConfigIpcMode, ..} ) <$> f hostConfigIpcMode
{-# INLINE hostConfigIpcModeL #-}

-- | 'hostConfigCgroup' Lens
hostConfigCgroupL :: Lens_' HostConfig (Maybe Text)
hostConfigCgroupL f HostConfig{..} = (\hostConfigCgroup -> HostConfig { hostConfigCgroup, ..} ) <$> f hostConfigCgroup
{-# INLINE hostConfigCgroupL #-}

-- | 'hostConfigLinks' Lens
hostConfigLinksL :: Lens_' HostConfig (Maybe [Text])
hostConfigLinksL f HostConfig{..} = (\hostConfigLinks -> HostConfig { hostConfigLinks, ..} ) <$> f hostConfigLinks
{-# INLINE hostConfigLinksL #-}

-- | 'hostConfigOomScoreAdj' Lens
hostConfigOomScoreAdjL :: Lens_' HostConfig (Maybe Int)
hostConfigOomScoreAdjL f HostConfig{..} = (\hostConfigOomScoreAdj -> HostConfig { hostConfigOomScoreAdj, ..} ) <$> f hostConfigOomScoreAdj
{-# INLINE hostConfigOomScoreAdjL #-}

-- | 'hostConfigPidMode' Lens
hostConfigPidModeL :: Lens_' HostConfig (Maybe Text)
hostConfigPidModeL f HostConfig{..} = (\hostConfigPidMode -> HostConfig { hostConfigPidMode, ..} ) <$> f hostConfigPidMode
{-# INLINE hostConfigPidModeL #-}

-- | 'hostConfigPrivileged' Lens
hostConfigPrivilegedL :: Lens_' HostConfig (Maybe Bool)
hostConfigPrivilegedL f HostConfig{..} = (\hostConfigPrivileged -> HostConfig { hostConfigPrivileged, ..} ) <$> f hostConfigPrivileged
{-# INLINE hostConfigPrivilegedL #-}

-- | 'hostConfigPublishAllPorts' Lens
hostConfigPublishAllPortsL :: Lens_' HostConfig (Maybe Bool)
hostConfigPublishAllPortsL f HostConfig{..} = (\hostConfigPublishAllPorts -> HostConfig { hostConfigPublishAllPorts, ..} ) <$> f hostConfigPublishAllPorts
{-# INLINE hostConfigPublishAllPortsL #-}

-- | 'hostConfigReadonlyRootfs' Lens
hostConfigReadonlyRootfsL :: Lens_' HostConfig (Maybe Bool)
hostConfigReadonlyRootfsL f HostConfig{..} = (\hostConfigReadonlyRootfs -> HostConfig { hostConfigReadonlyRootfs, ..} ) <$> f hostConfigReadonlyRootfs
{-# INLINE hostConfigReadonlyRootfsL #-}

-- | 'hostConfigSecurityOpt' Lens
hostConfigSecurityOptL :: Lens_' HostConfig (Maybe [Text])
hostConfigSecurityOptL f HostConfig{..} = (\hostConfigSecurityOpt -> HostConfig { hostConfigSecurityOpt, ..} ) <$> f hostConfigSecurityOpt
{-# INLINE hostConfigSecurityOptL #-}

-- | 'hostConfigStorageOpt' Lens
hostConfigStorageOptL :: Lens_' HostConfig (Maybe (Map.Map String Text))
hostConfigStorageOptL f HostConfig{..} = (\hostConfigStorageOpt -> HostConfig { hostConfigStorageOpt, ..} ) <$> f hostConfigStorageOpt
{-# INLINE hostConfigStorageOptL #-}

-- | 'hostConfigTmpfs' Lens
hostConfigTmpfsL :: Lens_' HostConfig (Maybe (Map.Map String Text))
hostConfigTmpfsL f HostConfig{..} = (\hostConfigTmpfs -> HostConfig { hostConfigTmpfs, ..} ) <$> f hostConfigTmpfs
{-# INLINE hostConfigTmpfsL #-}

-- | 'hostConfigUtsMode' Lens
hostConfigUtsModeL :: Lens_' HostConfig (Maybe Text)
hostConfigUtsModeL f HostConfig{..} = (\hostConfigUtsMode -> HostConfig { hostConfigUtsMode, ..} ) <$> f hostConfigUtsMode
{-# INLINE hostConfigUtsModeL #-}

-- | 'hostConfigUsernsMode' Lens
hostConfigUsernsModeL :: Lens_' HostConfig (Maybe Text)
hostConfigUsernsModeL f HostConfig{..} = (\hostConfigUsernsMode -> HostConfig { hostConfigUsernsMode, ..} ) <$> f hostConfigUsernsMode
{-# INLINE hostConfigUsernsModeL #-}

-- | 'hostConfigShmSize' Lens
hostConfigShmSizeL :: Lens_' HostConfig (Maybe Int)
hostConfigShmSizeL f HostConfig{..} = (\hostConfigShmSize -> HostConfig { hostConfigShmSize, ..} ) <$> f hostConfigShmSize
{-# INLINE hostConfigShmSizeL #-}

-- | 'hostConfigSysctls' Lens
hostConfigSysctlsL :: Lens_' HostConfig (Maybe (Map.Map String Text))
hostConfigSysctlsL f HostConfig{..} = (\hostConfigSysctls -> HostConfig { hostConfigSysctls, ..} ) <$> f hostConfigSysctls
{-# INLINE hostConfigSysctlsL #-}

-- | 'hostConfigRuntime' Lens
hostConfigRuntimeL :: Lens_' HostConfig (Maybe Text)
hostConfigRuntimeL f HostConfig{..} = (\hostConfigRuntime -> HostConfig { hostConfigRuntime, ..} ) <$> f hostConfigRuntime
{-# INLINE hostConfigRuntimeL #-}

-- | 'hostConfigConsoleSize' Lens
hostConfigConsoleSizeL :: Lens_' HostConfig (Maybe [Int])
hostConfigConsoleSizeL f HostConfig{..} = (\hostConfigConsoleSize -> HostConfig { hostConfigConsoleSize, ..} ) <$> f hostConfigConsoleSize
{-# INLINE hostConfigConsoleSizeL #-}

-- | 'hostConfigIsolation' Lens
hostConfigIsolationL :: Lens_' HostConfig (Maybe E'Isolation)
hostConfigIsolationL f HostConfig{..} = (\hostConfigIsolation -> HostConfig { hostConfigIsolation, ..} ) <$> f hostConfigIsolation
{-# INLINE hostConfigIsolationL #-}

-- | 'hostConfigMaskedPaths' Lens
hostConfigMaskedPathsL :: Lens_' HostConfig (Maybe [Text])
hostConfigMaskedPathsL f HostConfig{..} = (\hostConfigMaskedPaths -> HostConfig { hostConfigMaskedPaths, ..} ) <$> f hostConfigMaskedPaths
{-# INLINE hostConfigMaskedPathsL #-}

-- | 'hostConfigReadonlyPaths' Lens
hostConfigReadonlyPathsL :: Lens_' HostConfig (Maybe [Text])
hostConfigReadonlyPathsL f HostConfig{..} = (\hostConfigReadonlyPaths -> HostConfig { hostConfigReadonlyPaths, ..} ) <$> f hostConfigReadonlyPaths
{-# INLINE hostConfigReadonlyPathsL #-}



-- * HostConfigAllOfLogConfig

-- | 'hostConfigAllOfLogConfigType' Lens
hostConfigAllOfLogConfigTypeL :: Lens_' HostConfigAllOfLogConfig (Maybe E'Type4)
hostConfigAllOfLogConfigTypeL f HostConfigAllOfLogConfig{..} = (\hostConfigAllOfLogConfigType -> HostConfigAllOfLogConfig { hostConfigAllOfLogConfigType, ..} ) <$> f hostConfigAllOfLogConfigType
{-# INLINE hostConfigAllOfLogConfigTypeL #-}

-- | 'hostConfigAllOfLogConfigConfig' Lens
hostConfigAllOfLogConfigConfigL :: Lens_' HostConfigAllOfLogConfig (Maybe (Map.Map String Text))
hostConfigAllOfLogConfigConfigL f HostConfigAllOfLogConfig{..} = (\hostConfigAllOfLogConfigConfig -> HostConfigAllOfLogConfig { hostConfigAllOfLogConfigConfig, ..} ) <$> f hostConfigAllOfLogConfigConfig
{-# INLINE hostConfigAllOfLogConfigConfigL #-}



-- * IPAM

-- | 'iPAMDriver' Lens
iPAMDriverL :: Lens_' IPAM (Maybe Text)
iPAMDriverL f IPAM{..} = (\iPAMDriver -> IPAM { iPAMDriver, ..} ) <$> f iPAMDriver
{-# INLINE iPAMDriverL #-}

-- | 'iPAMConfig' Lens
iPAMConfigL :: Lens_' IPAM (Maybe [(Map.Map String Text)])
iPAMConfigL f IPAM{..} = (\iPAMConfig -> IPAM { iPAMConfig, ..} ) <$> f iPAMConfig
{-# INLINE iPAMConfigL #-}

-- | 'iPAMOptions' Lens
iPAMOptionsL :: Lens_' IPAM (Maybe [(Map.Map String Text)])
iPAMOptionsL f IPAM{..} = (\iPAMOptions -> IPAM { iPAMOptions, ..} ) <$> f iPAMOptions
{-# INLINE iPAMOptionsL #-}



-- * IdResponse

-- | 'idResponseId' Lens
idResponseIdL :: Lens_' IdResponse (Text)
idResponseIdL f IdResponse{..} = (\idResponseId -> IdResponse { idResponseId, ..} ) <$> f idResponseId
{-# INLINE idResponseIdL #-}



-- * Image

-- | 'imageId' Lens
imageIdL :: Lens_' Image (Text)
imageIdL f Image{..} = (\imageId -> Image { imageId, ..} ) <$> f imageId
{-# INLINE imageIdL #-}

-- | 'imageRepoTags' Lens
imageRepoTagsL :: Lens_' Image (Maybe [Text])
imageRepoTagsL f Image{..} = (\imageRepoTags -> Image { imageRepoTags, ..} ) <$> f imageRepoTags
{-# INLINE imageRepoTagsL #-}

-- | 'imageRepoDigests' Lens
imageRepoDigestsL :: Lens_' Image (Maybe [Text])
imageRepoDigestsL f Image{..} = (\imageRepoDigests -> Image { imageRepoDigests, ..} ) <$> f imageRepoDigests
{-# INLINE imageRepoDigestsL #-}

-- | 'imageParent' Lens
imageParentL :: Lens_' Image (Text)
imageParentL f Image{..} = (\imageParent -> Image { imageParent, ..} ) <$> f imageParent
{-# INLINE imageParentL #-}

-- | 'imageComment' Lens
imageCommentL :: Lens_' Image (Text)
imageCommentL f Image{..} = (\imageComment -> Image { imageComment, ..} ) <$> f imageComment
{-# INLINE imageCommentL #-}

-- | 'imageCreated' Lens
imageCreatedL :: Lens_' Image (Text)
imageCreatedL f Image{..} = (\imageCreated -> Image { imageCreated, ..} ) <$> f imageCreated
{-# INLINE imageCreatedL #-}

-- | 'imageContainer' Lens
imageContainerL :: Lens_' Image (Text)
imageContainerL f Image{..} = (\imageContainer -> Image { imageContainer, ..} ) <$> f imageContainer
{-# INLINE imageContainerL #-}

-- | 'imageContainerConfig' Lens
imageContainerConfigL :: Lens_' Image (Maybe ContainerConfig)
imageContainerConfigL f Image{..} = (\imageContainerConfig -> Image { imageContainerConfig, ..} ) <$> f imageContainerConfig
{-# INLINE imageContainerConfigL #-}

-- | 'imageDockerVersion' Lens
imageDockerVersionL :: Lens_' Image (Text)
imageDockerVersionL f Image{..} = (\imageDockerVersion -> Image { imageDockerVersion, ..} ) <$> f imageDockerVersion
{-# INLINE imageDockerVersionL #-}

-- | 'imageAuthor' Lens
imageAuthorL :: Lens_' Image (Text)
imageAuthorL f Image{..} = (\imageAuthor -> Image { imageAuthor, ..} ) <$> f imageAuthor
{-# INLINE imageAuthorL #-}

-- | 'imageConfig' Lens
imageConfigL :: Lens_' Image (Maybe ContainerConfig)
imageConfigL f Image{..} = (\imageConfig -> Image { imageConfig, ..} ) <$> f imageConfig
{-# INLINE imageConfigL #-}

-- | 'imageArchitecture' Lens
imageArchitectureL :: Lens_' Image (Text)
imageArchitectureL f Image{..} = (\imageArchitecture -> Image { imageArchitecture, ..} ) <$> f imageArchitecture
{-# INLINE imageArchitectureL #-}

-- | 'imageOs' Lens
imageOsL :: Lens_' Image (Text)
imageOsL f Image{..} = (\imageOs -> Image { imageOs, ..} ) <$> f imageOs
{-# INLINE imageOsL #-}

-- | 'imageOsVersion' Lens
imageOsVersionL :: Lens_' Image (Maybe Text)
imageOsVersionL f Image{..} = (\imageOsVersion -> Image { imageOsVersion, ..} ) <$> f imageOsVersion
{-# INLINE imageOsVersionL #-}

-- | 'imageSize' Lens
imageSizeL :: Lens_' Image (Integer)
imageSizeL f Image{..} = (\imageSize -> Image { imageSize, ..} ) <$> f imageSize
{-# INLINE imageSizeL #-}

-- | 'imageVirtualSize' Lens
imageVirtualSizeL :: Lens_' Image (Integer)
imageVirtualSizeL f Image{..} = (\imageVirtualSize -> Image { imageVirtualSize, ..} ) <$> f imageVirtualSize
{-# INLINE imageVirtualSizeL #-}

-- | 'imageGraphDriver' Lens
imageGraphDriverL :: Lens_' Image (GraphDriverData)
imageGraphDriverL f Image{..} = (\imageGraphDriver -> Image { imageGraphDriver, ..} ) <$> f imageGraphDriver
{-# INLINE imageGraphDriverL #-}

-- | 'imageRootFs' Lens
imageRootFsL :: Lens_' Image (ImageRootFS)
imageRootFsL f Image{..} = (\imageRootFs -> Image { imageRootFs, ..} ) <$> f imageRootFs
{-# INLINE imageRootFsL #-}

-- | 'imageMetadata' Lens
imageMetadataL :: Lens_' Image (Maybe ImageMetadata)
imageMetadataL f Image{..} = (\imageMetadata -> Image { imageMetadata, ..} ) <$> f imageMetadata
{-# INLINE imageMetadataL #-}



-- * ImageDeleteResponseItem

-- | 'imageDeleteResponseItemUntagged' Lens
imageDeleteResponseItemUntaggedL :: Lens_' ImageDeleteResponseItem (Maybe Text)
imageDeleteResponseItemUntaggedL f ImageDeleteResponseItem{..} = (\imageDeleteResponseItemUntagged -> ImageDeleteResponseItem { imageDeleteResponseItemUntagged, ..} ) <$> f imageDeleteResponseItemUntagged
{-# INLINE imageDeleteResponseItemUntaggedL #-}

-- | 'imageDeleteResponseItemDeleted' Lens
imageDeleteResponseItemDeletedL :: Lens_' ImageDeleteResponseItem (Maybe Text)
imageDeleteResponseItemDeletedL f ImageDeleteResponseItem{..} = (\imageDeleteResponseItemDeleted -> ImageDeleteResponseItem { imageDeleteResponseItemDeleted, ..} ) <$> f imageDeleteResponseItemDeleted
{-# INLINE imageDeleteResponseItemDeletedL #-}



-- * ImageID

-- | 'imageIDId' Lens
imageIDIdL :: Lens_' ImageID (Maybe Text)
imageIDIdL f ImageID{..} = (\imageIDId -> ImageID { imageIDId, ..} ) <$> f imageIDId
{-# INLINE imageIDIdL #-}



-- * ImageMetadata

-- | 'imageMetadataLastTagTime' Lens
imageMetadataLastTagTimeL :: Lens_' ImageMetadata (Maybe Text)
imageMetadataLastTagTimeL f ImageMetadata{..} = (\imageMetadataLastTagTime -> ImageMetadata { imageMetadataLastTagTime, ..} ) <$> f imageMetadataLastTagTime
{-# INLINE imageMetadataLastTagTimeL #-}



-- * ImagePruneResponse

-- | 'imagePruneResponseImagesDeleted' Lens
imagePruneResponseImagesDeletedL :: Lens_' ImagePruneResponse (Maybe [ImageDeleteResponseItem])
imagePruneResponseImagesDeletedL f ImagePruneResponse{..} = (\imagePruneResponseImagesDeleted -> ImagePruneResponse { imagePruneResponseImagesDeleted, ..} ) <$> f imagePruneResponseImagesDeleted
{-# INLINE imagePruneResponseImagesDeletedL #-}

-- | 'imagePruneResponseSpaceReclaimed' Lens
imagePruneResponseSpaceReclaimedL :: Lens_' ImagePruneResponse (Maybe Integer)
imagePruneResponseSpaceReclaimedL f ImagePruneResponse{..} = (\imagePruneResponseSpaceReclaimed -> ImagePruneResponse { imagePruneResponseSpaceReclaimed, ..} ) <$> f imagePruneResponseSpaceReclaimed
{-# INLINE imagePruneResponseSpaceReclaimedL #-}



-- * ImageRootFS

-- | 'imageRootFSType' Lens
imageRootFSTypeL :: Lens_' ImageRootFS (Text)
imageRootFSTypeL f ImageRootFS{..} = (\imageRootFSType -> ImageRootFS { imageRootFSType, ..} ) <$> f imageRootFSType
{-# INLINE imageRootFSTypeL #-}

-- | 'imageRootFSLayers' Lens
imageRootFSLayersL :: Lens_' ImageRootFS (Maybe [Text])
imageRootFSLayersL f ImageRootFS{..} = (\imageRootFSLayers -> ImageRootFS { imageRootFSLayers, ..} ) <$> f imageRootFSLayers
{-# INLINE imageRootFSLayersL #-}



-- * ImageSearchResponseItem

-- | 'imageSearchResponseItemDescription' Lens
imageSearchResponseItemDescriptionL :: Lens_' ImageSearchResponseItem (Maybe Text)
imageSearchResponseItemDescriptionL f ImageSearchResponseItem{..} = (\imageSearchResponseItemDescription -> ImageSearchResponseItem { imageSearchResponseItemDescription, ..} ) <$> f imageSearchResponseItemDescription
{-# INLINE imageSearchResponseItemDescriptionL #-}

-- | 'imageSearchResponseItemIsOfficial' Lens
imageSearchResponseItemIsOfficialL :: Lens_' ImageSearchResponseItem (Maybe Bool)
imageSearchResponseItemIsOfficialL f ImageSearchResponseItem{..} = (\imageSearchResponseItemIsOfficial -> ImageSearchResponseItem { imageSearchResponseItemIsOfficial, ..} ) <$> f imageSearchResponseItemIsOfficial
{-# INLINE imageSearchResponseItemIsOfficialL #-}

-- | 'imageSearchResponseItemIsAutomated' Lens
imageSearchResponseItemIsAutomatedL :: Lens_' ImageSearchResponseItem (Maybe Bool)
imageSearchResponseItemIsAutomatedL f ImageSearchResponseItem{..} = (\imageSearchResponseItemIsAutomated -> ImageSearchResponseItem { imageSearchResponseItemIsAutomated, ..} ) <$> f imageSearchResponseItemIsAutomated
{-# INLINE imageSearchResponseItemIsAutomatedL #-}

-- | 'imageSearchResponseItemName' Lens
imageSearchResponseItemNameL :: Lens_' ImageSearchResponseItem (Maybe Text)
imageSearchResponseItemNameL f ImageSearchResponseItem{..} = (\imageSearchResponseItemName -> ImageSearchResponseItem { imageSearchResponseItemName, ..} ) <$> f imageSearchResponseItemName
{-# INLINE imageSearchResponseItemNameL #-}

-- | 'imageSearchResponseItemStarCount' Lens
imageSearchResponseItemStarCountL :: Lens_' ImageSearchResponseItem (Maybe Int)
imageSearchResponseItemStarCountL f ImageSearchResponseItem{..} = (\imageSearchResponseItemStarCount -> ImageSearchResponseItem { imageSearchResponseItemStarCount, ..} ) <$> f imageSearchResponseItemStarCount
{-# INLINE imageSearchResponseItemStarCountL #-}



-- * ImageSummary

-- | 'imageSummaryId' Lens
imageSummaryIdL :: Lens_' ImageSummary (Text)
imageSummaryIdL f ImageSummary{..} = (\imageSummaryId -> ImageSummary { imageSummaryId, ..} ) <$> f imageSummaryId
{-# INLINE imageSummaryIdL #-}

-- | 'imageSummaryParentId' Lens
imageSummaryParentIdL :: Lens_' ImageSummary (Text)
imageSummaryParentIdL f ImageSummary{..} = (\imageSummaryParentId -> ImageSummary { imageSummaryParentId, ..} ) <$> f imageSummaryParentId
{-# INLINE imageSummaryParentIdL #-}

-- | 'imageSummaryRepoTags' Lens
imageSummaryRepoTagsL :: Lens_' ImageSummary ([Text])
imageSummaryRepoTagsL f ImageSummary{..} = (\imageSummaryRepoTags -> ImageSummary { imageSummaryRepoTags, ..} ) <$> f imageSummaryRepoTags
{-# INLINE imageSummaryRepoTagsL #-}

-- | 'imageSummaryRepoDigests' Lens
imageSummaryRepoDigestsL :: Lens_' ImageSummary ([Text])
imageSummaryRepoDigestsL f ImageSummary{..} = (\imageSummaryRepoDigests -> ImageSummary { imageSummaryRepoDigests, ..} ) <$> f imageSummaryRepoDigests
{-# INLINE imageSummaryRepoDigestsL #-}

-- | 'imageSummaryCreated' Lens
imageSummaryCreatedL :: Lens_' ImageSummary (Int)
imageSummaryCreatedL f ImageSummary{..} = (\imageSummaryCreated -> ImageSummary { imageSummaryCreated, ..} ) <$> f imageSummaryCreated
{-# INLINE imageSummaryCreatedL #-}

-- | 'imageSummarySize' Lens
imageSummarySizeL :: Lens_' ImageSummary (Int)
imageSummarySizeL f ImageSummary{..} = (\imageSummarySize -> ImageSummary { imageSummarySize, ..} ) <$> f imageSummarySize
{-# INLINE imageSummarySizeL #-}

-- | 'imageSummarySharedSize' Lens
imageSummarySharedSizeL :: Lens_' ImageSummary (Int)
imageSummarySharedSizeL f ImageSummary{..} = (\imageSummarySharedSize -> ImageSummary { imageSummarySharedSize, ..} ) <$> f imageSummarySharedSize
{-# INLINE imageSummarySharedSizeL #-}

-- | 'imageSummaryVirtualSize' Lens
imageSummaryVirtualSizeL :: Lens_' ImageSummary (Int)
imageSummaryVirtualSizeL f ImageSummary{..} = (\imageSummaryVirtualSize -> ImageSummary { imageSummaryVirtualSize, ..} ) <$> f imageSummaryVirtualSize
{-# INLINE imageSummaryVirtualSizeL #-}

-- | 'imageSummaryLabels' Lens
imageSummaryLabelsL :: Lens_' ImageSummary ((Map.Map String Text))
imageSummaryLabelsL f ImageSummary{..} = (\imageSummaryLabels -> ImageSummary { imageSummaryLabels, ..} ) <$> f imageSummaryLabels
{-# INLINE imageSummaryLabelsL #-}

-- | 'imageSummaryContainers' Lens
imageSummaryContainersL :: Lens_' ImageSummary (Int)
imageSummaryContainersL f ImageSummary{..} = (\imageSummaryContainers -> ImageSummary { imageSummaryContainers, ..} ) <$> f imageSummaryContainers
{-# INLINE imageSummaryContainersL #-}



-- * IndexInfo

-- | 'indexInfoName' Lens
indexInfoNameL :: Lens_' IndexInfo (Maybe Text)
indexInfoNameL f IndexInfo{..} = (\indexInfoName -> IndexInfo { indexInfoName, ..} ) <$> f indexInfoName
{-# INLINE indexInfoNameL #-}

-- | 'indexInfoMirrors' Lens
indexInfoMirrorsL :: Lens_' IndexInfo (Maybe [Text])
indexInfoMirrorsL f IndexInfo{..} = (\indexInfoMirrors -> IndexInfo { indexInfoMirrors, ..} ) <$> f indexInfoMirrors
{-# INLINE indexInfoMirrorsL #-}

-- | 'indexInfoSecure' Lens
indexInfoSecureL :: Lens_' IndexInfo (Maybe Bool)
indexInfoSecureL f IndexInfo{..} = (\indexInfoSecure -> IndexInfo { indexInfoSecure, ..} ) <$> f indexInfoSecure
{-# INLINE indexInfoSecureL #-}

-- | 'indexInfoOfficial' Lens
indexInfoOfficialL :: Lens_' IndexInfo (Maybe Bool)
indexInfoOfficialL f IndexInfo{..} = (\indexInfoOfficial -> IndexInfo { indexInfoOfficial, ..} ) <$> f indexInfoOfficial
{-# INLINE indexInfoOfficialL #-}



-- * JoinTokens

-- | 'joinTokensWorker' Lens
joinTokensWorkerL :: Lens_' JoinTokens (Maybe Text)
joinTokensWorkerL f JoinTokens{..} = (\joinTokensWorker -> JoinTokens { joinTokensWorker, ..} ) <$> f joinTokensWorker
{-# INLINE joinTokensWorkerL #-}

-- | 'joinTokensManager' Lens
joinTokensManagerL :: Lens_' JoinTokens (Maybe Text)
joinTokensManagerL f JoinTokens{..} = (\joinTokensManager -> JoinTokens { joinTokensManager, ..} ) <$> f joinTokensManager
{-# INLINE joinTokensManagerL #-}



-- * LocalNodeState



-- * ManagerStatus

-- | 'managerStatusLeader' Lens
managerStatusLeaderL :: Lens_' ManagerStatus (Maybe Bool)
managerStatusLeaderL f ManagerStatus{..} = (\managerStatusLeader -> ManagerStatus { managerStatusLeader, ..} ) <$> f managerStatusLeader
{-# INLINE managerStatusLeaderL #-}

-- | 'managerStatusReachability' Lens
managerStatusReachabilityL :: Lens_' ManagerStatus (Maybe Reachability)
managerStatusReachabilityL f ManagerStatus{..} = (\managerStatusReachability -> ManagerStatus { managerStatusReachability, ..} ) <$> f managerStatusReachability
{-# INLINE managerStatusReachabilityL #-}

-- | 'managerStatusAddr' Lens
managerStatusAddrL :: Lens_' ManagerStatus (Maybe Text)
managerStatusAddrL f ManagerStatus{..} = (\managerStatusAddr -> ManagerStatus { managerStatusAddr, ..} ) <$> f managerStatusAddr
{-# INLINE managerStatusAddrL #-}



-- * Mount

-- | 'mountTarget' Lens
mountTargetL :: Lens_' Mount (Maybe Text)
mountTargetL f Mount{..} = (\mountTarget -> Mount { mountTarget, ..} ) <$> f mountTarget
{-# INLINE mountTargetL #-}

-- | 'mountSource' Lens
mountSourceL :: Lens_' Mount (Maybe Text)
mountSourceL f Mount{..} = (\mountSource -> Mount { mountSource, ..} ) <$> f mountSource
{-# INLINE mountSourceL #-}

-- | 'mountType' Lens
mountTypeL :: Lens_' Mount (Maybe E'Type3)
mountTypeL f Mount{..} = (\mountType -> Mount { mountType, ..} ) <$> f mountType
{-# INLINE mountTypeL #-}

-- | 'mountReadOnly' Lens
mountReadOnlyL :: Lens_' Mount (Maybe Bool)
mountReadOnlyL f Mount{..} = (\mountReadOnly -> Mount { mountReadOnly, ..} ) <$> f mountReadOnly
{-# INLINE mountReadOnlyL #-}

-- | 'mountConsistency' Lens
mountConsistencyL :: Lens_' Mount (Maybe Text)
mountConsistencyL f Mount{..} = (\mountConsistency -> Mount { mountConsistency, ..} ) <$> f mountConsistency
{-# INLINE mountConsistencyL #-}

-- | 'mountBindOptions' Lens
mountBindOptionsL :: Lens_' Mount (Maybe MountBindOptions)
mountBindOptionsL f Mount{..} = (\mountBindOptions -> Mount { mountBindOptions, ..} ) <$> f mountBindOptions
{-# INLINE mountBindOptionsL #-}

-- | 'mountVolumeOptions' Lens
mountVolumeOptionsL :: Lens_' Mount (Maybe MountVolumeOptions)
mountVolumeOptionsL f Mount{..} = (\mountVolumeOptions -> Mount { mountVolumeOptions, ..} ) <$> f mountVolumeOptions
{-# INLINE mountVolumeOptionsL #-}

-- | 'mountTmpfsOptions' Lens
mountTmpfsOptionsL :: Lens_' Mount (Maybe MountTmpfsOptions)
mountTmpfsOptionsL f Mount{..} = (\mountTmpfsOptions -> Mount { mountTmpfsOptions, ..} ) <$> f mountTmpfsOptions
{-# INLINE mountTmpfsOptionsL #-}



-- * MountBindOptions

-- | 'mountBindOptionsPropagation' Lens
mountBindOptionsPropagationL :: Lens_' MountBindOptions (Maybe E'Propagation)
mountBindOptionsPropagationL f MountBindOptions{..} = (\mountBindOptionsPropagation -> MountBindOptions { mountBindOptionsPropagation, ..} ) <$> f mountBindOptionsPropagation
{-# INLINE mountBindOptionsPropagationL #-}



-- * MountPoint

-- | 'mountPointType' Lens
mountPointTypeL :: Lens_' MountPoint (Maybe E'Type2)
mountPointTypeL f MountPoint{..} = (\mountPointType -> MountPoint { mountPointType, ..} ) <$> f mountPointType
{-# INLINE mountPointTypeL #-}

-- | 'mountPointName' Lens
mountPointNameL :: Lens_' MountPoint (Maybe Text)
mountPointNameL f MountPoint{..} = (\mountPointName -> MountPoint { mountPointName, ..} ) <$> f mountPointName
{-# INLINE mountPointNameL #-}

-- | 'mountPointSource' Lens
mountPointSourceL :: Lens_' MountPoint (Maybe Text)
mountPointSourceL f MountPoint{..} = (\mountPointSource -> MountPoint { mountPointSource, ..} ) <$> f mountPointSource
{-# INLINE mountPointSourceL #-}

-- | 'mountPointDestination' Lens
mountPointDestinationL :: Lens_' MountPoint (Maybe Text)
mountPointDestinationL f MountPoint{..} = (\mountPointDestination -> MountPoint { mountPointDestination, ..} ) <$> f mountPointDestination
{-# INLINE mountPointDestinationL #-}

-- | 'mountPointDriver' Lens
mountPointDriverL :: Lens_' MountPoint (Maybe Text)
mountPointDriverL f MountPoint{..} = (\mountPointDriver -> MountPoint { mountPointDriver, ..} ) <$> f mountPointDriver
{-# INLINE mountPointDriverL #-}

-- | 'mountPointMode' Lens
mountPointModeL :: Lens_' MountPoint (Maybe Text)
mountPointModeL f MountPoint{..} = (\mountPointMode -> MountPoint { mountPointMode, ..} ) <$> f mountPointMode
{-# INLINE mountPointModeL #-}

-- | 'mountPointRw' Lens
mountPointRwL :: Lens_' MountPoint (Maybe Bool)
mountPointRwL f MountPoint{..} = (\mountPointRw -> MountPoint { mountPointRw, ..} ) <$> f mountPointRw
{-# INLINE mountPointRwL #-}

-- | 'mountPointPropagation' Lens
mountPointPropagationL :: Lens_' MountPoint (Maybe Text)
mountPointPropagationL f MountPoint{..} = (\mountPointPropagation -> MountPoint { mountPointPropagation, ..} ) <$> f mountPointPropagation
{-# INLINE mountPointPropagationL #-}



-- * MountTmpfsOptions

-- | 'mountTmpfsOptionsSizeBytes' Lens
mountTmpfsOptionsSizeBytesL :: Lens_' MountTmpfsOptions (Maybe Integer)
mountTmpfsOptionsSizeBytesL f MountTmpfsOptions{..} = (\mountTmpfsOptionsSizeBytes -> MountTmpfsOptions { mountTmpfsOptionsSizeBytes, ..} ) <$> f mountTmpfsOptionsSizeBytes
{-# INLINE mountTmpfsOptionsSizeBytesL #-}

-- | 'mountTmpfsOptionsMode' Lens
mountTmpfsOptionsModeL :: Lens_' MountTmpfsOptions (Maybe Int)
mountTmpfsOptionsModeL f MountTmpfsOptions{..} = (\mountTmpfsOptionsMode -> MountTmpfsOptions { mountTmpfsOptionsMode, ..} ) <$> f mountTmpfsOptionsMode
{-# INLINE mountTmpfsOptionsModeL #-}



-- * MountVolumeOptions

-- | 'mountVolumeOptionsNoCopy' Lens
mountVolumeOptionsNoCopyL :: Lens_' MountVolumeOptions (Maybe Bool)
mountVolumeOptionsNoCopyL f MountVolumeOptions{..} = (\mountVolumeOptionsNoCopy -> MountVolumeOptions { mountVolumeOptionsNoCopy, ..} ) <$> f mountVolumeOptionsNoCopy
{-# INLINE mountVolumeOptionsNoCopyL #-}

-- | 'mountVolumeOptionsLabels' Lens
mountVolumeOptionsLabelsL :: Lens_' MountVolumeOptions (Maybe (Map.Map String Text))
mountVolumeOptionsLabelsL f MountVolumeOptions{..} = (\mountVolumeOptionsLabels -> MountVolumeOptions { mountVolumeOptionsLabels, ..} ) <$> f mountVolumeOptionsLabels
{-# INLINE mountVolumeOptionsLabelsL #-}

-- | 'mountVolumeOptionsDriverConfig' Lens
mountVolumeOptionsDriverConfigL :: Lens_' MountVolumeOptions (Maybe MountVolumeOptionsDriverConfig)
mountVolumeOptionsDriverConfigL f MountVolumeOptions{..} = (\mountVolumeOptionsDriverConfig -> MountVolumeOptions { mountVolumeOptionsDriverConfig, ..} ) <$> f mountVolumeOptionsDriverConfig
{-# INLINE mountVolumeOptionsDriverConfigL #-}



-- * MountVolumeOptionsDriverConfig

-- | 'mountVolumeOptionsDriverConfigName' Lens
mountVolumeOptionsDriverConfigNameL :: Lens_' MountVolumeOptionsDriverConfig (Maybe Text)
mountVolumeOptionsDriverConfigNameL f MountVolumeOptionsDriverConfig{..} = (\mountVolumeOptionsDriverConfigName -> MountVolumeOptionsDriverConfig { mountVolumeOptionsDriverConfigName, ..} ) <$> f mountVolumeOptionsDriverConfigName
{-# INLINE mountVolumeOptionsDriverConfigNameL #-}

-- | 'mountVolumeOptionsDriverConfigOptions' Lens
mountVolumeOptionsDriverConfigOptionsL :: Lens_' MountVolumeOptionsDriverConfig (Maybe (Map.Map String Text))
mountVolumeOptionsDriverConfigOptionsL f MountVolumeOptionsDriverConfig{..} = (\mountVolumeOptionsDriverConfigOptions -> MountVolumeOptionsDriverConfig { mountVolumeOptionsDriverConfigOptions, ..} ) <$> f mountVolumeOptionsDriverConfigOptions
{-# INLINE mountVolumeOptionsDriverConfigOptionsL #-}



-- * Network

-- | 'networkName' Lens
networkNameL :: Lens_' Network (Maybe Text)
networkNameL f Network{..} = (\networkName -> Network { networkName, ..} ) <$> f networkName
{-# INLINE networkNameL #-}

-- | 'networkId' Lens
networkIdL :: Lens_' Network (Maybe Text)
networkIdL f Network{..} = (\networkId -> Network { networkId, ..} ) <$> f networkId
{-# INLINE networkIdL #-}

-- | 'networkCreated' Lens
networkCreatedL :: Lens_' Network (Maybe Text)
networkCreatedL f Network{..} = (\networkCreated -> Network { networkCreated, ..} ) <$> f networkCreated
{-# INLINE networkCreatedL #-}

-- | 'networkScope' Lens
networkScopeL :: Lens_' Network (Maybe Text)
networkScopeL f Network{..} = (\networkScope -> Network { networkScope, ..} ) <$> f networkScope
{-# INLINE networkScopeL #-}

-- | 'networkDriver' Lens
networkDriverL :: Lens_' Network (Maybe Text)
networkDriverL f Network{..} = (\networkDriver -> Network { networkDriver, ..} ) <$> f networkDriver
{-# INLINE networkDriverL #-}

-- | 'networkEnableIpv6' Lens
networkEnableIpv6L :: Lens_' Network (Maybe Bool)
networkEnableIpv6L f Network{..} = (\networkEnableIpv6 -> Network { networkEnableIpv6, ..} ) <$> f networkEnableIpv6
{-# INLINE networkEnableIpv6L #-}

-- | 'networkIpam' Lens
networkIpamL :: Lens_' Network (Maybe IPAM)
networkIpamL f Network{..} = (\networkIpam -> Network { networkIpam, ..} ) <$> f networkIpam
{-# INLINE networkIpamL #-}

-- | 'networkInternal' Lens
networkInternalL :: Lens_' Network (Maybe Bool)
networkInternalL f Network{..} = (\networkInternal -> Network { networkInternal, ..} ) <$> f networkInternal
{-# INLINE networkInternalL #-}

-- | 'networkAttachable' Lens
networkAttachableL :: Lens_' Network (Maybe Bool)
networkAttachableL f Network{..} = (\networkAttachable -> Network { networkAttachable, ..} ) <$> f networkAttachable
{-# INLINE networkAttachableL #-}

-- | 'networkIngress' Lens
networkIngressL :: Lens_' Network (Maybe Bool)
networkIngressL f Network{..} = (\networkIngress -> Network { networkIngress, ..} ) <$> f networkIngress
{-# INLINE networkIngressL #-}

-- | 'networkContainers' Lens
networkContainersL :: Lens_' Network (Maybe (Map.Map String NetworkContainer))
networkContainersL f Network{..} = (\networkContainers -> Network { networkContainers, ..} ) <$> f networkContainers
{-# INLINE networkContainersL #-}

-- | 'networkOptions' Lens
networkOptionsL :: Lens_' Network (Maybe (Map.Map String Text))
networkOptionsL f Network{..} = (\networkOptions -> Network { networkOptions, ..} ) <$> f networkOptions
{-# INLINE networkOptionsL #-}

-- | 'networkLabels' Lens
networkLabelsL :: Lens_' Network (Maybe (Map.Map String Text))
networkLabelsL f Network{..} = (\networkLabels -> Network { networkLabels, ..} ) <$> f networkLabels
{-# INLINE networkLabelsL #-}



-- * NetworkConnectRequest

-- | 'networkConnectRequestContainer' Lens
networkConnectRequestContainerL :: Lens_' NetworkConnectRequest (Maybe Text)
networkConnectRequestContainerL f NetworkConnectRequest{..} = (\networkConnectRequestContainer -> NetworkConnectRequest { networkConnectRequestContainer, ..} ) <$> f networkConnectRequestContainer
{-# INLINE networkConnectRequestContainerL #-}

-- | 'networkConnectRequestEndpointConfig' Lens
networkConnectRequestEndpointConfigL :: Lens_' NetworkConnectRequest (Maybe EndpointSettings)
networkConnectRequestEndpointConfigL f NetworkConnectRequest{..} = (\networkConnectRequestEndpointConfig -> NetworkConnectRequest { networkConnectRequestEndpointConfig, ..} ) <$> f networkConnectRequestEndpointConfig
{-# INLINE networkConnectRequestEndpointConfigL #-}



-- * NetworkContainer

-- | 'networkContainerName' Lens
networkContainerNameL :: Lens_' NetworkContainer (Maybe Text)
networkContainerNameL f NetworkContainer{..} = (\networkContainerName -> NetworkContainer { networkContainerName, ..} ) <$> f networkContainerName
{-# INLINE networkContainerNameL #-}

-- | 'networkContainerEndpointId' Lens
networkContainerEndpointIdL :: Lens_' NetworkContainer (Maybe Text)
networkContainerEndpointIdL f NetworkContainer{..} = (\networkContainerEndpointId -> NetworkContainer { networkContainerEndpointId, ..} ) <$> f networkContainerEndpointId
{-# INLINE networkContainerEndpointIdL #-}

-- | 'networkContainerMacAddress' Lens
networkContainerMacAddressL :: Lens_' NetworkContainer (Maybe Text)
networkContainerMacAddressL f NetworkContainer{..} = (\networkContainerMacAddress -> NetworkContainer { networkContainerMacAddress, ..} ) <$> f networkContainerMacAddress
{-# INLINE networkContainerMacAddressL #-}

-- | 'networkContainerIpv4Address' Lens
networkContainerIpv4AddressL :: Lens_' NetworkContainer (Maybe Text)
networkContainerIpv4AddressL f NetworkContainer{..} = (\networkContainerIpv4Address -> NetworkContainer { networkContainerIpv4Address, ..} ) <$> f networkContainerIpv4Address
{-# INLINE networkContainerIpv4AddressL #-}

-- | 'networkContainerIpv6Address' Lens
networkContainerIpv6AddressL :: Lens_' NetworkContainer (Maybe Text)
networkContainerIpv6AddressL f NetworkContainer{..} = (\networkContainerIpv6Address -> NetworkContainer { networkContainerIpv6Address, ..} ) <$> f networkContainerIpv6Address
{-# INLINE networkContainerIpv6AddressL #-}



-- * NetworkCreateRequest

-- | 'networkCreateRequestName' Lens
networkCreateRequestNameL :: Lens_' NetworkCreateRequest (Text)
networkCreateRequestNameL f NetworkCreateRequest{..} = (\networkCreateRequestName -> NetworkCreateRequest { networkCreateRequestName, ..} ) <$> f networkCreateRequestName
{-# INLINE networkCreateRequestNameL #-}

-- | 'networkCreateRequestCheckDuplicate' Lens
networkCreateRequestCheckDuplicateL :: Lens_' NetworkCreateRequest (Maybe Bool)
networkCreateRequestCheckDuplicateL f NetworkCreateRequest{..} = (\networkCreateRequestCheckDuplicate -> NetworkCreateRequest { networkCreateRequestCheckDuplicate, ..} ) <$> f networkCreateRequestCheckDuplicate
{-# INLINE networkCreateRequestCheckDuplicateL #-}

-- | 'networkCreateRequestDriver' Lens
networkCreateRequestDriverL :: Lens_' NetworkCreateRequest (Maybe Text)
networkCreateRequestDriverL f NetworkCreateRequest{..} = (\networkCreateRequestDriver -> NetworkCreateRequest { networkCreateRequestDriver, ..} ) <$> f networkCreateRequestDriver
{-# INLINE networkCreateRequestDriverL #-}

-- | 'networkCreateRequestInternal' Lens
networkCreateRequestInternalL :: Lens_' NetworkCreateRequest (Maybe Bool)
networkCreateRequestInternalL f NetworkCreateRequest{..} = (\networkCreateRequestInternal -> NetworkCreateRequest { networkCreateRequestInternal, ..} ) <$> f networkCreateRequestInternal
{-# INLINE networkCreateRequestInternalL #-}

-- | 'networkCreateRequestAttachable' Lens
networkCreateRequestAttachableL :: Lens_' NetworkCreateRequest (Maybe Bool)
networkCreateRequestAttachableL f NetworkCreateRequest{..} = (\networkCreateRequestAttachable -> NetworkCreateRequest { networkCreateRequestAttachable, ..} ) <$> f networkCreateRequestAttachable
{-# INLINE networkCreateRequestAttachableL #-}

-- | 'networkCreateRequestIngress' Lens
networkCreateRequestIngressL :: Lens_' NetworkCreateRequest (Maybe Bool)
networkCreateRequestIngressL f NetworkCreateRequest{..} = (\networkCreateRequestIngress -> NetworkCreateRequest { networkCreateRequestIngress, ..} ) <$> f networkCreateRequestIngress
{-# INLINE networkCreateRequestIngressL #-}

-- | 'networkCreateRequestIpam' Lens
networkCreateRequestIpamL :: Lens_' NetworkCreateRequest (Maybe IPAM)
networkCreateRequestIpamL f NetworkCreateRequest{..} = (\networkCreateRequestIpam -> NetworkCreateRequest { networkCreateRequestIpam, ..} ) <$> f networkCreateRequestIpam
{-# INLINE networkCreateRequestIpamL #-}

-- | 'networkCreateRequestEnableIpv6' Lens
networkCreateRequestEnableIpv6L :: Lens_' NetworkCreateRequest (Maybe Bool)
networkCreateRequestEnableIpv6L f NetworkCreateRequest{..} = (\networkCreateRequestEnableIpv6 -> NetworkCreateRequest { networkCreateRequestEnableIpv6, ..} ) <$> f networkCreateRequestEnableIpv6
{-# INLINE networkCreateRequestEnableIpv6L #-}

-- | 'networkCreateRequestOptions' Lens
networkCreateRequestOptionsL :: Lens_' NetworkCreateRequest (Maybe (Map.Map String Text))
networkCreateRequestOptionsL f NetworkCreateRequest{..} = (\networkCreateRequestOptions -> NetworkCreateRequest { networkCreateRequestOptions, ..} ) <$> f networkCreateRequestOptions
{-# INLINE networkCreateRequestOptionsL #-}

-- | 'networkCreateRequestLabels' Lens
networkCreateRequestLabelsL :: Lens_' NetworkCreateRequest (Maybe (Map.Map String Text))
networkCreateRequestLabelsL f NetworkCreateRequest{..} = (\networkCreateRequestLabels -> NetworkCreateRequest { networkCreateRequestLabels, ..} ) <$> f networkCreateRequestLabels
{-# INLINE networkCreateRequestLabelsL #-}



-- * NetworkCreateResponse

-- | 'networkCreateResponseId' Lens
networkCreateResponseIdL :: Lens_' NetworkCreateResponse (Maybe Text)
networkCreateResponseIdL f NetworkCreateResponse{..} = (\networkCreateResponseId -> NetworkCreateResponse { networkCreateResponseId, ..} ) <$> f networkCreateResponseId
{-# INLINE networkCreateResponseIdL #-}

-- | 'networkCreateResponseWarning' Lens
networkCreateResponseWarningL :: Lens_' NetworkCreateResponse (Maybe Text)
networkCreateResponseWarningL f NetworkCreateResponse{..} = (\networkCreateResponseWarning -> NetworkCreateResponse { networkCreateResponseWarning, ..} ) <$> f networkCreateResponseWarning
{-# INLINE networkCreateResponseWarningL #-}



-- * NetworkDisconnectRequest

-- | 'networkDisconnectRequestContainer' Lens
networkDisconnectRequestContainerL :: Lens_' NetworkDisconnectRequest (Maybe Text)
networkDisconnectRequestContainerL f NetworkDisconnectRequest{..} = (\networkDisconnectRequestContainer -> NetworkDisconnectRequest { networkDisconnectRequestContainer, ..} ) <$> f networkDisconnectRequestContainer
{-# INLINE networkDisconnectRequestContainerL #-}

-- | 'networkDisconnectRequestForce' Lens
networkDisconnectRequestForceL :: Lens_' NetworkDisconnectRequest (Maybe Bool)
networkDisconnectRequestForceL f NetworkDisconnectRequest{..} = (\networkDisconnectRequestForce -> NetworkDisconnectRequest { networkDisconnectRequestForce, ..} ) <$> f networkDisconnectRequestForce
{-# INLINE networkDisconnectRequestForceL #-}



-- * NetworkPruneResponse

-- | 'networkPruneResponseNetworksDeleted' Lens
networkPruneResponseNetworksDeletedL :: Lens_' NetworkPruneResponse (Maybe [Text])
networkPruneResponseNetworksDeletedL f NetworkPruneResponse{..} = (\networkPruneResponseNetworksDeleted -> NetworkPruneResponse { networkPruneResponseNetworksDeleted, ..} ) <$> f networkPruneResponseNetworksDeleted
{-# INLINE networkPruneResponseNetworksDeletedL #-}



-- * NetworkSettings

-- | 'networkSettingsBridge' Lens
networkSettingsBridgeL :: Lens_' NetworkSettings (Maybe Text)
networkSettingsBridgeL f NetworkSettings{..} = (\networkSettingsBridge -> NetworkSettings { networkSettingsBridge, ..} ) <$> f networkSettingsBridge
{-# INLINE networkSettingsBridgeL #-}

-- | 'networkSettingsSandboxId' Lens
networkSettingsSandboxIdL :: Lens_' NetworkSettings (Maybe Text)
networkSettingsSandboxIdL f NetworkSettings{..} = (\networkSettingsSandboxId -> NetworkSettings { networkSettingsSandboxId, ..} ) <$> f networkSettingsSandboxId
{-# INLINE networkSettingsSandboxIdL #-}

-- | 'networkSettingsHairpinMode' Lens
networkSettingsHairpinModeL :: Lens_' NetworkSettings (Maybe Bool)
networkSettingsHairpinModeL f NetworkSettings{..} = (\networkSettingsHairpinMode -> NetworkSettings { networkSettingsHairpinMode, ..} ) <$> f networkSettingsHairpinMode
{-# INLINE networkSettingsHairpinModeL #-}

-- | 'networkSettingsLinkLocalIpv6Address' Lens
networkSettingsLinkLocalIpv6AddressL :: Lens_' NetworkSettings (Maybe Text)
networkSettingsLinkLocalIpv6AddressL f NetworkSettings{..} = (\networkSettingsLinkLocalIpv6Address -> NetworkSettings { networkSettingsLinkLocalIpv6Address, ..} ) <$> f networkSettingsLinkLocalIpv6Address
{-# INLINE networkSettingsLinkLocalIpv6AddressL #-}

-- | 'networkSettingsLinkLocalIpv6PrefixLen' Lens
networkSettingsLinkLocalIpv6PrefixLenL :: Lens_' NetworkSettings (Maybe Int)
networkSettingsLinkLocalIpv6PrefixLenL f NetworkSettings{..} = (\networkSettingsLinkLocalIpv6PrefixLen -> NetworkSettings { networkSettingsLinkLocalIpv6PrefixLen, ..} ) <$> f networkSettingsLinkLocalIpv6PrefixLen
{-# INLINE networkSettingsLinkLocalIpv6PrefixLenL #-}

-- | 'networkSettingsPorts' Lens
networkSettingsPortsL :: Lens_' NetworkSettings (Maybe (Map.Map String [PortBinding]))
networkSettingsPortsL f NetworkSettings{..} = (\networkSettingsPorts -> NetworkSettings { networkSettingsPorts, ..} ) <$> f networkSettingsPorts
{-# INLINE networkSettingsPortsL #-}

-- | 'networkSettingsSandboxKey' Lens
networkSettingsSandboxKeyL :: Lens_' NetworkSettings (Maybe Text)
networkSettingsSandboxKeyL f NetworkSettings{..} = (\networkSettingsSandboxKey -> NetworkSettings { networkSettingsSandboxKey, ..} ) <$> f networkSettingsSandboxKey
{-# INLINE networkSettingsSandboxKeyL #-}

-- | 'networkSettingsSecondaryIpAddresses' Lens
networkSettingsSecondaryIpAddressesL :: Lens_' NetworkSettings (Maybe [Address])
networkSettingsSecondaryIpAddressesL f NetworkSettings{..} = (\networkSettingsSecondaryIpAddresses -> NetworkSettings { networkSettingsSecondaryIpAddresses, ..} ) <$> f networkSettingsSecondaryIpAddresses
{-# INLINE networkSettingsSecondaryIpAddressesL #-}

-- | 'networkSettingsSecondaryIpv6Addresses' Lens
networkSettingsSecondaryIpv6AddressesL :: Lens_' NetworkSettings (Maybe [Address])
networkSettingsSecondaryIpv6AddressesL f NetworkSettings{..} = (\networkSettingsSecondaryIpv6Addresses -> NetworkSettings { networkSettingsSecondaryIpv6Addresses, ..} ) <$> f networkSettingsSecondaryIpv6Addresses
{-# INLINE networkSettingsSecondaryIpv6AddressesL #-}

-- | 'networkSettingsEndpointId' Lens
networkSettingsEndpointIdL :: Lens_' NetworkSettings (Maybe Text)
networkSettingsEndpointIdL f NetworkSettings{..} = (\networkSettingsEndpointId -> NetworkSettings { networkSettingsEndpointId, ..} ) <$> f networkSettingsEndpointId
{-# INLINE networkSettingsEndpointIdL #-}

-- | 'networkSettingsGateway' Lens
networkSettingsGatewayL :: Lens_' NetworkSettings (Maybe Text)
networkSettingsGatewayL f NetworkSettings{..} = (\networkSettingsGateway -> NetworkSettings { networkSettingsGateway, ..} ) <$> f networkSettingsGateway
{-# INLINE networkSettingsGatewayL #-}

-- | 'networkSettingsGlobalIpv6Address' Lens
networkSettingsGlobalIpv6AddressL :: Lens_' NetworkSettings (Maybe Text)
networkSettingsGlobalIpv6AddressL f NetworkSettings{..} = (\networkSettingsGlobalIpv6Address -> NetworkSettings { networkSettingsGlobalIpv6Address, ..} ) <$> f networkSettingsGlobalIpv6Address
{-# INLINE networkSettingsGlobalIpv6AddressL #-}

-- | 'networkSettingsGlobalIpv6PrefixLen' Lens
networkSettingsGlobalIpv6PrefixLenL :: Lens_' NetworkSettings (Maybe Int)
networkSettingsGlobalIpv6PrefixLenL f NetworkSettings{..} = (\networkSettingsGlobalIpv6PrefixLen -> NetworkSettings { networkSettingsGlobalIpv6PrefixLen, ..} ) <$> f networkSettingsGlobalIpv6PrefixLen
{-# INLINE networkSettingsGlobalIpv6PrefixLenL #-}

-- | 'networkSettingsIpAddress' Lens
networkSettingsIpAddressL :: Lens_' NetworkSettings (Maybe Text)
networkSettingsIpAddressL f NetworkSettings{..} = (\networkSettingsIpAddress -> NetworkSettings { networkSettingsIpAddress, ..} ) <$> f networkSettingsIpAddress
{-# INLINE networkSettingsIpAddressL #-}

-- | 'networkSettingsIpPrefixLen' Lens
networkSettingsIpPrefixLenL :: Lens_' NetworkSettings (Maybe Int)
networkSettingsIpPrefixLenL f NetworkSettings{..} = (\networkSettingsIpPrefixLen -> NetworkSettings { networkSettingsIpPrefixLen, ..} ) <$> f networkSettingsIpPrefixLen
{-# INLINE networkSettingsIpPrefixLenL #-}

-- | 'networkSettingsIpv6Gateway' Lens
networkSettingsIpv6GatewayL :: Lens_' NetworkSettings (Maybe Text)
networkSettingsIpv6GatewayL f NetworkSettings{..} = (\networkSettingsIpv6Gateway -> NetworkSettings { networkSettingsIpv6Gateway, ..} ) <$> f networkSettingsIpv6Gateway
{-# INLINE networkSettingsIpv6GatewayL #-}

-- | 'networkSettingsMacAddress' Lens
networkSettingsMacAddressL :: Lens_' NetworkSettings (Maybe Text)
networkSettingsMacAddressL f NetworkSettings{..} = (\networkSettingsMacAddress -> NetworkSettings { networkSettingsMacAddress, ..} ) <$> f networkSettingsMacAddress
{-# INLINE networkSettingsMacAddressL #-}

-- | 'networkSettingsNetworks' Lens
networkSettingsNetworksL :: Lens_' NetworkSettings (Maybe (Map.Map String EndpointSettings))
networkSettingsNetworksL f NetworkSettings{..} = (\networkSettingsNetworks -> NetworkSettings { networkSettingsNetworks, ..} ) <$> f networkSettingsNetworks
{-# INLINE networkSettingsNetworksL #-}



-- * Node

-- | 'nodeId' Lens
nodeIdL :: Lens_' Node (Maybe Text)
nodeIdL f Node{..} = (\nodeId -> Node { nodeId, ..} ) <$> f nodeId
{-# INLINE nodeIdL #-}

-- | 'nodeVersion' Lens
nodeVersionL :: Lens_' Node (Maybe ObjectVersion)
nodeVersionL f Node{..} = (\nodeVersion -> Node { nodeVersion, ..} ) <$> f nodeVersion
{-# INLINE nodeVersionL #-}

-- | 'nodeCreatedAt' Lens
nodeCreatedAtL :: Lens_' Node (Maybe Text)
nodeCreatedAtL f Node{..} = (\nodeCreatedAt -> Node { nodeCreatedAt, ..} ) <$> f nodeCreatedAt
{-# INLINE nodeCreatedAtL #-}

-- | 'nodeUpdatedAt' Lens
nodeUpdatedAtL :: Lens_' Node (Maybe Text)
nodeUpdatedAtL f Node{..} = (\nodeUpdatedAt -> Node { nodeUpdatedAt, ..} ) <$> f nodeUpdatedAt
{-# INLINE nodeUpdatedAtL #-}

-- | 'nodeSpec' Lens
nodeSpecL :: Lens_' Node (Maybe NodeSpec)
nodeSpecL f Node{..} = (\nodeSpec -> Node { nodeSpec, ..} ) <$> f nodeSpec
{-# INLINE nodeSpecL #-}

-- | 'nodeDescription' Lens
nodeDescriptionL :: Lens_' Node (Maybe NodeDescription)
nodeDescriptionL f Node{..} = (\nodeDescription -> Node { nodeDescription, ..} ) <$> f nodeDescription
{-# INLINE nodeDescriptionL #-}

-- | 'nodeStatus' Lens
nodeStatusL :: Lens_' Node (Maybe NodeStatus)
nodeStatusL f Node{..} = (\nodeStatus -> Node { nodeStatus, ..} ) <$> f nodeStatus
{-# INLINE nodeStatusL #-}

-- | 'nodeManagerStatus' Lens
nodeManagerStatusL :: Lens_' Node (Maybe ManagerStatus)
nodeManagerStatusL f Node{..} = (\nodeManagerStatus -> Node { nodeManagerStatus, ..} ) <$> f nodeManagerStatus
{-# INLINE nodeManagerStatusL #-}



-- * NodeDescription

-- | 'nodeDescriptionHostname' Lens
nodeDescriptionHostnameL :: Lens_' NodeDescription (Maybe Text)
nodeDescriptionHostnameL f NodeDescription{..} = (\nodeDescriptionHostname -> NodeDescription { nodeDescriptionHostname, ..} ) <$> f nodeDescriptionHostname
{-# INLINE nodeDescriptionHostnameL #-}

-- | 'nodeDescriptionPlatform' Lens
nodeDescriptionPlatformL :: Lens_' NodeDescription (Maybe Platform)
nodeDescriptionPlatformL f NodeDescription{..} = (\nodeDescriptionPlatform -> NodeDescription { nodeDescriptionPlatform, ..} ) <$> f nodeDescriptionPlatform
{-# INLINE nodeDescriptionPlatformL #-}

-- | 'nodeDescriptionResources' Lens
nodeDescriptionResourcesL :: Lens_' NodeDescription (Maybe ResourceObject)
nodeDescriptionResourcesL f NodeDescription{..} = (\nodeDescriptionResources -> NodeDescription { nodeDescriptionResources, ..} ) <$> f nodeDescriptionResources
{-# INLINE nodeDescriptionResourcesL #-}

-- | 'nodeDescriptionEngine' Lens
nodeDescriptionEngineL :: Lens_' NodeDescription (Maybe EngineDescription)
nodeDescriptionEngineL f NodeDescription{..} = (\nodeDescriptionEngine -> NodeDescription { nodeDescriptionEngine, ..} ) <$> f nodeDescriptionEngine
{-# INLINE nodeDescriptionEngineL #-}

-- | 'nodeDescriptionTlsInfo' Lens
nodeDescriptionTlsInfoL :: Lens_' NodeDescription (Maybe TLSInfo)
nodeDescriptionTlsInfoL f NodeDescription{..} = (\nodeDescriptionTlsInfo -> NodeDescription { nodeDescriptionTlsInfo, ..} ) <$> f nodeDescriptionTlsInfo
{-# INLINE nodeDescriptionTlsInfoL #-}



-- * NodeSpec

-- | 'nodeSpecName' Lens
nodeSpecNameL :: Lens_' NodeSpec (Maybe Text)
nodeSpecNameL f NodeSpec{..} = (\nodeSpecName -> NodeSpec { nodeSpecName, ..} ) <$> f nodeSpecName
{-# INLINE nodeSpecNameL #-}

-- | 'nodeSpecLabels' Lens
nodeSpecLabelsL :: Lens_' NodeSpec (Maybe (Map.Map String Text))
nodeSpecLabelsL f NodeSpec{..} = (\nodeSpecLabels -> NodeSpec { nodeSpecLabels, ..} ) <$> f nodeSpecLabels
{-# INLINE nodeSpecLabelsL #-}

-- | 'nodeSpecRole' Lens
nodeSpecRoleL :: Lens_' NodeSpec (Maybe E'Role)
nodeSpecRoleL f NodeSpec{..} = (\nodeSpecRole -> NodeSpec { nodeSpecRole, ..} ) <$> f nodeSpecRole
{-# INLINE nodeSpecRoleL #-}

-- | 'nodeSpecAvailability' Lens
nodeSpecAvailabilityL :: Lens_' NodeSpec (Maybe E'Availability)
nodeSpecAvailabilityL f NodeSpec{..} = (\nodeSpecAvailability -> NodeSpec { nodeSpecAvailability, ..} ) <$> f nodeSpecAvailability
{-# INLINE nodeSpecAvailabilityL #-}



-- * NodeState



-- * NodeStatus

-- | 'nodeStatusState' Lens
nodeStatusStateL :: Lens_' NodeStatus (Maybe NodeState)
nodeStatusStateL f NodeStatus{..} = (\nodeStatusState -> NodeStatus { nodeStatusState, ..} ) <$> f nodeStatusState
{-# INLINE nodeStatusStateL #-}

-- | 'nodeStatusMessage' Lens
nodeStatusMessageL :: Lens_' NodeStatus (Maybe Text)
nodeStatusMessageL f NodeStatus{..} = (\nodeStatusMessage -> NodeStatus { nodeStatusMessage, ..} ) <$> f nodeStatusMessage
{-# INLINE nodeStatusMessageL #-}

-- | 'nodeStatusAddr' Lens
nodeStatusAddrL :: Lens_' NodeStatus (Maybe Text)
nodeStatusAddrL f NodeStatus{..} = (\nodeStatusAddr -> NodeStatus { nodeStatusAddr, ..} ) <$> f nodeStatusAddr
{-# INLINE nodeStatusAddrL #-}



-- * ObjectVersion

-- | 'objectVersionIndex' Lens
objectVersionIndexL :: Lens_' ObjectVersion (Maybe Int)
objectVersionIndexL f ObjectVersion{..} = (\objectVersionIndex -> ObjectVersion { objectVersionIndex, ..} ) <$> f objectVersionIndex
{-# INLINE objectVersionIndexL #-}



-- * PeerNode

-- | 'peerNodeNodeId' Lens
peerNodeNodeIdL :: Lens_' PeerNode (Maybe Text)
peerNodeNodeIdL f PeerNode{..} = (\peerNodeNodeId -> PeerNode { peerNodeNodeId, ..} ) <$> f peerNodeNodeId
{-# INLINE peerNodeNodeIdL #-}

-- | 'peerNodeAddr' Lens
peerNodeAddrL :: Lens_' PeerNode (Maybe Text)
peerNodeAddrL f PeerNode{..} = (\peerNodeAddr -> PeerNode { peerNodeAddr, ..} ) <$> f peerNodeAddr
{-# INLINE peerNodeAddrL #-}



-- * Platform

-- | 'platformArchitecture' Lens
platformArchitectureL :: Lens_' Platform (Maybe Text)
platformArchitectureL f Platform{..} = (\platformArchitecture -> Platform { platformArchitecture, ..} ) <$> f platformArchitecture
{-# INLINE platformArchitectureL #-}

-- | 'platformOs' Lens
platformOsL :: Lens_' Platform (Maybe Text)
platformOsL f Platform{..} = (\platformOs -> Platform { platformOs, ..} ) <$> f platformOs
{-# INLINE platformOsL #-}



-- * Plugin

-- | 'pluginId' Lens
pluginIdL :: Lens_' Plugin (Maybe Text)
pluginIdL f Plugin{..} = (\pluginId -> Plugin { pluginId, ..} ) <$> f pluginId
{-# INLINE pluginIdL #-}

-- | 'pluginName' Lens
pluginNameL :: Lens_' Plugin (Text)
pluginNameL f Plugin{..} = (\pluginName -> Plugin { pluginName, ..} ) <$> f pluginName
{-# INLINE pluginNameL #-}

-- | 'pluginEnabled' Lens
pluginEnabledL :: Lens_' Plugin (Bool)
pluginEnabledL f Plugin{..} = (\pluginEnabled -> Plugin { pluginEnabled, ..} ) <$> f pluginEnabled
{-# INLINE pluginEnabledL #-}

-- | 'pluginSettings' Lens
pluginSettingsL :: Lens_' Plugin (PluginSettings)
pluginSettingsL f Plugin{..} = (\pluginSettings -> Plugin { pluginSettings, ..} ) <$> f pluginSettings
{-# INLINE pluginSettingsL #-}

-- | 'pluginPluginReference' Lens
pluginPluginReferenceL :: Lens_' Plugin (Maybe Text)
pluginPluginReferenceL f Plugin{..} = (\pluginPluginReference -> Plugin { pluginPluginReference, ..} ) <$> f pluginPluginReference
{-# INLINE pluginPluginReferenceL #-}

-- | 'pluginConfig' Lens
pluginConfigL :: Lens_' Plugin (PluginConfig)
pluginConfigL f Plugin{..} = (\pluginConfig -> Plugin { pluginConfig, ..} ) <$> f pluginConfig
{-# INLINE pluginConfigL #-}



-- * PluginConfig

-- | 'pluginConfigDockerVersion' Lens
pluginConfigDockerVersionL :: Lens_' PluginConfig (Maybe Text)
pluginConfigDockerVersionL f PluginConfig{..} = (\pluginConfigDockerVersion -> PluginConfig { pluginConfigDockerVersion, ..} ) <$> f pluginConfigDockerVersion
{-# INLINE pluginConfigDockerVersionL #-}

-- | 'pluginConfigDescription' Lens
pluginConfigDescriptionL :: Lens_' PluginConfig (Text)
pluginConfigDescriptionL f PluginConfig{..} = (\pluginConfigDescription -> PluginConfig { pluginConfigDescription, ..} ) <$> f pluginConfigDescription
{-# INLINE pluginConfigDescriptionL #-}

-- | 'pluginConfigDocumentation' Lens
pluginConfigDocumentationL :: Lens_' PluginConfig (Text)
pluginConfigDocumentationL f PluginConfig{..} = (\pluginConfigDocumentation -> PluginConfig { pluginConfigDocumentation, ..} ) <$> f pluginConfigDocumentation
{-# INLINE pluginConfigDocumentationL #-}

-- | 'pluginConfigInterface' Lens
pluginConfigInterfaceL :: Lens_' PluginConfig (PluginConfigInterface)
pluginConfigInterfaceL f PluginConfig{..} = (\pluginConfigInterface -> PluginConfig { pluginConfigInterface, ..} ) <$> f pluginConfigInterface
{-# INLINE pluginConfigInterfaceL #-}

-- | 'pluginConfigEntrypoint' Lens
pluginConfigEntrypointL :: Lens_' PluginConfig ([Text])
pluginConfigEntrypointL f PluginConfig{..} = (\pluginConfigEntrypoint -> PluginConfig { pluginConfigEntrypoint, ..} ) <$> f pluginConfigEntrypoint
{-# INLINE pluginConfigEntrypointL #-}

-- | 'pluginConfigWorkDir' Lens
pluginConfigWorkDirL :: Lens_' PluginConfig (Text)
pluginConfigWorkDirL f PluginConfig{..} = (\pluginConfigWorkDir -> PluginConfig { pluginConfigWorkDir, ..} ) <$> f pluginConfigWorkDir
{-# INLINE pluginConfigWorkDirL #-}

-- | 'pluginConfigUser' Lens
pluginConfigUserL :: Lens_' PluginConfig (Maybe PluginConfigUser)
pluginConfigUserL f PluginConfig{..} = (\pluginConfigUser -> PluginConfig { pluginConfigUser, ..} ) <$> f pluginConfigUser
{-# INLINE pluginConfigUserL #-}

-- | 'pluginConfigNetwork' Lens
pluginConfigNetworkL :: Lens_' PluginConfig (PluginConfigNetwork)
pluginConfigNetworkL f PluginConfig{..} = (\pluginConfigNetwork -> PluginConfig { pluginConfigNetwork, ..} ) <$> f pluginConfigNetwork
{-# INLINE pluginConfigNetworkL #-}

-- | 'pluginConfigLinux' Lens
pluginConfigLinuxL :: Lens_' PluginConfig (PluginConfigLinux)
pluginConfigLinuxL f PluginConfig{..} = (\pluginConfigLinux -> PluginConfig { pluginConfigLinux, ..} ) <$> f pluginConfigLinux
{-# INLINE pluginConfigLinuxL #-}

-- | 'pluginConfigPropagatedMount' Lens
pluginConfigPropagatedMountL :: Lens_' PluginConfig (Text)
pluginConfigPropagatedMountL f PluginConfig{..} = (\pluginConfigPropagatedMount -> PluginConfig { pluginConfigPropagatedMount, ..} ) <$> f pluginConfigPropagatedMount
{-# INLINE pluginConfigPropagatedMountL #-}

-- | 'pluginConfigIpcHost' Lens
pluginConfigIpcHostL :: Lens_' PluginConfig (Bool)
pluginConfigIpcHostL f PluginConfig{..} = (\pluginConfigIpcHost -> PluginConfig { pluginConfigIpcHost, ..} ) <$> f pluginConfigIpcHost
{-# INLINE pluginConfigIpcHostL #-}

-- | 'pluginConfigPidHost' Lens
pluginConfigPidHostL :: Lens_' PluginConfig (Bool)
pluginConfigPidHostL f PluginConfig{..} = (\pluginConfigPidHost -> PluginConfig { pluginConfigPidHost, ..} ) <$> f pluginConfigPidHost
{-# INLINE pluginConfigPidHostL #-}

-- | 'pluginConfigMounts' Lens
pluginConfigMountsL :: Lens_' PluginConfig ([PluginMount])
pluginConfigMountsL f PluginConfig{..} = (\pluginConfigMounts -> PluginConfig { pluginConfigMounts, ..} ) <$> f pluginConfigMounts
{-# INLINE pluginConfigMountsL #-}

-- | 'pluginConfigEnv' Lens
pluginConfigEnvL :: Lens_' PluginConfig ([PluginEnv])
pluginConfigEnvL f PluginConfig{..} = (\pluginConfigEnv -> PluginConfig { pluginConfigEnv, ..} ) <$> f pluginConfigEnv
{-# INLINE pluginConfigEnvL #-}

-- | 'pluginConfigArgs' Lens
pluginConfigArgsL :: Lens_' PluginConfig (PluginConfigArgs)
pluginConfigArgsL f PluginConfig{..} = (\pluginConfigArgs -> PluginConfig { pluginConfigArgs, ..} ) <$> f pluginConfigArgs
{-# INLINE pluginConfigArgsL #-}

-- | 'pluginConfigRootfs' Lens
pluginConfigRootfsL :: Lens_' PluginConfig (Maybe PluginConfigRootfs)
pluginConfigRootfsL f PluginConfig{..} = (\pluginConfigRootfs -> PluginConfig { pluginConfigRootfs, ..} ) <$> f pluginConfigRootfs
{-# INLINE pluginConfigRootfsL #-}



-- * PluginConfigArgs

-- | 'pluginConfigArgsName' Lens
pluginConfigArgsNameL :: Lens_' PluginConfigArgs (Text)
pluginConfigArgsNameL f PluginConfigArgs{..} = (\pluginConfigArgsName -> PluginConfigArgs { pluginConfigArgsName, ..} ) <$> f pluginConfigArgsName
{-# INLINE pluginConfigArgsNameL #-}

-- | 'pluginConfigArgsDescription' Lens
pluginConfigArgsDescriptionL :: Lens_' PluginConfigArgs (Text)
pluginConfigArgsDescriptionL f PluginConfigArgs{..} = (\pluginConfigArgsDescription -> PluginConfigArgs { pluginConfigArgsDescription, ..} ) <$> f pluginConfigArgsDescription
{-# INLINE pluginConfigArgsDescriptionL #-}

-- | 'pluginConfigArgsSettable' Lens
pluginConfigArgsSettableL :: Lens_' PluginConfigArgs ([Text])
pluginConfigArgsSettableL f PluginConfigArgs{..} = (\pluginConfigArgsSettable -> PluginConfigArgs { pluginConfigArgsSettable, ..} ) <$> f pluginConfigArgsSettable
{-# INLINE pluginConfigArgsSettableL #-}

-- | 'pluginConfigArgsValue' Lens
pluginConfigArgsValueL :: Lens_' PluginConfigArgs ([Text])
pluginConfigArgsValueL f PluginConfigArgs{..} = (\pluginConfigArgsValue -> PluginConfigArgs { pluginConfigArgsValue, ..} ) <$> f pluginConfigArgsValue
{-# INLINE pluginConfigArgsValueL #-}



-- * PluginConfigInterface

-- | 'pluginConfigInterfaceTypes' Lens
pluginConfigInterfaceTypesL :: Lens_' PluginConfigInterface ([PluginInterfaceType])
pluginConfigInterfaceTypesL f PluginConfigInterface{..} = (\pluginConfigInterfaceTypes -> PluginConfigInterface { pluginConfigInterfaceTypes, ..} ) <$> f pluginConfigInterfaceTypes
{-# INLINE pluginConfigInterfaceTypesL #-}

-- | 'pluginConfigInterfaceSocket' Lens
pluginConfigInterfaceSocketL :: Lens_' PluginConfigInterface (Text)
pluginConfigInterfaceSocketL f PluginConfigInterface{..} = (\pluginConfigInterfaceSocket -> PluginConfigInterface { pluginConfigInterfaceSocket, ..} ) <$> f pluginConfigInterfaceSocket
{-# INLINE pluginConfigInterfaceSocketL #-}

-- | 'pluginConfigInterfaceProtocolScheme' Lens
pluginConfigInterfaceProtocolSchemeL :: Lens_' PluginConfigInterface (Maybe E'ProtocolScheme)
pluginConfigInterfaceProtocolSchemeL f PluginConfigInterface{..} = (\pluginConfigInterfaceProtocolScheme -> PluginConfigInterface { pluginConfigInterfaceProtocolScheme, ..} ) <$> f pluginConfigInterfaceProtocolScheme
{-# INLINE pluginConfigInterfaceProtocolSchemeL #-}



-- * PluginConfigLinux

-- | 'pluginConfigLinuxCapabilities' Lens
pluginConfigLinuxCapabilitiesL :: Lens_' PluginConfigLinux ([Text])
pluginConfigLinuxCapabilitiesL f PluginConfigLinux{..} = (\pluginConfigLinuxCapabilities -> PluginConfigLinux { pluginConfigLinuxCapabilities, ..} ) <$> f pluginConfigLinuxCapabilities
{-# INLINE pluginConfigLinuxCapabilitiesL #-}

-- | 'pluginConfigLinuxAllowAllDevices' Lens
pluginConfigLinuxAllowAllDevicesL :: Lens_' PluginConfigLinux (Bool)
pluginConfigLinuxAllowAllDevicesL f PluginConfigLinux{..} = (\pluginConfigLinuxAllowAllDevices -> PluginConfigLinux { pluginConfigLinuxAllowAllDevices, ..} ) <$> f pluginConfigLinuxAllowAllDevices
{-# INLINE pluginConfigLinuxAllowAllDevicesL #-}

-- | 'pluginConfigLinuxDevices' Lens
pluginConfigLinuxDevicesL :: Lens_' PluginConfigLinux ([PluginDevice])
pluginConfigLinuxDevicesL f PluginConfigLinux{..} = (\pluginConfigLinuxDevices -> PluginConfigLinux { pluginConfigLinuxDevices, ..} ) <$> f pluginConfigLinuxDevices
{-# INLINE pluginConfigLinuxDevicesL #-}



-- * PluginConfigNetwork

-- | 'pluginConfigNetworkType' Lens
pluginConfigNetworkTypeL :: Lens_' PluginConfigNetwork (Text)
pluginConfigNetworkTypeL f PluginConfigNetwork{..} = (\pluginConfigNetworkType -> PluginConfigNetwork { pluginConfigNetworkType, ..} ) <$> f pluginConfigNetworkType
{-# INLINE pluginConfigNetworkTypeL #-}



-- * PluginConfigRootfs

-- | 'pluginConfigRootfsType' Lens
pluginConfigRootfsTypeL :: Lens_' PluginConfigRootfs (Maybe Text)
pluginConfigRootfsTypeL f PluginConfigRootfs{..} = (\pluginConfigRootfsType -> PluginConfigRootfs { pluginConfigRootfsType, ..} ) <$> f pluginConfigRootfsType
{-# INLINE pluginConfigRootfsTypeL #-}

-- | 'pluginConfigRootfsDiffIds' Lens
pluginConfigRootfsDiffIdsL :: Lens_' PluginConfigRootfs (Maybe [Text])
pluginConfigRootfsDiffIdsL f PluginConfigRootfs{..} = (\pluginConfigRootfsDiffIds -> PluginConfigRootfs { pluginConfigRootfsDiffIds, ..} ) <$> f pluginConfigRootfsDiffIds
{-# INLINE pluginConfigRootfsDiffIdsL #-}



-- * PluginConfigUser

-- | 'pluginConfigUserUid' Lens
pluginConfigUserUidL :: Lens_' PluginConfigUser (Maybe Int)
pluginConfigUserUidL f PluginConfigUser{..} = (\pluginConfigUserUid -> PluginConfigUser { pluginConfigUserUid, ..} ) <$> f pluginConfigUserUid
{-# INLINE pluginConfigUserUidL #-}

-- | 'pluginConfigUserGid' Lens
pluginConfigUserGidL :: Lens_' PluginConfigUser (Maybe Int)
pluginConfigUserGidL f PluginConfigUser{..} = (\pluginConfigUserGid -> PluginConfigUser { pluginConfigUserGid, ..} ) <$> f pluginConfigUserGid
{-# INLINE pluginConfigUserGidL #-}



-- * PluginDevice

-- | 'pluginDeviceName' Lens
pluginDeviceNameL :: Lens_' PluginDevice (Text)
pluginDeviceNameL f PluginDevice{..} = (\pluginDeviceName -> PluginDevice { pluginDeviceName, ..} ) <$> f pluginDeviceName
{-# INLINE pluginDeviceNameL #-}

-- | 'pluginDeviceDescription' Lens
pluginDeviceDescriptionL :: Lens_' PluginDevice (Text)
pluginDeviceDescriptionL f PluginDevice{..} = (\pluginDeviceDescription -> PluginDevice { pluginDeviceDescription, ..} ) <$> f pluginDeviceDescription
{-# INLINE pluginDeviceDescriptionL #-}

-- | 'pluginDeviceSettable' Lens
pluginDeviceSettableL :: Lens_' PluginDevice ([Text])
pluginDeviceSettableL f PluginDevice{..} = (\pluginDeviceSettable -> PluginDevice { pluginDeviceSettable, ..} ) <$> f pluginDeviceSettable
{-# INLINE pluginDeviceSettableL #-}

-- | 'pluginDevicePath' Lens
pluginDevicePathL :: Lens_' PluginDevice (Text)
pluginDevicePathL f PluginDevice{..} = (\pluginDevicePath -> PluginDevice { pluginDevicePath, ..} ) <$> f pluginDevicePath
{-# INLINE pluginDevicePathL #-}



-- * PluginEnv

-- | 'pluginEnvName' Lens
pluginEnvNameL :: Lens_' PluginEnv (Text)
pluginEnvNameL f PluginEnv{..} = (\pluginEnvName -> PluginEnv { pluginEnvName, ..} ) <$> f pluginEnvName
{-# INLINE pluginEnvNameL #-}

-- | 'pluginEnvDescription' Lens
pluginEnvDescriptionL :: Lens_' PluginEnv (Text)
pluginEnvDescriptionL f PluginEnv{..} = (\pluginEnvDescription -> PluginEnv { pluginEnvDescription, ..} ) <$> f pluginEnvDescription
{-# INLINE pluginEnvDescriptionL #-}

-- | 'pluginEnvSettable' Lens
pluginEnvSettableL :: Lens_' PluginEnv ([Text])
pluginEnvSettableL f PluginEnv{..} = (\pluginEnvSettable -> PluginEnv { pluginEnvSettable, ..} ) <$> f pluginEnvSettable
{-# INLINE pluginEnvSettableL #-}

-- | 'pluginEnvValue' Lens
pluginEnvValueL :: Lens_' PluginEnv (Text)
pluginEnvValueL f PluginEnv{..} = (\pluginEnvValue -> PluginEnv { pluginEnvValue, ..} ) <$> f pluginEnvValue
{-# INLINE pluginEnvValueL #-}



-- * PluginInterfaceType

-- | 'pluginInterfaceTypePrefix' Lens
pluginInterfaceTypePrefixL :: Lens_' PluginInterfaceType (Text)
pluginInterfaceTypePrefixL f PluginInterfaceType{..} = (\pluginInterfaceTypePrefix -> PluginInterfaceType { pluginInterfaceTypePrefix, ..} ) <$> f pluginInterfaceTypePrefix
{-# INLINE pluginInterfaceTypePrefixL #-}

-- | 'pluginInterfaceTypeCapability' Lens
pluginInterfaceTypeCapabilityL :: Lens_' PluginInterfaceType (Text)
pluginInterfaceTypeCapabilityL f PluginInterfaceType{..} = (\pluginInterfaceTypeCapability -> PluginInterfaceType { pluginInterfaceTypeCapability, ..} ) <$> f pluginInterfaceTypeCapability
{-# INLINE pluginInterfaceTypeCapabilityL #-}

-- | 'pluginInterfaceTypeVersion' Lens
pluginInterfaceTypeVersionL :: Lens_' PluginInterfaceType (Text)
pluginInterfaceTypeVersionL f PluginInterfaceType{..} = (\pluginInterfaceTypeVersion -> PluginInterfaceType { pluginInterfaceTypeVersion, ..} ) <$> f pluginInterfaceTypeVersion
{-# INLINE pluginInterfaceTypeVersionL #-}



-- * PluginMount

-- | 'pluginMountName' Lens
pluginMountNameL :: Lens_' PluginMount (Text)
pluginMountNameL f PluginMount{..} = (\pluginMountName -> PluginMount { pluginMountName, ..} ) <$> f pluginMountName
{-# INLINE pluginMountNameL #-}

-- | 'pluginMountDescription' Lens
pluginMountDescriptionL :: Lens_' PluginMount (Text)
pluginMountDescriptionL f PluginMount{..} = (\pluginMountDescription -> PluginMount { pluginMountDescription, ..} ) <$> f pluginMountDescription
{-# INLINE pluginMountDescriptionL #-}

-- | 'pluginMountSettable' Lens
pluginMountSettableL :: Lens_' PluginMount ([Text])
pluginMountSettableL f PluginMount{..} = (\pluginMountSettable -> PluginMount { pluginMountSettable, ..} ) <$> f pluginMountSettable
{-# INLINE pluginMountSettableL #-}

-- | 'pluginMountSource' Lens
pluginMountSourceL :: Lens_' PluginMount (Text)
pluginMountSourceL f PluginMount{..} = (\pluginMountSource -> PluginMount { pluginMountSource, ..} ) <$> f pluginMountSource
{-# INLINE pluginMountSourceL #-}

-- | 'pluginMountDestination' Lens
pluginMountDestinationL :: Lens_' PluginMount (Text)
pluginMountDestinationL f PluginMount{..} = (\pluginMountDestination -> PluginMount { pluginMountDestination, ..} ) <$> f pluginMountDestination
{-# INLINE pluginMountDestinationL #-}

-- | 'pluginMountType' Lens
pluginMountTypeL :: Lens_' PluginMount (Text)
pluginMountTypeL f PluginMount{..} = (\pluginMountType -> PluginMount { pluginMountType, ..} ) <$> f pluginMountType
{-# INLINE pluginMountTypeL #-}

-- | 'pluginMountOptions' Lens
pluginMountOptionsL :: Lens_' PluginMount ([Text])
pluginMountOptionsL f PluginMount{..} = (\pluginMountOptions -> PluginMount { pluginMountOptions, ..} ) <$> f pluginMountOptions
{-# INLINE pluginMountOptionsL #-}



-- * PluginPrivilegeItem

-- | 'pluginPrivilegeItemName' Lens
pluginPrivilegeItemNameL :: Lens_' PluginPrivilegeItem (Maybe Text)
pluginPrivilegeItemNameL f PluginPrivilegeItem{..} = (\pluginPrivilegeItemName -> PluginPrivilegeItem { pluginPrivilegeItemName, ..} ) <$> f pluginPrivilegeItemName
{-# INLINE pluginPrivilegeItemNameL #-}

-- | 'pluginPrivilegeItemDescription' Lens
pluginPrivilegeItemDescriptionL :: Lens_' PluginPrivilegeItem (Maybe Text)
pluginPrivilegeItemDescriptionL f PluginPrivilegeItem{..} = (\pluginPrivilegeItemDescription -> PluginPrivilegeItem { pluginPrivilegeItemDescription, ..} ) <$> f pluginPrivilegeItemDescription
{-# INLINE pluginPrivilegeItemDescriptionL #-}

-- | 'pluginPrivilegeItemValue' Lens
pluginPrivilegeItemValueL :: Lens_' PluginPrivilegeItem (Maybe [Text])
pluginPrivilegeItemValueL f PluginPrivilegeItem{..} = (\pluginPrivilegeItemValue -> PluginPrivilegeItem { pluginPrivilegeItemValue, ..} ) <$> f pluginPrivilegeItemValue
{-# INLINE pluginPrivilegeItemValueL #-}



-- * PluginPullRequestInner

-- | 'pluginPullRequestInnerName' Lens
pluginPullRequestInnerNameL :: Lens_' PluginPullRequestInner (Maybe Text)
pluginPullRequestInnerNameL f PluginPullRequestInner{..} = (\pluginPullRequestInnerName -> PluginPullRequestInner { pluginPullRequestInnerName, ..} ) <$> f pluginPullRequestInnerName
{-# INLINE pluginPullRequestInnerNameL #-}

-- | 'pluginPullRequestInnerDescription' Lens
pluginPullRequestInnerDescriptionL :: Lens_' PluginPullRequestInner (Maybe Text)
pluginPullRequestInnerDescriptionL f PluginPullRequestInner{..} = (\pluginPullRequestInnerDescription -> PluginPullRequestInner { pluginPullRequestInnerDescription, ..} ) <$> f pluginPullRequestInnerDescription
{-# INLINE pluginPullRequestInnerDescriptionL #-}

-- | 'pluginPullRequestInnerValue' Lens
pluginPullRequestInnerValueL :: Lens_' PluginPullRequestInner (Maybe [Text])
pluginPullRequestInnerValueL f PluginPullRequestInner{..} = (\pluginPullRequestInnerValue -> PluginPullRequestInner { pluginPullRequestInnerValue, ..} ) <$> f pluginPullRequestInnerValue
{-# INLINE pluginPullRequestInnerValueL #-}



-- * PluginSettings

-- | 'pluginSettingsMounts' Lens
pluginSettingsMountsL :: Lens_' PluginSettings ([PluginMount])
pluginSettingsMountsL f PluginSettings{..} = (\pluginSettingsMounts -> PluginSettings { pluginSettingsMounts, ..} ) <$> f pluginSettingsMounts
{-# INLINE pluginSettingsMountsL #-}

-- | 'pluginSettingsEnv' Lens
pluginSettingsEnvL :: Lens_' PluginSettings ([Text])
pluginSettingsEnvL f PluginSettings{..} = (\pluginSettingsEnv -> PluginSettings { pluginSettingsEnv, ..} ) <$> f pluginSettingsEnv
{-# INLINE pluginSettingsEnvL #-}

-- | 'pluginSettingsArgs' Lens
pluginSettingsArgsL :: Lens_' PluginSettings ([Text])
pluginSettingsArgsL f PluginSettings{..} = (\pluginSettingsArgs -> PluginSettings { pluginSettingsArgs, ..} ) <$> f pluginSettingsArgs
{-# INLINE pluginSettingsArgsL #-}

-- | 'pluginSettingsDevices' Lens
pluginSettingsDevicesL :: Lens_' PluginSettings ([PluginDevice])
pluginSettingsDevicesL f PluginSettings{..} = (\pluginSettingsDevices -> PluginSettings { pluginSettingsDevices, ..} ) <$> f pluginSettingsDevices
{-# INLINE pluginSettingsDevicesL #-}



-- * PluginsInfo

-- | 'pluginsInfoVolume' Lens
pluginsInfoVolumeL :: Lens_' PluginsInfo (Maybe [Text])
pluginsInfoVolumeL f PluginsInfo{..} = (\pluginsInfoVolume -> PluginsInfo { pluginsInfoVolume, ..} ) <$> f pluginsInfoVolume
{-# INLINE pluginsInfoVolumeL #-}

-- | 'pluginsInfoNetwork' Lens
pluginsInfoNetworkL :: Lens_' PluginsInfo (Maybe [Text])
pluginsInfoNetworkL f PluginsInfo{..} = (\pluginsInfoNetwork -> PluginsInfo { pluginsInfoNetwork, ..} ) <$> f pluginsInfoNetwork
{-# INLINE pluginsInfoNetworkL #-}

-- | 'pluginsInfoAuthorization' Lens
pluginsInfoAuthorizationL :: Lens_' PluginsInfo (Maybe [Text])
pluginsInfoAuthorizationL f PluginsInfo{..} = (\pluginsInfoAuthorization -> PluginsInfo { pluginsInfoAuthorization, ..} ) <$> f pluginsInfoAuthorization
{-# INLINE pluginsInfoAuthorizationL #-}

-- | 'pluginsInfoLog' Lens
pluginsInfoLogL :: Lens_' PluginsInfo (Maybe [Text])
pluginsInfoLogL f PluginsInfo{..} = (\pluginsInfoLog -> PluginsInfo { pluginsInfoLog, ..} ) <$> f pluginsInfoLog
{-# INLINE pluginsInfoLogL #-}



-- * Port

-- | 'portIp' Lens
portIpL :: Lens_' Port (Maybe Text)
portIpL f Port{..} = (\portIp -> Port { portIp, ..} ) <$> f portIp
{-# INLINE portIpL #-}

-- | 'portPrivatePort' Lens
portPrivatePortL :: Lens_' Port (Int)
portPrivatePortL f Port{..} = (\portPrivatePort -> Port { portPrivatePort, ..} ) <$> f portPrivatePort
{-# INLINE portPrivatePortL #-}

-- | 'portPublicPort' Lens
portPublicPortL :: Lens_' Port (Maybe Int)
portPublicPortL f Port{..} = (\portPublicPort -> Port { portPublicPort, ..} ) <$> f portPublicPort
{-# INLINE portPublicPortL #-}

-- | 'portType' Lens
portTypeL :: Lens_' Port (E'Type)
portTypeL f Port{..} = (\portType -> Port { portType, ..} ) <$> f portType
{-# INLINE portTypeL #-}



-- * PortBinding

-- | 'portBindingHostIp' Lens
portBindingHostIpL :: Lens_' PortBinding (Maybe Text)
portBindingHostIpL f PortBinding{..} = (\portBindingHostIp -> PortBinding { portBindingHostIp, ..} ) <$> f portBindingHostIp
{-# INLINE portBindingHostIpL #-}

-- | 'portBindingHostPort' Lens
portBindingHostPortL :: Lens_' PortBinding (Maybe Text)
portBindingHostPortL f PortBinding{..} = (\portBindingHostPort -> PortBinding { portBindingHostPort, ..} ) <$> f portBindingHostPort
{-# INLINE portBindingHostPortL #-}



-- * ProcessConfig

-- | 'processConfigPrivileged' Lens
processConfigPrivilegedL :: Lens_' ProcessConfig (Maybe Bool)
processConfigPrivilegedL f ProcessConfig{..} = (\processConfigPrivileged -> ProcessConfig { processConfigPrivileged, ..} ) <$> f processConfigPrivileged
{-# INLINE processConfigPrivilegedL #-}

-- | 'processConfigUser' Lens
processConfigUserL :: Lens_' ProcessConfig (Maybe Text)
processConfigUserL f ProcessConfig{..} = (\processConfigUser -> ProcessConfig { processConfigUser, ..} ) <$> f processConfigUser
{-# INLINE processConfigUserL #-}

-- | 'processConfigTty' Lens
processConfigTtyL :: Lens_' ProcessConfig (Maybe Bool)
processConfigTtyL f ProcessConfig{..} = (\processConfigTty -> ProcessConfig { processConfigTty, ..} ) <$> f processConfigTty
{-# INLINE processConfigTtyL #-}

-- | 'processConfigEntrypoint' Lens
processConfigEntrypointL :: Lens_' ProcessConfig (Maybe Text)
processConfigEntrypointL f ProcessConfig{..} = (\processConfigEntrypoint -> ProcessConfig { processConfigEntrypoint, ..} ) <$> f processConfigEntrypoint
{-# INLINE processConfigEntrypointL #-}

-- | 'processConfigArguments' Lens
processConfigArgumentsL :: Lens_' ProcessConfig (Maybe [Text])
processConfigArgumentsL f ProcessConfig{..} = (\processConfigArguments -> ProcessConfig { processConfigArguments, ..} ) <$> f processConfigArguments
{-# INLINE processConfigArgumentsL #-}



-- * ProgressDetail

-- | 'progressDetailCurrent' Lens
progressDetailCurrentL :: Lens_' ProgressDetail (Maybe Int)
progressDetailCurrentL f ProgressDetail{..} = (\progressDetailCurrent -> ProgressDetail { progressDetailCurrent, ..} ) <$> f progressDetailCurrent
{-# INLINE progressDetailCurrentL #-}

-- | 'progressDetailTotal' Lens
progressDetailTotalL :: Lens_' ProgressDetail (Maybe Int)
progressDetailTotalL f ProgressDetail{..} = (\progressDetailTotal -> ProgressDetail { progressDetailTotal, ..} ) <$> f progressDetailTotal
{-# INLINE progressDetailTotalL #-}



-- * PushImageInfo

-- | 'pushImageInfoError' Lens
pushImageInfoErrorL :: Lens_' PushImageInfo (Maybe Text)
pushImageInfoErrorL f PushImageInfo{..} = (\pushImageInfoError -> PushImageInfo { pushImageInfoError, ..} ) <$> f pushImageInfoError
{-# INLINE pushImageInfoErrorL #-}

-- | 'pushImageInfoStatus' Lens
pushImageInfoStatusL :: Lens_' PushImageInfo (Maybe Text)
pushImageInfoStatusL f PushImageInfo{..} = (\pushImageInfoStatus -> PushImageInfo { pushImageInfoStatus, ..} ) <$> f pushImageInfoStatus
{-# INLINE pushImageInfoStatusL #-}

-- | 'pushImageInfoProgress' Lens
pushImageInfoProgressL :: Lens_' PushImageInfo (Maybe Text)
pushImageInfoProgressL f PushImageInfo{..} = (\pushImageInfoProgress -> PushImageInfo { pushImageInfoProgress, ..} ) <$> f pushImageInfoProgress
{-# INLINE pushImageInfoProgressL #-}

-- | 'pushImageInfoProgressDetail' Lens
pushImageInfoProgressDetailL :: Lens_' PushImageInfo (Maybe ProgressDetail)
pushImageInfoProgressDetailL f PushImageInfo{..} = (\pushImageInfoProgressDetail -> PushImageInfo { pushImageInfoProgressDetail, ..} ) <$> f pushImageInfoProgressDetail
{-# INLINE pushImageInfoProgressDetailL #-}



-- * Reachability



-- * RegistryServiceConfig

-- | 'registryServiceConfigAllowNondistributableArtifactsCidrs' Lens
registryServiceConfigAllowNondistributableArtifactsCidrsL :: Lens_' RegistryServiceConfig (Maybe [Text])
registryServiceConfigAllowNondistributableArtifactsCidrsL f RegistryServiceConfig{..} = (\registryServiceConfigAllowNondistributableArtifactsCidrs -> RegistryServiceConfig { registryServiceConfigAllowNondistributableArtifactsCidrs, ..} ) <$> f registryServiceConfigAllowNondistributableArtifactsCidrs
{-# INLINE registryServiceConfigAllowNondistributableArtifactsCidrsL #-}

-- | 'registryServiceConfigAllowNondistributableArtifactsHostnames' Lens
registryServiceConfigAllowNondistributableArtifactsHostnamesL :: Lens_' RegistryServiceConfig (Maybe [Text])
registryServiceConfigAllowNondistributableArtifactsHostnamesL f RegistryServiceConfig{..} = (\registryServiceConfigAllowNondistributableArtifactsHostnames -> RegistryServiceConfig { registryServiceConfigAllowNondistributableArtifactsHostnames, ..} ) <$> f registryServiceConfigAllowNondistributableArtifactsHostnames
{-# INLINE registryServiceConfigAllowNondistributableArtifactsHostnamesL #-}

-- | 'registryServiceConfigInsecureRegistryCidrs' Lens
registryServiceConfigInsecureRegistryCidrsL :: Lens_' RegistryServiceConfig (Maybe [Text])
registryServiceConfigInsecureRegistryCidrsL f RegistryServiceConfig{..} = (\registryServiceConfigInsecureRegistryCidrs -> RegistryServiceConfig { registryServiceConfigInsecureRegistryCidrs, ..} ) <$> f registryServiceConfigInsecureRegistryCidrs
{-# INLINE registryServiceConfigInsecureRegistryCidrsL #-}

-- | 'registryServiceConfigIndexConfigs' Lens
registryServiceConfigIndexConfigsL :: Lens_' RegistryServiceConfig (Maybe (Map.Map String IndexInfo))
registryServiceConfigIndexConfigsL f RegistryServiceConfig{..} = (\registryServiceConfigIndexConfigs -> RegistryServiceConfig { registryServiceConfigIndexConfigs, ..} ) <$> f registryServiceConfigIndexConfigs
{-# INLINE registryServiceConfigIndexConfigsL #-}

-- | 'registryServiceConfigMirrors' Lens
registryServiceConfigMirrorsL :: Lens_' RegistryServiceConfig (Maybe [Text])
registryServiceConfigMirrorsL f RegistryServiceConfig{..} = (\registryServiceConfigMirrors -> RegistryServiceConfig { registryServiceConfigMirrors, ..} ) <$> f registryServiceConfigMirrors
{-# INLINE registryServiceConfigMirrorsL #-}



-- * ResourceObject

-- | 'resourceObjectNanoCpus' Lens
resourceObjectNanoCpusL :: Lens_' ResourceObject (Maybe Integer)
resourceObjectNanoCpusL f ResourceObject{..} = (\resourceObjectNanoCpus -> ResourceObject { resourceObjectNanoCpus, ..} ) <$> f resourceObjectNanoCpus
{-# INLINE resourceObjectNanoCpusL #-}

-- | 'resourceObjectMemoryBytes' Lens
resourceObjectMemoryBytesL :: Lens_' ResourceObject (Maybe Integer)
resourceObjectMemoryBytesL f ResourceObject{..} = (\resourceObjectMemoryBytes -> ResourceObject { resourceObjectMemoryBytes, ..} ) <$> f resourceObjectMemoryBytes
{-# INLINE resourceObjectMemoryBytesL #-}

-- | 'resourceObjectGenericResources' Lens
resourceObjectGenericResourcesL :: Lens_' ResourceObject (Maybe [GenericResourcesInner])
resourceObjectGenericResourcesL f ResourceObject{..} = (\resourceObjectGenericResources -> ResourceObject { resourceObjectGenericResources, ..} ) <$> f resourceObjectGenericResources
{-# INLINE resourceObjectGenericResourcesL #-}



-- * Resources

-- | 'resourcesCpuShares' Lens
resourcesCpuSharesL :: Lens_' Resources (Maybe Int)
resourcesCpuSharesL f Resources{..} = (\resourcesCpuShares -> Resources { resourcesCpuShares, ..} ) <$> f resourcesCpuShares
{-# INLINE resourcesCpuSharesL #-}

-- | 'resourcesMemory' Lens
resourcesMemoryL :: Lens_' Resources (Maybe Integer)
resourcesMemoryL f Resources{..} = (\resourcesMemory -> Resources { resourcesMemory, ..} ) <$> f resourcesMemory
{-# INLINE resourcesMemoryL #-}

-- | 'resourcesCgroupParent' Lens
resourcesCgroupParentL :: Lens_' Resources (Maybe Text)
resourcesCgroupParentL f Resources{..} = (\resourcesCgroupParent -> Resources { resourcesCgroupParent, ..} ) <$> f resourcesCgroupParent
{-# INLINE resourcesCgroupParentL #-}

-- | 'resourcesBlkioWeight' Lens
resourcesBlkioWeightL :: Lens_' Resources (Maybe Int)
resourcesBlkioWeightL f Resources{..} = (\resourcesBlkioWeight -> Resources { resourcesBlkioWeight, ..} ) <$> f resourcesBlkioWeight
{-# INLINE resourcesBlkioWeightL #-}

-- | 'resourcesBlkioWeightDevice' Lens
resourcesBlkioWeightDeviceL :: Lens_' Resources (Maybe [ResourcesBlkioWeightDeviceInner])
resourcesBlkioWeightDeviceL f Resources{..} = (\resourcesBlkioWeightDevice -> Resources { resourcesBlkioWeightDevice, ..} ) <$> f resourcesBlkioWeightDevice
{-# INLINE resourcesBlkioWeightDeviceL #-}

-- | 'resourcesBlkioDeviceReadBps' Lens
resourcesBlkioDeviceReadBpsL :: Lens_' Resources (Maybe [ThrottleDevice])
resourcesBlkioDeviceReadBpsL f Resources{..} = (\resourcesBlkioDeviceReadBps -> Resources { resourcesBlkioDeviceReadBps, ..} ) <$> f resourcesBlkioDeviceReadBps
{-# INLINE resourcesBlkioDeviceReadBpsL #-}

-- | 'resourcesBlkioDeviceWriteBps' Lens
resourcesBlkioDeviceWriteBpsL :: Lens_' Resources (Maybe [ThrottleDevice])
resourcesBlkioDeviceWriteBpsL f Resources{..} = (\resourcesBlkioDeviceWriteBps -> Resources { resourcesBlkioDeviceWriteBps, ..} ) <$> f resourcesBlkioDeviceWriteBps
{-# INLINE resourcesBlkioDeviceWriteBpsL #-}

-- | 'resourcesBlkioDeviceReadIOps' Lens
resourcesBlkioDeviceReadIOpsL :: Lens_' Resources (Maybe [ThrottleDevice])
resourcesBlkioDeviceReadIOpsL f Resources{..} = (\resourcesBlkioDeviceReadIOps -> Resources { resourcesBlkioDeviceReadIOps, ..} ) <$> f resourcesBlkioDeviceReadIOps
{-# INLINE resourcesBlkioDeviceReadIOpsL #-}

-- | 'resourcesBlkioDeviceWriteIOps' Lens
resourcesBlkioDeviceWriteIOpsL :: Lens_' Resources (Maybe [ThrottleDevice])
resourcesBlkioDeviceWriteIOpsL f Resources{..} = (\resourcesBlkioDeviceWriteIOps -> Resources { resourcesBlkioDeviceWriteIOps, ..} ) <$> f resourcesBlkioDeviceWriteIOps
{-# INLINE resourcesBlkioDeviceWriteIOpsL #-}

-- | 'resourcesCpuPeriod' Lens
resourcesCpuPeriodL :: Lens_' Resources (Maybe Integer)
resourcesCpuPeriodL f Resources{..} = (\resourcesCpuPeriod -> Resources { resourcesCpuPeriod, ..} ) <$> f resourcesCpuPeriod
{-# INLINE resourcesCpuPeriodL #-}

-- | 'resourcesCpuQuota' Lens
resourcesCpuQuotaL :: Lens_' Resources (Maybe Integer)
resourcesCpuQuotaL f Resources{..} = (\resourcesCpuQuota -> Resources { resourcesCpuQuota, ..} ) <$> f resourcesCpuQuota
{-# INLINE resourcesCpuQuotaL #-}

-- | 'resourcesCpuRealtimePeriod' Lens
resourcesCpuRealtimePeriodL :: Lens_' Resources (Maybe Integer)
resourcesCpuRealtimePeriodL f Resources{..} = (\resourcesCpuRealtimePeriod -> Resources { resourcesCpuRealtimePeriod, ..} ) <$> f resourcesCpuRealtimePeriod
{-# INLINE resourcesCpuRealtimePeriodL #-}

-- | 'resourcesCpuRealtimeRuntime' Lens
resourcesCpuRealtimeRuntimeL :: Lens_' Resources (Maybe Integer)
resourcesCpuRealtimeRuntimeL f Resources{..} = (\resourcesCpuRealtimeRuntime -> Resources { resourcesCpuRealtimeRuntime, ..} ) <$> f resourcesCpuRealtimeRuntime
{-# INLINE resourcesCpuRealtimeRuntimeL #-}

-- | 'resourcesCpusetCpus' Lens
resourcesCpusetCpusL :: Lens_' Resources (Maybe Text)
resourcesCpusetCpusL f Resources{..} = (\resourcesCpusetCpus -> Resources { resourcesCpusetCpus, ..} ) <$> f resourcesCpusetCpus
{-# INLINE resourcesCpusetCpusL #-}

-- | 'resourcesCpusetMems' Lens
resourcesCpusetMemsL :: Lens_' Resources (Maybe Text)
resourcesCpusetMemsL f Resources{..} = (\resourcesCpusetMems -> Resources { resourcesCpusetMems, ..} ) <$> f resourcesCpusetMems
{-# INLINE resourcesCpusetMemsL #-}

-- | 'resourcesDevices' Lens
resourcesDevicesL :: Lens_' Resources (Maybe [DeviceMapping])
resourcesDevicesL f Resources{..} = (\resourcesDevices -> Resources { resourcesDevices, ..} ) <$> f resourcesDevices
{-# INLINE resourcesDevicesL #-}

-- | 'resourcesDeviceCgroupRules' Lens
resourcesDeviceCgroupRulesL :: Lens_' Resources (Maybe [Text])
resourcesDeviceCgroupRulesL f Resources{..} = (\resourcesDeviceCgroupRules -> Resources { resourcesDeviceCgroupRules, ..} ) <$> f resourcesDeviceCgroupRules
{-# INLINE resourcesDeviceCgroupRulesL #-}

-- | 'resourcesDiskQuota' Lens
resourcesDiskQuotaL :: Lens_' Resources (Maybe Integer)
resourcesDiskQuotaL f Resources{..} = (\resourcesDiskQuota -> Resources { resourcesDiskQuota, ..} ) <$> f resourcesDiskQuota
{-# INLINE resourcesDiskQuotaL #-}

-- | 'resourcesKernelMemory' Lens
resourcesKernelMemoryL :: Lens_' Resources (Maybe Integer)
resourcesKernelMemoryL f Resources{..} = (\resourcesKernelMemory -> Resources { resourcesKernelMemory, ..} ) <$> f resourcesKernelMemory
{-# INLINE resourcesKernelMemoryL #-}

-- | 'resourcesMemoryReservation' Lens
resourcesMemoryReservationL :: Lens_' Resources (Maybe Integer)
resourcesMemoryReservationL f Resources{..} = (\resourcesMemoryReservation -> Resources { resourcesMemoryReservation, ..} ) <$> f resourcesMemoryReservation
{-# INLINE resourcesMemoryReservationL #-}

-- | 'resourcesMemorySwap' Lens
resourcesMemorySwapL :: Lens_' Resources (Maybe Integer)
resourcesMemorySwapL f Resources{..} = (\resourcesMemorySwap -> Resources { resourcesMemorySwap, ..} ) <$> f resourcesMemorySwap
{-# INLINE resourcesMemorySwapL #-}

-- | 'resourcesMemorySwappiness' Lens
resourcesMemorySwappinessL :: Lens_' Resources (Maybe Integer)
resourcesMemorySwappinessL f Resources{..} = (\resourcesMemorySwappiness -> Resources { resourcesMemorySwappiness, ..} ) <$> f resourcesMemorySwappiness
{-# INLINE resourcesMemorySwappinessL #-}

-- | 'resourcesNanoCpus' Lens
resourcesNanoCpusL :: Lens_' Resources (Maybe Integer)
resourcesNanoCpusL f Resources{..} = (\resourcesNanoCpus -> Resources { resourcesNanoCpus, ..} ) <$> f resourcesNanoCpus
{-# INLINE resourcesNanoCpusL #-}

-- | 'resourcesOomKillDisable' Lens
resourcesOomKillDisableL :: Lens_' Resources (Maybe Bool)
resourcesOomKillDisableL f Resources{..} = (\resourcesOomKillDisable -> Resources { resourcesOomKillDisable, ..} ) <$> f resourcesOomKillDisable
{-# INLINE resourcesOomKillDisableL #-}

-- | 'resourcesInit' Lens
resourcesInitL :: Lens_' Resources (Maybe Bool)
resourcesInitL f Resources{..} = (\resourcesInit -> Resources { resourcesInit, ..} ) <$> f resourcesInit
{-# INLINE resourcesInitL #-}

-- | 'resourcesPidsLimit' Lens
resourcesPidsLimitL :: Lens_' Resources (Maybe Integer)
resourcesPidsLimitL f Resources{..} = (\resourcesPidsLimit -> Resources { resourcesPidsLimit, ..} ) <$> f resourcesPidsLimit
{-# INLINE resourcesPidsLimitL #-}

-- | 'resourcesUlimits' Lens
resourcesUlimitsL :: Lens_' Resources (Maybe [ResourcesUlimitsInner])
resourcesUlimitsL f Resources{..} = (\resourcesUlimits -> Resources { resourcesUlimits, ..} ) <$> f resourcesUlimits
{-# INLINE resourcesUlimitsL #-}

-- | 'resourcesCpuCount' Lens
resourcesCpuCountL :: Lens_' Resources (Maybe Integer)
resourcesCpuCountL f Resources{..} = (\resourcesCpuCount -> Resources { resourcesCpuCount, ..} ) <$> f resourcesCpuCount
{-# INLINE resourcesCpuCountL #-}

-- | 'resourcesCpuPercent' Lens
resourcesCpuPercentL :: Lens_' Resources (Maybe Integer)
resourcesCpuPercentL f Resources{..} = (\resourcesCpuPercent -> Resources { resourcesCpuPercent, ..} ) <$> f resourcesCpuPercent
{-# INLINE resourcesCpuPercentL #-}

-- | 'resourcesIoMaximumIOps' Lens
resourcesIoMaximumIOpsL :: Lens_' Resources (Maybe Integer)
resourcesIoMaximumIOpsL f Resources{..} = (\resourcesIoMaximumIOps -> Resources { resourcesIoMaximumIOps, ..} ) <$> f resourcesIoMaximumIOps
{-# INLINE resourcesIoMaximumIOpsL #-}

-- | 'resourcesIoMaximumBandwidth' Lens
resourcesIoMaximumBandwidthL :: Lens_' Resources (Maybe Integer)
resourcesIoMaximumBandwidthL f Resources{..} = (\resourcesIoMaximumBandwidth -> Resources { resourcesIoMaximumBandwidth, ..} ) <$> f resourcesIoMaximumBandwidth
{-# INLINE resourcesIoMaximumBandwidthL #-}



-- * ResourcesBlkioWeightDeviceInner

-- | 'resourcesBlkioWeightDeviceInnerPath' Lens
resourcesBlkioWeightDeviceInnerPathL :: Lens_' ResourcesBlkioWeightDeviceInner (Maybe Text)
resourcesBlkioWeightDeviceInnerPathL f ResourcesBlkioWeightDeviceInner{..} = (\resourcesBlkioWeightDeviceInnerPath -> ResourcesBlkioWeightDeviceInner { resourcesBlkioWeightDeviceInnerPath, ..} ) <$> f resourcesBlkioWeightDeviceInnerPath
{-# INLINE resourcesBlkioWeightDeviceInnerPathL #-}

-- | 'resourcesBlkioWeightDeviceInnerWeight' Lens
resourcesBlkioWeightDeviceInnerWeightL :: Lens_' ResourcesBlkioWeightDeviceInner (Maybe Int)
resourcesBlkioWeightDeviceInnerWeightL f ResourcesBlkioWeightDeviceInner{..} = (\resourcesBlkioWeightDeviceInnerWeight -> ResourcesBlkioWeightDeviceInner { resourcesBlkioWeightDeviceInnerWeight, ..} ) <$> f resourcesBlkioWeightDeviceInnerWeight
{-# INLINE resourcesBlkioWeightDeviceInnerWeightL #-}



-- * ResourcesUlimitsInner

-- | 'resourcesUlimitsInnerName' Lens
resourcesUlimitsInnerNameL :: Lens_' ResourcesUlimitsInner (Maybe Text)
resourcesUlimitsInnerNameL f ResourcesUlimitsInner{..} = (\resourcesUlimitsInnerName -> ResourcesUlimitsInner { resourcesUlimitsInnerName, ..} ) <$> f resourcesUlimitsInnerName
{-# INLINE resourcesUlimitsInnerNameL #-}

-- | 'resourcesUlimitsInnerSoft' Lens
resourcesUlimitsInnerSoftL :: Lens_' ResourcesUlimitsInner (Maybe Int)
resourcesUlimitsInnerSoftL f ResourcesUlimitsInner{..} = (\resourcesUlimitsInnerSoft -> ResourcesUlimitsInner { resourcesUlimitsInnerSoft, ..} ) <$> f resourcesUlimitsInnerSoft
{-# INLINE resourcesUlimitsInnerSoftL #-}

-- | 'resourcesUlimitsInnerHard' Lens
resourcesUlimitsInnerHardL :: Lens_' ResourcesUlimitsInner (Maybe Int)
resourcesUlimitsInnerHardL f ResourcesUlimitsInner{..} = (\resourcesUlimitsInnerHard -> ResourcesUlimitsInner { resourcesUlimitsInnerHard, ..} ) <$> f resourcesUlimitsInnerHard
{-# INLINE resourcesUlimitsInnerHardL #-}



-- * RestartPolicy

-- | 'restartPolicyName' Lens
restartPolicyNameL :: Lens_' RestartPolicy (Maybe E'Name)
restartPolicyNameL f RestartPolicy{..} = (\restartPolicyName -> RestartPolicy { restartPolicyName, ..} ) <$> f restartPolicyName
{-# INLINE restartPolicyNameL #-}

-- | 'restartPolicyMaximumRetryCount' Lens
restartPolicyMaximumRetryCountL :: Lens_' RestartPolicy (Maybe Int)
restartPolicyMaximumRetryCountL f RestartPolicy{..} = (\restartPolicyMaximumRetryCount -> RestartPolicy { restartPolicyMaximumRetryCount, ..} ) <$> f restartPolicyMaximumRetryCount
{-# INLINE restartPolicyMaximumRetryCountL #-}



-- * Runtime

-- | 'runtimePath' Lens
runtimePathL :: Lens_' Runtime (Maybe Text)
runtimePathL f Runtime{..} = (\runtimePath -> Runtime { runtimePath, ..} ) <$> f runtimePath
{-# INLINE runtimePathL #-}

-- | 'runtimeRuntimeArgs' Lens
runtimeRuntimeArgsL :: Lens_' Runtime (Maybe [Text])
runtimeRuntimeArgsL f Runtime{..} = (\runtimeRuntimeArgs -> Runtime { runtimeRuntimeArgs, ..} ) <$> f runtimeRuntimeArgs
{-# INLINE runtimeRuntimeArgsL #-}



-- * Secret

-- | 'secretId' Lens
secretIdL :: Lens_' Secret (Maybe Text)
secretIdL f Secret{..} = (\secretId -> Secret { secretId, ..} ) <$> f secretId
{-# INLINE secretIdL #-}

-- | 'secretVersion' Lens
secretVersionL :: Lens_' Secret (Maybe ObjectVersion)
secretVersionL f Secret{..} = (\secretVersion -> Secret { secretVersion, ..} ) <$> f secretVersion
{-# INLINE secretVersionL #-}

-- | 'secretCreatedAt' Lens
secretCreatedAtL :: Lens_' Secret (Maybe Text)
secretCreatedAtL f Secret{..} = (\secretCreatedAt -> Secret { secretCreatedAt, ..} ) <$> f secretCreatedAt
{-# INLINE secretCreatedAtL #-}

-- | 'secretUpdatedAt' Lens
secretUpdatedAtL :: Lens_' Secret (Maybe Text)
secretUpdatedAtL f Secret{..} = (\secretUpdatedAt -> Secret { secretUpdatedAt, ..} ) <$> f secretUpdatedAt
{-# INLINE secretUpdatedAtL #-}

-- | 'secretSpec' Lens
secretSpecL :: Lens_' Secret (Maybe SecretSpec)
secretSpecL f Secret{..} = (\secretSpec -> Secret { secretSpec, ..} ) <$> f secretSpec
{-# INLINE secretSpecL #-}



-- * SecretCreateRequest

-- | 'secretCreateRequestName' Lens
secretCreateRequestNameL :: Lens_' SecretCreateRequest (Maybe Text)
secretCreateRequestNameL f SecretCreateRequest{..} = (\secretCreateRequestName -> SecretCreateRequest { secretCreateRequestName, ..} ) <$> f secretCreateRequestName
{-# INLINE secretCreateRequestNameL #-}

-- | 'secretCreateRequestLabels' Lens
secretCreateRequestLabelsL :: Lens_' SecretCreateRequest (Maybe (Map.Map String Text))
secretCreateRequestLabelsL f SecretCreateRequest{..} = (\secretCreateRequestLabels -> SecretCreateRequest { secretCreateRequestLabels, ..} ) <$> f secretCreateRequestLabels
{-# INLINE secretCreateRequestLabelsL #-}

-- | 'secretCreateRequestData' Lens
secretCreateRequestDataL :: Lens_' SecretCreateRequest (Maybe Text)
secretCreateRequestDataL f SecretCreateRequest{..} = (\secretCreateRequestData -> SecretCreateRequest { secretCreateRequestData, ..} ) <$> f secretCreateRequestData
{-# INLINE secretCreateRequestDataL #-}

-- | 'secretCreateRequestDriver' Lens
secretCreateRequestDriverL :: Lens_' SecretCreateRequest (Maybe Driver)
secretCreateRequestDriverL f SecretCreateRequest{..} = (\secretCreateRequestDriver -> SecretCreateRequest { secretCreateRequestDriver, ..} ) <$> f secretCreateRequestDriver
{-# INLINE secretCreateRequestDriverL #-}

-- | 'secretCreateRequestTemplating' Lens
secretCreateRequestTemplatingL :: Lens_' SecretCreateRequest (Maybe Driver)
secretCreateRequestTemplatingL f SecretCreateRequest{..} = (\secretCreateRequestTemplating -> SecretCreateRequest { secretCreateRequestTemplating, ..} ) <$> f secretCreateRequestTemplating
{-# INLINE secretCreateRequestTemplatingL #-}



-- * SecretSpec

-- | 'secretSpecName' Lens
secretSpecNameL :: Lens_' SecretSpec (Maybe Text)
secretSpecNameL f SecretSpec{..} = (\secretSpecName -> SecretSpec { secretSpecName, ..} ) <$> f secretSpecName
{-# INLINE secretSpecNameL #-}

-- | 'secretSpecLabels' Lens
secretSpecLabelsL :: Lens_' SecretSpec (Maybe (Map.Map String Text))
secretSpecLabelsL f SecretSpec{..} = (\secretSpecLabels -> SecretSpec { secretSpecLabels, ..} ) <$> f secretSpecLabels
{-# INLINE secretSpecLabelsL #-}

-- | 'secretSpecData' Lens
secretSpecDataL :: Lens_' SecretSpec (Maybe Text)
secretSpecDataL f SecretSpec{..} = (\secretSpecData -> SecretSpec { secretSpecData, ..} ) <$> f secretSpecData
{-# INLINE secretSpecDataL #-}

-- | 'secretSpecDriver' Lens
secretSpecDriverL :: Lens_' SecretSpec (Maybe Driver)
secretSpecDriverL f SecretSpec{..} = (\secretSpecDriver -> SecretSpec { secretSpecDriver, ..} ) <$> f secretSpecDriver
{-# INLINE secretSpecDriverL #-}

-- | 'secretSpecTemplating' Lens
secretSpecTemplatingL :: Lens_' SecretSpec (Maybe Driver)
secretSpecTemplatingL f SecretSpec{..} = (\secretSpecTemplating -> SecretSpec { secretSpecTemplating, ..} ) <$> f secretSpecTemplating
{-# INLINE secretSpecTemplatingL #-}



-- * Service

-- | 'serviceId' Lens
serviceIdL :: Lens_' Service (Maybe Text)
serviceIdL f Service{..} = (\serviceId -> Service { serviceId, ..} ) <$> f serviceId
{-# INLINE serviceIdL #-}

-- | 'serviceVersion' Lens
serviceVersionL :: Lens_' Service (Maybe ObjectVersion)
serviceVersionL f Service{..} = (\serviceVersion -> Service { serviceVersion, ..} ) <$> f serviceVersion
{-# INLINE serviceVersionL #-}

-- | 'serviceCreatedAt' Lens
serviceCreatedAtL :: Lens_' Service (Maybe Text)
serviceCreatedAtL f Service{..} = (\serviceCreatedAt -> Service { serviceCreatedAt, ..} ) <$> f serviceCreatedAt
{-# INLINE serviceCreatedAtL #-}

-- | 'serviceUpdatedAt' Lens
serviceUpdatedAtL :: Lens_' Service (Maybe Text)
serviceUpdatedAtL f Service{..} = (\serviceUpdatedAt -> Service { serviceUpdatedAt, ..} ) <$> f serviceUpdatedAt
{-# INLINE serviceUpdatedAtL #-}

-- | 'serviceSpec' Lens
serviceSpecL :: Lens_' Service (Maybe ServiceSpec)
serviceSpecL f Service{..} = (\serviceSpec -> Service { serviceSpec, ..} ) <$> f serviceSpec
{-# INLINE serviceSpecL #-}

-- | 'serviceEndpoint' Lens
serviceEndpointL :: Lens_' Service (Maybe ServiceEndpoint)
serviceEndpointL f Service{..} = (\serviceEndpoint -> Service { serviceEndpoint, ..} ) <$> f serviceEndpoint
{-# INLINE serviceEndpointL #-}

-- | 'serviceUpdateStatus' Lens
serviceUpdateStatusL :: Lens_' Service (Maybe ServiceUpdateStatus)
serviceUpdateStatusL f Service{..} = (\serviceUpdateStatus -> Service { serviceUpdateStatus, ..} ) <$> f serviceUpdateStatus
{-# INLINE serviceUpdateStatusL #-}



-- * ServiceCreateRequest

-- | 'serviceCreateRequestName' Lens
serviceCreateRequestNameL :: Lens_' ServiceCreateRequest (Maybe Text)
serviceCreateRequestNameL f ServiceCreateRequest{..} = (\serviceCreateRequestName -> ServiceCreateRequest { serviceCreateRequestName, ..} ) <$> f serviceCreateRequestName
{-# INLINE serviceCreateRequestNameL #-}

-- | 'serviceCreateRequestLabels' Lens
serviceCreateRequestLabelsL :: Lens_' ServiceCreateRequest (Maybe (Map.Map String Text))
serviceCreateRequestLabelsL f ServiceCreateRequest{..} = (\serviceCreateRequestLabels -> ServiceCreateRequest { serviceCreateRequestLabels, ..} ) <$> f serviceCreateRequestLabels
{-# INLINE serviceCreateRequestLabelsL #-}

-- | 'serviceCreateRequestTaskTemplate' Lens
serviceCreateRequestTaskTemplateL :: Lens_' ServiceCreateRequest (Maybe TaskSpec)
serviceCreateRequestTaskTemplateL f ServiceCreateRequest{..} = (\serviceCreateRequestTaskTemplate -> ServiceCreateRequest { serviceCreateRequestTaskTemplate, ..} ) <$> f serviceCreateRequestTaskTemplate
{-# INLINE serviceCreateRequestTaskTemplateL #-}

-- | 'serviceCreateRequestMode' Lens
serviceCreateRequestModeL :: Lens_' ServiceCreateRequest (Maybe ServiceSpecMode)
serviceCreateRequestModeL f ServiceCreateRequest{..} = (\serviceCreateRequestMode -> ServiceCreateRequest { serviceCreateRequestMode, ..} ) <$> f serviceCreateRequestMode
{-# INLINE serviceCreateRequestModeL #-}

-- | 'serviceCreateRequestUpdateConfig' Lens
serviceCreateRequestUpdateConfigL :: Lens_' ServiceCreateRequest (Maybe ServiceSpecUpdateConfig)
serviceCreateRequestUpdateConfigL f ServiceCreateRequest{..} = (\serviceCreateRequestUpdateConfig -> ServiceCreateRequest { serviceCreateRequestUpdateConfig, ..} ) <$> f serviceCreateRequestUpdateConfig
{-# INLINE serviceCreateRequestUpdateConfigL #-}

-- | 'serviceCreateRequestRollbackConfig' Lens
serviceCreateRequestRollbackConfigL :: Lens_' ServiceCreateRequest (Maybe ServiceSpecRollbackConfig)
serviceCreateRequestRollbackConfigL f ServiceCreateRequest{..} = (\serviceCreateRequestRollbackConfig -> ServiceCreateRequest { serviceCreateRequestRollbackConfig, ..} ) <$> f serviceCreateRequestRollbackConfig
{-# INLINE serviceCreateRequestRollbackConfigL #-}

-- | 'serviceCreateRequestNetworks' Lens
serviceCreateRequestNetworksL :: Lens_' ServiceCreateRequest (Maybe [TaskSpecNetworksInner])
serviceCreateRequestNetworksL f ServiceCreateRequest{..} = (\serviceCreateRequestNetworks -> ServiceCreateRequest { serviceCreateRequestNetworks, ..} ) <$> f serviceCreateRequestNetworks
{-# INLINE serviceCreateRequestNetworksL #-}

-- | 'serviceCreateRequestEndpointSpec' Lens
serviceCreateRequestEndpointSpecL :: Lens_' ServiceCreateRequest (Maybe EndpointSpec)
serviceCreateRequestEndpointSpecL f ServiceCreateRequest{..} = (\serviceCreateRequestEndpointSpec -> ServiceCreateRequest { serviceCreateRequestEndpointSpec, ..} ) <$> f serviceCreateRequestEndpointSpec
{-# INLINE serviceCreateRequestEndpointSpecL #-}



-- * ServiceCreateResponse

-- | 'serviceCreateResponseId' Lens
serviceCreateResponseIdL :: Lens_' ServiceCreateResponse (Maybe Text)
serviceCreateResponseIdL f ServiceCreateResponse{..} = (\serviceCreateResponseId -> ServiceCreateResponse { serviceCreateResponseId, ..} ) <$> f serviceCreateResponseId
{-# INLINE serviceCreateResponseIdL #-}

-- | 'serviceCreateResponseWarning' Lens
serviceCreateResponseWarningL :: Lens_' ServiceCreateResponse (Maybe Text)
serviceCreateResponseWarningL f ServiceCreateResponse{..} = (\serviceCreateResponseWarning -> ServiceCreateResponse { serviceCreateResponseWarning, ..} ) <$> f serviceCreateResponseWarning
{-# INLINE serviceCreateResponseWarningL #-}



-- * ServiceEndpoint

-- | 'serviceEndpointSpec' Lens
serviceEndpointSpecL :: Lens_' ServiceEndpoint (Maybe EndpointSpec)
serviceEndpointSpecL f ServiceEndpoint{..} = (\serviceEndpointSpec -> ServiceEndpoint { serviceEndpointSpec, ..} ) <$> f serviceEndpointSpec
{-# INLINE serviceEndpointSpecL #-}

-- | 'serviceEndpointPorts' Lens
serviceEndpointPortsL :: Lens_' ServiceEndpoint (Maybe [EndpointPortConfig])
serviceEndpointPortsL f ServiceEndpoint{..} = (\serviceEndpointPorts -> ServiceEndpoint { serviceEndpointPorts, ..} ) <$> f serviceEndpointPorts
{-# INLINE serviceEndpointPortsL #-}

-- | 'serviceEndpointVirtualIps' Lens
serviceEndpointVirtualIpsL :: Lens_' ServiceEndpoint (Maybe [ServiceEndpointVirtualIPsInner])
serviceEndpointVirtualIpsL f ServiceEndpoint{..} = (\serviceEndpointVirtualIps -> ServiceEndpoint { serviceEndpointVirtualIps, ..} ) <$> f serviceEndpointVirtualIps
{-# INLINE serviceEndpointVirtualIpsL #-}



-- * ServiceEndpointVirtualIPsInner

-- | 'serviceEndpointVirtualIPsInnerNetworkId' Lens
serviceEndpointVirtualIPsInnerNetworkIdL :: Lens_' ServiceEndpointVirtualIPsInner (Maybe Text)
serviceEndpointVirtualIPsInnerNetworkIdL f ServiceEndpointVirtualIPsInner{..} = (\serviceEndpointVirtualIPsInnerNetworkId -> ServiceEndpointVirtualIPsInner { serviceEndpointVirtualIPsInnerNetworkId, ..} ) <$> f serviceEndpointVirtualIPsInnerNetworkId
{-# INLINE serviceEndpointVirtualIPsInnerNetworkIdL #-}

-- | 'serviceEndpointVirtualIPsInnerAddr' Lens
serviceEndpointVirtualIPsInnerAddrL :: Lens_' ServiceEndpointVirtualIPsInner (Maybe Text)
serviceEndpointVirtualIPsInnerAddrL f ServiceEndpointVirtualIPsInner{..} = (\serviceEndpointVirtualIPsInnerAddr -> ServiceEndpointVirtualIPsInner { serviceEndpointVirtualIPsInnerAddr, ..} ) <$> f serviceEndpointVirtualIPsInnerAddr
{-# INLINE serviceEndpointVirtualIPsInnerAddrL #-}



-- * ServiceSpec

-- | 'serviceSpecName' Lens
serviceSpecNameL :: Lens_' ServiceSpec (Maybe Text)
serviceSpecNameL f ServiceSpec{..} = (\serviceSpecName -> ServiceSpec { serviceSpecName, ..} ) <$> f serviceSpecName
{-# INLINE serviceSpecNameL #-}

-- | 'serviceSpecLabels' Lens
serviceSpecLabelsL :: Lens_' ServiceSpec (Maybe (Map.Map String Text))
serviceSpecLabelsL f ServiceSpec{..} = (\serviceSpecLabels -> ServiceSpec { serviceSpecLabels, ..} ) <$> f serviceSpecLabels
{-# INLINE serviceSpecLabelsL #-}

-- | 'serviceSpecTaskTemplate' Lens
serviceSpecTaskTemplateL :: Lens_' ServiceSpec (Maybe TaskSpec)
serviceSpecTaskTemplateL f ServiceSpec{..} = (\serviceSpecTaskTemplate -> ServiceSpec { serviceSpecTaskTemplate, ..} ) <$> f serviceSpecTaskTemplate
{-# INLINE serviceSpecTaskTemplateL #-}

-- | 'serviceSpecMode' Lens
serviceSpecModeL :: Lens_' ServiceSpec (Maybe ServiceSpecMode)
serviceSpecModeL f ServiceSpec{..} = (\serviceSpecMode -> ServiceSpec { serviceSpecMode, ..} ) <$> f serviceSpecMode
{-# INLINE serviceSpecModeL #-}

-- | 'serviceSpecUpdateConfig' Lens
serviceSpecUpdateConfigL :: Lens_' ServiceSpec (Maybe ServiceSpecUpdateConfig)
serviceSpecUpdateConfigL f ServiceSpec{..} = (\serviceSpecUpdateConfig -> ServiceSpec { serviceSpecUpdateConfig, ..} ) <$> f serviceSpecUpdateConfig
{-# INLINE serviceSpecUpdateConfigL #-}

-- | 'serviceSpecRollbackConfig' Lens
serviceSpecRollbackConfigL :: Lens_' ServiceSpec (Maybe ServiceSpecRollbackConfig)
serviceSpecRollbackConfigL f ServiceSpec{..} = (\serviceSpecRollbackConfig -> ServiceSpec { serviceSpecRollbackConfig, ..} ) <$> f serviceSpecRollbackConfig
{-# INLINE serviceSpecRollbackConfigL #-}

-- | 'serviceSpecNetworks' Lens
serviceSpecNetworksL :: Lens_' ServiceSpec (Maybe [TaskSpecNetworksInner])
serviceSpecNetworksL f ServiceSpec{..} = (\serviceSpecNetworks -> ServiceSpec { serviceSpecNetworks, ..} ) <$> f serviceSpecNetworks
{-# INLINE serviceSpecNetworksL #-}

-- | 'serviceSpecEndpointSpec' Lens
serviceSpecEndpointSpecL :: Lens_' ServiceSpec (Maybe EndpointSpec)
serviceSpecEndpointSpecL f ServiceSpec{..} = (\serviceSpecEndpointSpec -> ServiceSpec { serviceSpecEndpointSpec, ..} ) <$> f serviceSpecEndpointSpec
{-# INLINE serviceSpecEndpointSpecL #-}



-- * ServiceSpecMode

-- | 'serviceSpecModeReplicated' Lens
serviceSpecModeReplicatedL :: Lens_' ServiceSpecMode (Maybe ServiceSpecModeReplicated)
serviceSpecModeReplicatedL f ServiceSpecMode{..} = (\serviceSpecModeReplicated -> ServiceSpecMode { serviceSpecModeReplicated, ..} ) <$> f serviceSpecModeReplicated
{-# INLINE serviceSpecModeReplicatedL #-}

-- | 'serviceSpecModeGlobal' Lens
serviceSpecModeGlobalL :: Lens_' ServiceSpecMode (Maybe A.Value)
serviceSpecModeGlobalL f ServiceSpecMode{..} = (\serviceSpecModeGlobal -> ServiceSpecMode { serviceSpecModeGlobal, ..} ) <$> f serviceSpecModeGlobal
{-# INLINE serviceSpecModeGlobalL #-}



-- * ServiceSpecModeReplicated

-- | 'serviceSpecModeReplicatedReplicas' Lens
serviceSpecModeReplicatedReplicasL :: Lens_' ServiceSpecModeReplicated (Maybe Integer)
serviceSpecModeReplicatedReplicasL f ServiceSpecModeReplicated{..} = (\serviceSpecModeReplicatedReplicas -> ServiceSpecModeReplicated { serviceSpecModeReplicatedReplicas, ..} ) <$> f serviceSpecModeReplicatedReplicas
{-# INLINE serviceSpecModeReplicatedReplicasL #-}



-- * ServiceSpecRollbackConfig

-- | 'serviceSpecRollbackConfigParallelism' Lens
serviceSpecRollbackConfigParallelismL :: Lens_' ServiceSpecRollbackConfig (Maybe Integer)
serviceSpecRollbackConfigParallelismL f ServiceSpecRollbackConfig{..} = (\serviceSpecRollbackConfigParallelism -> ServiceSpecRollbackConfig { serviceSpecRollbackConfigParallelism, ..} ) <$> f serviceSpecRollbackConfigParallelism
{-# INLINE serviceSpecRollbackConfigParallelismL #-}

-- | 'serviceSpecRollbackConfigDelay' Lens
serviceSpecRollbackConfigDelayL :: Lens_' ServiceSpecRollbackConfig (Maybe Integer)
serviceSpecRollbackConfigDelayL f ServiceSpecRollbackConfig{..} = (\serviceSpecRollbackConfigDelay -> ServiceSpecRollbackConfig { serviceSpecRollbackConfigDelay, ..} ) <$> f serviceSpecRollbackConfigDelay
{-# INLINE serviceSpecRollbackConfigDelayL #-}

-- | 'serviceSpecRollbackConfigFailureAction' Lens
serviceSpecRollbackConfigFailureActionL :: Lens_' ServiceSpecRollbackConfig (Maybe E'FailureAction2)
serviceSpecRollbackConfigFailureActionL f ServiceSpecRollbackConfig{..} = (\serviceSpecRollbackConfigFailureAction -> ServiceSpecRollbackConfig { serviceSpecRollbackConfigFailureAction, ..} ) <$> f serviceSpecRollbackConfigFailureAction
{-# INLINE serviceSpecRollbackConfigFailureActionL #-}

-- | 'serviceSpecRollbackConfigMonitor' Lens
serviceSpecRollbackConfigMonitorL :: Lens_' ServiceSpecRollbackConfig (Maybe Integer)
serviceSpecRollbackConfigMonitorL f ServiceSpecRollbackConfig{..} = (\serviceSpecRollbackConfigMonitor -> ServiceSpecRollbackConfig { serviceSpecRollbackConfigMonitor, ..} ) <$> f serviceSpecRollbackConfigMonitor
{-# INLINE serviceSpecRollbackConfigMonitorL #-}

-- | 'serviceSpecRollbackConfigMaxFailureRatio' Lens
serviceSpecRollbackConfigMaxFailureRatioL :: Lens_' ServiceSpecRollbackConfig (Maybe Double)
serviceSpecRollbackConfigMaxFailureRatioL f ServiceSpecRollbackConfig{..} = (\serviceSpecRollbackConfigMaxFailureRatio -> ServiceSpecRollbackConfig { serviceSpecRollbackConfigMaxFailureRatio, ..} ) <$> f serviceSpecRollbackConfigMaxFailureRatio
{-# INLINE serviceSpecRollbackConfigMaxFailureRatioL #-}

-- | 'serviceSpecRollbackConfigOrder' Lens
serviceSpecRollbackConfigOrderL :: Lens_' ServiceSpecRollbackConfig (Maybe E'Order)
serviceSpecRollbackConfigOrderL f ServiceSpecRollbackConfig{..} = (\serviceSpecRollbackConfigOrder -> ServiceSpecRollbackConfig { serviceSpecRollbackConfigOrder, ..} ) <$> f serviceSpecRollbackConfigOrder
{-# INLINE serviceSpecRollbackConfigOrderL #-}



-- * ServiceSpecUpdateConfig

-- | 'serviceSpecUpdateConfigParallelism' Lens
serviceSpecUpdateConfigParallelismL :: Lens_' ServiceSpecUpdateConfig (Maybe Integer)
serviceSpecUpdateConfigParallelismL f ServiceSpecUpdateConfig{..} = (\serviceSpecUpdateConfigParallelism -> ServiceSpecUpdateConfig { serviceSpecUpdateConfigParallelism, ..} ) <$> f serviceSpecUpdateConfigParallelism
{-# INLINE serviceSpecUpdateConfigParallelismL #-}

-- | 'serviceSpecUpdateConfigDelay' Lens
serviceSpecUpdateConfigDelayL :: Lens_' ServiceSpecUpdateConfig (Maybe Integer)
serviceSpecUpdateConfigDelayL f ServiceSpecUpdateConfig{..} = (\serviceSpecUpdateConfigDelay -> ServiceSpecUpdateConfig { serviceSpecUpdateConfigDelay, ..} ) <$> f serviceSpecUpdateConfigDelay
{-# INLINE serviceSpecUpdateConfigDelayL #-}

-- | 'serviceSpecUpdateConfigFailureAction' Lens
serviceSpecUpdateConfigFailureActionL :: Lens_' ServiceSpecUpdateConfig (Maybe E'FailureAction)
serviceSpecUpdateConfigFailureActionL f ServiceSpecUpdateConfig{..} = (\serviceSpecUpdateConfigFailureAction -> ServiceSpecUpdateConfig { serviceSpecUpdateConfigFailureAction, ..} ) <$> f serviceSpecUpdateConfigFailureAction
{-# INLINE serviceSpecUpdateConfigFailureActionL #-}

-- | 'serviceSpecUpdateConfigMonitor' Lens
serviceSpecUpdateConfigMonitorL :: Lens_' ServiceSpecUpdateConfig (Maybe Integer)
serviceSpecUpdateConfigMonitorL f ServiceSpecUpdateConfig{..} = (\serviceSpecUpdateConfigMonitor -> ServiceSpecUpdateConfig { serviceSpecUpdateConfigMonitor, ..} ) <$> f serviceSpecUpdateConfigMonitor
{-# INLINE serviceSpecUpdateConfigMonitorL #-}

-- | 'serviceSpecUpdateConfigMaxFailureRatio' Lens
serviceSpecUpdateConfigMaxFailureRatioL :: Lens_' ServiceSpecUpdateConfig (Maybe Double)
serviceSpecUpdateConfigMaxFailureRatioL f ServiceSpecUpdateConfig{..} = (\serviceSpecUpdateConfigMaxFailureRatio -> ServiceSpecUpdateConfig { serviceSpecUpdateConfigMaxFailureRatio, ..} ) <$> f serviceSpecUpdateConfigMaxFailureRatio
{-# INLINE serviceSpecUpdateConfigMaxFailureRatioL #-}

-- | 'serviceSpecUpdateConfigOrder' Lens
serviceSpecUpdateConfigOrderL :: Lens_' ServiceSpecUpdateConfig (Maybe E'Order)
serviceSpecUpdateConfigOrderL f ServiceSpecUpdateConfig{..} = (\serviceSpecUpdateConfigOrder -> ServiceSpecUpdateConfig { serviceSpecUpdateConfigOrder, ..} ) <$> f serviceSpecUpdateConfigOrder
{-# INLINE serviceSpecUpdateConfigOrderL #-}



-- * ServiceUpdateRequest

-- | 'serviceUpdateRequestName' Lens
serviceUpdateRequestNameL :: Lens_' ServiceUpdateRequest (Maybe Text)
serviceUpdateRequestNameL f ServiceUpdateRequest{..} = (\serviceUpdateRequestName -> ServiceUpdateRequest { serviceUpdateRequestName, ..} ) <$> f serviceUpdateRequestName
{-# INLINE serviceUpdateRequestNameL #-}

-- | 'serviceUpdateRequestLabels' Lens
serviceUpdateRequestLabelsL :: Lens_' ServiceUpdateRequest (Maybe (Map.Map String Text))
serviceUpdateRequestLabelsL f ServiceUpdateRequest{..} = (\serviceUpdateRequestLabels -> ServiceUpdateRequest { serviceUpdateRequestLabels, ..} ) <$> f serviceUpdateRequestLabels
{-# INLINE serviceUpdateRequestLabelsL #-}

-- | 'serviceUpdateRequestTaskTemplate' Lens
serviceUpdateRequestTaskTemplateL :: Lens_' ServiceUpdateRequest (Maybe TaskSpec)
serviceUpdateRequestTaskTemplateL f ServiceUpdateRequest{..} = (\serviceUpdateRequestTaskTemplate -> ServiceUpdateRequest { serviceUpdateRequestTaskTemplate, ..} ) <$> f serviceUpdateRequestTaskTemplate
{-# INLINE serviceUpdateRequestTaskTemplateL #-}

-- | 'serviceUpdateRequestMode' Lens
serviceUpdateRequestModeL :: Lens_' ServiceUpdateRequest (Maybe ServiceSpecMode)
serviceUpdateRequestModeL f ServiceUpdateRequest{..} = (\serviceUpdateRequestMode -> ServiceUpdateRequest { serviceUpdateRequestMode, ..} ) <$> f serviceUpdateRequestMode
{-# INLINE serviceUpdateRequestModeL #-}

-- | 'serviceUpdateRequestUpdateConfig' Lens
serviceUpdateRequestUpdateConfigL :: Lens_' ServiceUpdateRequest (Maybe ServiceSpecUpdateConfig)
serviceUpdateRequestUpdateConfigL f ServiceUpdateRequest{..} = (\serviceUpdateRequestUpdateConfig -> ServiceUpdateRequest { serviceUpdateRequestUpdateConfig, ..} ) <$> f serviceUpdateRequestUpdateConfig
{-# INLINE serviceUpdateRequestUpdateConfigL #-}

-- | 'serviceUpdateRequestRollbackConfig' Lens
serviceUpdateRequestRollbackConfigL :: Lens_' ServiceUpdateRequest (Maybe ServiceSpecRollbackConfig)
serviceUpdateRequestRollbackConfigL f ServiceUpdateRequest{..} = (\serviceUpdateRequestRollbackConfig -> ServiceUpdateRequest { serviceUpdateRequestRollbackConfig, ..} ) <$> f serviceUpdateRequestRollbackConfig
{-# INLINE serviceUpdateRequestRollbackConfigL #-}

-- | 'serviceUpdateRequestNetworks' Lens
serviceUpdateRequestNetworksL :: Lens_' ServiceUpdateRequest (Maybe [TaskSpecNetworksInner])
serviceUpdateRequestNetworksL f ServiceUpdateRequest{..} = (\serviceUpdateRequestNetworks -> ServiceUpdateRequest { serviceUpdateRequestNetworks, ..} ) <$> f serviceUpdateRequestNetworks
{-# INLINE serviceUpdateRequestNetworksL #-}

-- | 'serviceUpdateRequestEndpointSpec' Lens
serviceUpdateRequestEndpointSpecL :: Lens_' ServiceUpdateRequest (Maybe EndpointSpec)
serviceUpdateRequestEndpointSpecL f ServiceUpdateRequest{..} = (\serviceUpdateRequestEndpointSpec -> ServiceUpdateRequest { serviceUpdateRequestEndpointSpec, ..} ) <$> f serviceUpdateRequestEndpointSpec
{-# INLINE serviceUpdateRequestEndpointSpecL #-}



-- * ServiceUpdateResponse

-- | 'serviceUpdateResponseWarnings' Lens
serviceUpdateResponseWarningsL :: Lens_' ServiceUpdateResponse (Maybe [Text])
serviceUpdateResponseWarningsL f ServiceUpdateResponse{..} = (\serviceUpdateResponseWarnings -> ServiceUpdateResponse { serviceUpdateResponseWarnings, ..} ) <$> f serviceUpdateResponseWarnings
{-# INLINE serviceUpdateResponseWarningsL #-}



-- * ServiceUpdateStatus

-- | 'serviceUpdateStatusState' Lens
serviceUpdateStatusStateL :: Lens_' ServiceUpdateStatus (Maybe E'State)
serviceUpdateStatusStateL f ServiceUpdateStatus{..} = (\serviceUpdateStatusState -> ServiceUpdateStatus { serviceUpdateStatusState, ..} ) <$> f serviceUpdateStatusState
{-# INLINE serviceUpdateStatusStateL #-}

-- | 'serviceUpdateStatusStartedAt' Lens
serviceUpdateStatusStartedAtL :: Lens_' ServiceUpdateStatus (Maybe Text)
serviceUpdateStatusStartedAtL f ServiceUpdateStatus{..} = (\serviceUpdateStatusStartedAt -> ServiceUpdateStatus { serviceUpdateStatusStartedAt, ..} ) <$> f serviceUpdateStatusStartedAt
{-# INLINE serviceUpdateStatusStartedAtL #-}

-- | 'serviceUpdateStatusCompletedAt' Lens
serviceUpdateStatusCompletedAtL :: Lens_' ServiceUpdateStatus (Maybe Text)
serviceUpdateStatusCompletedAtL f ServiceUpdateStatus{..} = (\serviceUpdateStatusCompletedAt -> ServiceUpdateStatus { serviceUpdateStatusCompletedAt, ..} ) <$> f serviceUpdateStatusCompletedAt
{-# INLINE serviceUpdateStatusCompletedAtL #-}

-- | 'serviceUpdateStatusMessage' Lens
serviceUpdateStatusMessageL :: Lens_' ServiceUpdateStatus (Maybe Text)
serviceUpdateStatusMessageL f ServiceUpdateStatus{..} = (\serviceUpdateStatusMessage -> ServiceUpdateStatus { serviceUpdateStatusMessage, ..} ) <$> f serviceUpdateStatusMessage
{-# INLINE serviceUpdateStatusMessageL #-}



-- * Swarm

-- | 'swarmId' Lens
swarmIdL :: Lens_' Swarm (Maybe Text)
swarmIdL f Swarm{..} = (\swarmId -> Swarm { swarmId, ..} ) <$> f swarmId
{-# INLINE swarmIdL #-}

-- | 'swarmVersion' Lens
swarmVersionL :: Lens_' Swarm (Maybe ObjectVersion)
swarmVersionL f Swarm{..} = (\swarmVersion -> Swarm { swarmVersion, ..} ) <$> f swarmVersion
{-# INLINE swarmVersionL #-}

-- | 'swarmCreatedAt' Lens
swarmCreatedAtL :: Lens_' Swarm (Maybe Text)
swarmCreatedAtL f Swarm{..} = (\swarmCreatedAt -> Swarm { swarmCreatedAt, ..} ) <$> f swarmCreatedAt
{-# INLINE swarmCreatedAtL #-}

-- | 'swarmUpdatedAt' Lens
swarmUpdatedAtL :: Lens_' Swarm (Maybe Text)
swarmUpdatedAtL f Swarm{..} = (\swarmUpdatedAt -> Swarm { swarmUpdatedAt, ..} ) <$> f swarmUpdatedAt
{-# INLINE swarmUpdatedAtL #-}

-- | 'swarmSpec' Lens
swarmSpecL :: Lens_' Swarm (Maybe SwarmSpec)
swarmSpecL f Swarm{..} = (\swarmSpec -> Swarm { swarmSpec, ..} ) <$> f swarmSpec
{-# INLINE swarmSpecL #-}

-- | 'swarmTlsInfo' Lens
swarmTlsInfoL :: Lens_' Swarm (Maybe TLSInfo)
swarmTlsInfoL f Swarm{..} = (\swarmTlsInfo -> Swarm { swarmTlsInfo, ..} ) <$> f swarmTlsInfo
{-# INLINE swarmTlsInfoL #-}

-- | 'swarmRootRotationInProgress' Lens
swarmRootRotationInProgressL :: Lens_' Swarm (Maybe Bool)
swarmRootRotationInProgressL f Swarm{..} = (\swarmRootRotationInProgress -> Swarm { swarmRootRotationInProgress, ..} ) <$> f swarmRootRotationInProgress
{-# INLINE swarmRootRotationInProgressL #-}

-- | 'swarmJoinTokens' Lens
swarmJoinTokensL :: Lens_' Swarm (Maybe JoinTokens)
swarmJoinTokensL f Swarm{..} = (\swarmJoinTokens -> Swarm { swarmJoinTokens, ..} ) <$> f swarmJoinTokens
{-# INLINE swarmJoinTokensL #-}



-- * SwarmInfo

-- | 'swarmInfoNodeId' Lens
swarmInfoNodeIdL :: Lens_' SwarmInfo (Maybe Text)
swarmInfoNodeIdL f SwarmInfo{..} = (\swarmInfoNodeId -> SwarmInfo { swarmInfoNodeId, ..} ) <$> f swarmInfoNodeId
{-# INLINE swarmInfoNodeIdL #-}

-- | 'swarmInfoNodeAddr' Lens
swarmInfoNodeAddrL :: Lens_' SwarmInfo (Maybe Text)
swarmInfoNodeAddrL f SwarmInfo{..} = (\swarmInfoNodeAddr -> SwarmInfo { swarmInfoNodeAddr, ..} ) <$> f swarmInfoNodeAddr
{-# INLINE swarmInfoNodeAddrL #-}

-- | 'swarmInfoLocalNodeState' Lens
swarmInfoLocalNodeStateL :: Lens_' SwarmInfo (Maybe LocalNodeState)
swarmInfoLocalNodeStateL f SwarmInfo{..} = (\swarmInfoLocalNodeState -> SwarmInfo { swarmInfoLocalNodeState, ..} ) <$> f swarmInfoLocalNodeState
{-# INLINE swarmInfoLocalNodeStateL #-}

-- | 'swarmInfoControlAvailable' Lens
swarmInfoControlAvailableL :: Lens_' SwarmInfo (Maybe Bool)
swarmInfoControlAvailableL f SwarmInfo{..} = (\swarmInfoControlAvailable -> SwarmInfo { swarmInfoControlAvailable, ..} ) <$> f swarmInfoControlAvailable
{-# INLINE swarmInfoControlAvailableL #-}

-- | 'swarmInfoError' Lens
swarmInfoErrorL :: Lens_' SwarmInfo (Maybe Text)
swarmInfoErrorL f SwarmInfo{..} = (\swarmInfoError -> SwarmInfo { swarmInfoError, ..} ) <$> f swarmInfoError
{-# INLINE swarmInfoErrorL #-}

-- | 'swarmInfoRemoteManagers' Lens
swarmInfoRemoteManagersL :: Lens_' SwarmInfo (Maybe [PeerNode])
swarmInfoRemoteManagersL f SwarmInfo{..} = (\swarmInfoRemoteManagers -> SwarmInfo { swarmInfoRemoteManagers, ..} ) <$> f swarmInfoRemoteManagers
{-# INLINE swarmInfoRemoteManagersL #-}

-- | 'swarmInfoNodes' Lens
swarmInfoNodesL :: Lens_' SwarmInfo (Maybe Int)
swarmInfoNodesL f SwarmInfo{..} = (\swarmInfoNodes -> SwarmInfo { swarmInfoNodes, ..} ) <$> f swarmInfoNodes
{-# INLINE swarmInfoNodesL #-}

-- | 'swarmInfoManagers' Lens
swarmInfoManagersL :: Lens_' SwarmInfo (Maybe Int)
swarmInfoManagersL f SwarmInfo{..} = (\swarmInfoManagers -> SwarmInfo { swarmInfoManagers, ..} ) <$> f swarmInfoManagers
{-# INLINE swarmInfoManagersL #-}

-- | 'swarmInfoCluster' Lens
swarmInfoClusterL :: Lens_' SwarmInfo (Maybe ClusterInfo)
swarmInfoClusterL f SwarmInfo{..} = (\swarmInfoCluster -> SwarmInfo { swarmInfoCluster, ..} ) <$> f swarmInfoCluster
{-# INLINE swarmInfoClusterL #-}



-- * SwarmInitRequest

-- | 'swarmInitRequestListenAddr' Lens
swarmInitRequestListenAddrL :: Lens_' SwarmInitRequest (Maybe Text)
swarmInitRequestListenAddrL f SwarmInitRequest{..} = (\swarmInitRequestListenAddr -> SwarmInitRequest { swarmInitRequestListenAddr, ..} ) <$> f swarmInitRequestListenAddr
{-# INLINE swarmInitRequestListenAddrL #-}

-- | 'swarmInitRequestAdvertiseAddr' Lens
swarmInitRequestAdvertiseAddrL :: Lens_' SwarmInitRequest (Maybe Text)
swarmInitRequestAdvertiseAddrL f SwarmInitRequest{..} = (\swarmInitRequestAdvertiseAddr -> SwarmInitRequest { swarmInitRequestAdvertiseAddr, ..} ) <$> f swarmInitRequestAdvertiseAddr
{-# INLINE swarmInitRequestAdvertiseAddrL #-}

-- | 'swarmInitRequestDataPathAddr' Lens
swarmInitRequestDataPathAddrL :: Lens_' SwarmInitRequest (Maybe Text)
swarmInitRequestDataPathAddrL f SwarmInitRequest{..} = (\swarmInitRequestDataPathAddr -> SwarmInitRequest { swarmInitRequestDataPathAddr, ..} ) <$> f swarmInitRequestDataPathAddr
{-# INLINE swarmInitRequestDataPathAddrL #-}

-- | 'swarmInitRequestForceNewCluster' Lens
swarmInitRequestForceNewClusterL :: Lens_' SwarmInitRequest (Maybe Bool)
swarmInitRequestForceNewClusterL f SwarmInitRequest{..} = (\swarmInitRequestForceNewCluster -> SwarmInitRequest { swarmInitRequestForceNewCluster, ..} ) <$> f swarmInitRequestForceNewCluster
{-# INLINE swarmInitRequestForceNewClusterL #-}

-- | 'swarmInitRequestSpec' Lens
swarmInitRequestSpecL :: Lens_' SwarmInitRequest (Maybe SwarmSpec)
swarmInitRequestSpecL f SwarmInitRequest{..} = (\swarmInitRequestSpec -> SwarmInitRequest { swarmInitRequestSpec, ..} ) <$> f swarmInitRequestSpec
{-# INLINE swarmInitRequestSpecL #-}



-- * SwarmJoinRequest

-- | 'swarmJoinRequestListenAddr' Lens
swarmJoinRequestListenAddrL :: Lens_' SwarmJoinRequest (Maybe Text)
swarmJoinRequestListenAddrL f SwarmJoinRequest{..} = (\swarmJoinRequestListenAddr -> SwarmJoinRequest { swarmJoinRequestListenAddr, ..} ) <$> f swarmJoinRequestListenAddr
{-# INLINE swarmJoinRequestListenAddrL #-}

-- | 'swarmJoinRequestAdvertiseAddr' Lens
swarmJoinRequestAdvertiseAddrL :: Lens_' SwarmJoinRequest (Maybe Text)
swarmJoinRequestAdvertiseAddrL f SwarmJoinRequest{..} = (\swarmJoinRequestAdvertiseAddr -> SwarmJoinRequest { swarmJoinRequestAdvertiseAddr, ..} ) <$> f swarmJoinRequestAdvertiseAddr
{-# INLINE swarmJoinRequestAdvertiseAddrL #-}

-- | 'swarmJoinRequestDataPathAddr' Lens
swarmJoinRequestDataPathAddrL :: Lens_' SwarmJoinRequest (Maybe Text)
swarmJoinRequestDataPathAddrL f SwarmJoinRequest{..} = (\swarmJoinRequestDataPathAddr -> SwarmJoinRequest { swarmJoinRequestDataPathAddr, ..} ) <$> f swarmJoinRequestDataPathAddr
{-# INLINE swarmJoinRequestDataPathAddrL #-}

-- | 'swarmJoinRequestRemoteAddrs' Lens
swarmJoinRequestRemoteAddrsL :: Lens_' SwarmJoinRequest (Maybe Text)
swarmJoinRequestRemoteAddrsL f SwarmJoinRequest{..} = (\swarmJoinRequestRemoteAddrs -> SwarmJoinRequest { swarmJoinRequestRemoteAddrs, ..} ) <$> f swarmJoinRequestRemoteAddrs
{-# INLINE swarmJoinRequestRemoteAddrsL #-}

-- | 'swarmJoinRequestJoinToken' Lens
swarmJoinRequestJoinTokenL :: Lens_' SwarmJoinRequest (Maybe Text)
swarmJoinRequestJoinTokenL f SwarmJoinRequest{..} = (\swarmJoinRequestJoinToken -> SwarmJoinRequest { swarmJoinRequestJoinToken, ..} ) <$> f swarmJoinRequestJoinToken
{-# INLINE swarmJoinRequestJoinTokenL #-}



-- * SwarmSpec

-- | 'swarmSpecName' Lens
swarmSpecNameL :: Lens_' SwarmSpec (Maybe Text)
swarmSpecNameL f SwarmSpec{..} = (\swarmSpecName -> SwarmSpec { swarmSpecName, ..} ) <$> f swarmSpecName
{-# INLINE swarmSpecNameL #-}

-- | 'swarmSpecLabels' Lens
swarmSpecLabelsL :: Lens_' SwarmSpec (Maybe (Map.Map String Text))
swarmSpecLabelsL f SwarmSpec{..} = (\swarmSpecLabels -> SwarmSpec { swarmSpecLabels, ..} ) <$> f swarmSpecLabels
{-# INLINE swarmSpecLabelsL #-}

-- | 'swarmSpecOrchestration' Lens
swarmSpecOrchestrationL :: Lens_' SwarmSpec (Maybe SwarmSpecOrchestration)
swarmSpecOrchestrationL f SwarmSpec{..} = (\swarmSpecOrchestration -> SwarmSpec { swarmSpecOrchestration, ..} ) <$> f swarmSpecOrchestration
{-# INLINE swarmSpecOrchestrationL #-}

-- | 'swarmSpecRaft' Lens
swarmSpecRaftL :: Lens_' SwarmSpec (Maybe SwarmSpecRaft)
swarmSpecRaftL f SwarmSpec{..} = (\swarmSpecRaft -> SwarmSpec { swarmSpecRaft, ..} ) <$> f swarmSpecRaft
{-# INLINE swarmSpecRaftL #-}

-- | 'swarmSpecDispatcher' Lens
swarmSpecDispatcherL :: Lens_' SwarmSpec (Maybe SwarmSpecDispatcher)
swarmSpecDispatcherL f SwarmSpec{..} = (\swarmSpecDispatcher -> SwarmSpec { swarmSpecDispatcher, ..} ) <$> f swarmSpecDispatcher
{-# INLINE swarmSpecDispatcherL #-}

-- | 'swarmSpecCaConfig' Lens
swarmSpecCaConfigL :: Lens_' SwarmSpec (Maybe SwarmSpecCAConfig)
swarmSpecCaConfigL f SwarmSpec{..} = (\swarmSpecCaConfig -> SwarmSpec { swarmSpecCaConfig, ..} ) <$> f swarmSpecCaConfig
{-# INLINE swarmSpecCaConfigL #-}

-- | 'swarmSpecEncryptionConfig' Lens
swarmSpecEncryptionConfigL :: Lens_' SwarmSpec (Maybe SwarmSpecEncryptionConfig)
swarmSpecEncryptionConfigL f SwarmSpec{..} = (\swarmSpecEncryptionConfig -> SwarmSpec { swarmSpecEncryptionConfig, ..} ) <$> f swarmSpecEncryptionConfig
{-# INLINE swarmSpecEncryptionConfigL #-}

-- | 'swarmSpecTaskDefaults' Lens
swarmSpecTaskDefaultsL :: Lens_' SwarmSpec (Maybe SwarmSpecTaskDefaults)
swarmSpecTaskDefaultsL f SwarmSpec{..} = (\swarmSpecTaskDefaults -> SwarmSpec { swarmSpecTaskDefaults, ..} ) <$> f swarmSpecTaskDefaults
{-# INLINE swarmSpecTaskDefaultsL #-}



-- * SwarmSpecCAConfig

-- | 'swarmSpecCAConfigNodeCertExpiry' Lens
swarmSpecCAConfigNodeCertExpiryL :: Lens_' SwarmSpecCAConfig (Maybe Integer)
swarmSpecCAConfigNodeCertExpiryL f SwarmSpecCAConfig{..} = (\swarmSpecCAConfigNodeCertExpiry -> SwarmSpecCAConfig { swarmSpecCAConfigNodeCertExpiry, ..} ) <$> f swarmSpecCAConfigNodeCertExpiry
{-# INLINE swarmSpecCAConfigNodeCertExpiryL #-}

-- | 'swarmSpecCAConfigExternalCas' Lens
swarmSpecCAConfigExternalCasL :: Lens_' SwarmSpecCAConfig (Maybe [SwarmSpecCAConfigExternalCAsInner])
swarmSpecCAConfigExternalCasL f SwarmSpecCAConfig{..} = (\swarmSpecCAConfigExternalCas -> SwarmSpecCAConfig { swarmSpecCAConfigExternalCas, ..} ) <$> f swarmSpecCAConfigExternalCas
{-# INLINE swarmSpecCAConfigExternalCasL #-}

-- | 'swarmSpecCAConfigSigningCaCert' Lens
swarmSpecCAConfigSigningCaCertL :: Lens_' SwarmSpecCAConfig (Maybe Text)
swarmSpecCAConfigSigningCaCertL f SwarmSpecCAConfig{..} = (\swarmSpecCAConfigSigningCaCert -> SwarmSpecCAConfig { swarmSpecCAConfigSigningCaCert, ..} ) <$> f swarmSpecCAConfigSigningCaCert
{-# INLINE swarmSpecCAConfigSigningCaCertL #-}

-- | 'swarmSpecCAConfigSigningCaKey' Lens
swarmSpecCAConfigSigningCaKeyL :: Lens_' SwarmSpecCAConfig (Maybe Text)
swarmSpecCAConfigSigningCaKeyL f SwarmSpecCAConfig{..} = (\swarmSpecCAConfigSigningCaKey -> SwarmSpecCAConfig { swarmSpecCAConfigSigningCaKey, ..} ) <$> f swarmSpecCAConfigSigningCaKey
{-# INLINE swarmSpecCAConfigSigningCaKeyL #-}

-- | 'swarmSpecCAConfigForceRotate' Lens
swarmSpecCAConfigForceRotateL :: Lens_' SwarmSpecCAConfig (Maybe Int)
swarmSpecCAConfigForceRotateL f SwarmSpecCAConfig{..} = (\swarmSpecCAConfigForceRotate -> SwarmSpecCAConfig { swarmSpecCAConfigForceRotate, ..} ) <$> f swarmSpecCAConfigForceRotate
{-# INLINE swarmSpecCAConfigForceRotateL #-}



-- * SwarmSpecCAConfigExternalCAsInner

-- | 'swarmSpecCAConfigExternalCAsInnerProtocol' Lens
swarmSpecCAConfigExternalCAsInnerProtocolL :: Lens_' SwarmSpecCAConfigExternalCAsInner (Maybe E'Protocol)
swarmSpecCAConfigExternalCAsInnerProtocolL f SwarmSpecCAConfigExternalCAsInner{..} = (\swarmSpecCAConfigExternalCAsInnerProtocol -> SwarmSpecCAConfigExternalCAsInner { swarmSpecCAConfigExternalCAsInnerProtocol, ..} ) <$> f swarmSpecCAConfigExternalCAsInnerProtocol
{-# INLINE swarmSpecCAConfigExternalCAsInnerProtocolL #-}

-- | 'swarmSpecCAConfigExternalCAsInnerUrl' Lens
swarmSpecCAConfigExternalCAsInnerUrlL :: Lens_' SwarmSpecCAConfigExternalCAsInner (Maybe Text)
swarmSpecCAConfigExternalCAsInnerUrlL f SwarmSpecCAConfigExternalCAsInner{..} = (\swarmSpecCAConfigExternalCAsInnerUrl -> SwarmSpecCAConfigExternalCAsInner { swarmSpecCAConfigExternalCAsInnerUrl, ..} ) <$> f swarmSpecCAConfigExternalCAsInnerUrl
{-# INLINE swarmSpecCAConfigExternalCAsInnerUrlL #-}

-- | 'swarmSpecCAConfigExternalCAsInnerOptions' Lens
swarmSpecCAConfigExternalCAsInnerOptionsL :: Lens_' SwarmSpecCAConfigExternalCAsInner (Maybe (Map.Map String Text))
swarmSpecCAConfigExternalCAsInnerOptionsL f SwarmSpecCAConfigExternalCAsInner{..} = (\swarmSpecCAConfigExternalCAsInnerOptions -> SwarmSpecCAConfigExternalCAsInner { swarmSpecCAConfigExternalCAsInnerOptions, ..} ) <$> f swarmSpecCAConfigExternalCAsInnerOptions
{-# INLINE swarmSpecCAConfigExternalCAsInnerOptionsL #-}

-- | 'swarmSpecCAConfigExternalCAsInnerCaCert' Lens
swarmSpecCAConfigExternalCAsInnerCaCertL :: Lens_' SwarmSpecCAConfigExternalCAsInner (Maybe Text)
swarmSpecCAConfigExternalCAsInnerCaCertL f SwarmSpecCAConfigExternalCAsInner{..} = (\swarmSpecCAConfigExternalCAsInnerCaCert -> SwarmSpecCAConfigExternalCAsInner { swarmSpecCAConfigExternalCAsInnerCaCert, ..} ) <$> f swarmSpecCAConfigExternalCAsInnerCaCert
{-# INLINE swarmSpecCAConfigExternalCAsInnerCaCertL #-}



-- * SwarmSpecDispatcher

-- | 'swarmSpecDispatcherHeartbeatPeriod' Lens
swarmSpecDispatcherHeartbeatPeriodL :: Lens_' SwarmSpecDispatcher (Maybe Integer)
swarmSpecDispatcherHeartbeatPeriodL f SwarmSpecDispatcher{..} = (\swarmSpecDispatcherHeartbeatPeriod -> SwarmSpecDispatcher { swarmSpecDispatcherHeartbeatPeriod, ..} ) <$> f swarmSpecDispatcherHeartbeatPeriod
{-# INLINE swarmSpecDispatcherHeartbeatPeriodL #-}



-- * SwarmSpecEncryptionConfig

-- | 'swarmSpecEncryptionConfigAutoLockManagers' Lens
swarmSpecEncryptionConfigAutoLockManagersL :: Lens_' SwarmSpecEncryptionConfig (Maybe Bool)
swarmSpecEncryptionConfigAutoLockManagersL f SwarmSpecEncryptionConfig{..} = (\swarmSpecEncryptionConfigAutoLockManagers -> SwarmSpecEncryptionConfig { swarmSpecEncryptionConfigAutoLockManagers, ..} ) <$> f swarmSpecEncryptionConfigAutoLockManagers
{-# INLINE swarmSpecEncryptionConfigAutoLockManagersL #-}



-- * SwarmSpecOrchestration

-- | 'swarmSpecOrchestrationTaskHistoryRetentionLimit' Lens
swarmSpecOrchestrationTaskHistoryRetentionLimitL :: Lens_' SwarmSpecOrchestration (Maybe Integer)
swarmSpecOrchestrationTaskHistoryRetentionLimitL f SwarmSpecOrchestration{..} = (\swarmSpecOrchestrationTaskHistoryRetentionLimit -> SwarmSpecOrchestration { swarmSpecOrchestrationTaskHistoryRetentionLimit, ..} ) <$> f swarmSpecOrchestrationTaskHistoryRetentionLimit
{-# INLINE swarmSpecOrchestrationTaskHistoryRetentionLimitL #-}



-- * SwarmSpecRaft

-- | 'swarmSpecRaftSnapshotInterval' Lens
swarmSpecRaftSnapshotIntervalL :: Lens_' SwarmSpecRaft (Maybe Int)
swarmSpecRaftSnapshotIntervalL f SwarmSpecRaft{..} = (\swarmSpecRaftSnapshotInterval -> SwarmSpecRaft { swarmSpecRaftSnapshotInterval, ..} ) <$> f swarmSpecRaftSnapshotInterval
{-# INLINE swarmSpecRaftSnapshotIntervalL #-}

-- | 'swarmSpecRaftKeepOldSnapshots' Lens
swarmSpecRaftKeepOldSnapshotsL :: Lens_' SwarmSpecRaft (Maybe Int)
swarmSpecRaftKeepOldSnapshotsL f SwarmSpecRaft{..} = (\swarmSpecRaftKeepOldSnapshots -> SwarmSpecRaft { swarmSpecRaftKeepOldSnapshots, ..} ) <$> f swarmSpecRaftKeepOldSnapshots
{-# INLINE swarmSpecRaftKeepOldSnapshotsL #-}

-- | 'swarmSpecRaftLogEntriesForSlowFollowers' Lens
swarmSpecRaftLogEntriesForSlowFollowersL :: Lens_' SwarmSpecRaft (Maybe Int)
swarmSpecRaftLogEntriesForSlowFollowersL f SwarmSpecRaft{..} = (\swarmSpecRaftLogEntriesForSlowFollowers -> SwarmSpecRaft { swarmSpecRaftLogEntriesForSlowFollowers, ..} ) <$> f swarmSpecRaftLogEntriesForSlowFollowers
{-# INLINE swarmSpecRaftLogEntriesForSlowFollowersL #-}

-- | 'swarmSpecRaftElectionTick' Lens
swarmSpecRaftElectionTickL :: Lens_' SwarmSpecRaft (Maybe Int)
swarmSpecRaftElectionTickL f SwarmSpecRaft{..} = (\swarmSpecRaftElectionTick -> SwarmSpecRaft { swarmSpecRaftElectionTick, ..} ) <$> f swarmSpecRaftElectionTick
{-# INLINE swarmSpecRaftElectionTickL #-}

-- | 'swarmSpecRaftHeartbeatTick' Lens
swarmSpecRaftHeartbeatTickL :: Lens_' SwarmSpecRaft (Maybe Int)
swarmSpecRaftHeartbeatTickL f SwarmSpecRaft{..} = (\swarmSpecRaftHeartbeatTick -> SwarmSpecRaft { swarmSpecRaftHeartbeatTick, ..} ) <$> f swarmSpecRaftHeartbeatTick
{-# INLINE swarmSpecRaftHeartbeatTickL #-}



-- * SwarmSpecTaskDefaults

-- | 'swarmSpecTaskDefaultsLogDriver' Lens
swarmSpecTaskDefaultsLogDriverL :: Lens_' SwarmSpecTaskDefaults (Maybe SwarmSpecTaskDefaultsLogDriver)
swarmSpecTaskDefaultsLogDriverL f SwarmSpecTaskDefaults{..} = (\swarmSpecTaskDefaultsLogDriver -> SwarmSpecTaskDefaults { swarmSpecTaskDefaultsLogDriver, ..} ) <$> f swarmSpecTaskDefaultsLogDriver
{-# INLINE swarmSpecTaskDefaultsLogDriverL #-}



-- * SwarmSpecTaskDefaultsLogDriver

-- | 'swarmSpecTaskDefaultsLogDriverName' Lens
swarmSpecTaskDefaultsLogDriverNameL :: Lens_' SwarmSpecTaskDefaultsLogDriver (Maybe Text)
swarmSpecTaskDefaultsLogDriverNameL f SwarmSpecTaskDefaultsLogDriver{..} = (\swarmSpecTaskDefaultsLogDriverName -> SwarmSpecTaskDefaultsLogDriver { swarmSpecTaskDefaultsLogDriverName, ..} ) <$> f swarmSpecTaskDefaultsLogDriverName
{-# INLINE swarmSpecTaskDefaultsLogDriverNameL #-}

-- | 'swarmSpecTaskDefaultsLogDriverOptions' Lens
swarmSpecTaskDefaultsLogDriverOptionsL :: Lens_' SwarmSpecTaskDefaultsLogDriver (Maybe (Map.Map String Text))
swarmSpecTaskDefaultsLogDriverOptionsL f SwarmSpecTaskDefaultsLogDriver{..} = (\swarmSpecTaskDefaultsLogDriverOptions -> SwarmSpecTaskDefaultsLogDriver { swarmSpecTaskDefaultsLogDriverOptions, ..} ) <$> f swarmSpecTaskDefaultsLogDriverOptions
{-# INLINE swarmSpecTaskDefaultsLogDriverOptionsL #-}



-- * SwarmUnlockRequest

-- | 'swarmUnlockRequestUnlockKey' Lens
swarmUnlockRequestUnlockKeyL :: Lens_' SwarmUnlockRequest (Maybe Text)
swarmUnlockRequestUnlockKeyL f SwarmUnlockRequest{..} = (\swarmUnlockRequestUnlockKey -> SwarmUnlockRequest { swarmUnlockRequestUnlockKey, ..} ) <$> f swarmUnlockRequestUnlockKey
{-# INLINE swarmUnlockRequestUnlockKeyL #-}



-- * SystemAuthResponse

-- | 'systemAuthResponseStatus' Lens
systemAuthResponseStatusL :: Lens_' SystemAuthResponse (Text)
systemAuthResponseStatusL f SystemAuthResponse{..} = (\systemAuthResponseStatus -> SystemAuthResponse { systemAuthResponseStatus, ..} ) <$> f systemAuthResponseStatus
{-# INLINE systemAuthResponseStatusL #-}

-- | 'systemAuthResponseIdentityToken' Lens
systemAuthResponseIdentityTokenL :: Lens_' SystemAuthResponse (Maybe Text)
systemAuthResponseIdentityTokenL f SystemAuthResponse{..} = (\systemAuthResponseIdentityToken -> SystemAuthResponse { systemAuthResponseIdentityToken, ..} ) <$> f systemAuthResponseIdentityToken
{-# INLINE systemAuthResponseIdentityTokenL #-}



-- * SystemDataUsageResponse

-- | 'systemDataUsageResponseLayersSize' Lens
systemDataUsageResponseLayersSizeL :: Lens_' SystemDataUsageResponse (Maybe Integer)
systemDataUsageResponseLayersSizeL f SystemDataUsageResponse{..} = (\systemDataUsageResponseLayersSize -> SystemDataUsageResponse { systemDataUsageResponseLayersSize, ..} ) <$> f systemDataUsageResponseLayersSize
{-# INLINE systemDataUsageResponseLayersSizeL #-}

-- | 'systemDataUsageResponseImages' Lens
systemDataUsageResponseImagesL :: Lens_' SystemDataUsageResponse (Maybe [ImageSummary])
systemDataUsageResponseImagesL f SystemDataUsageResponse{..} = (\systemDataUsageResponseImages -> SystemDataUsageResponse { systemDataUsageResponseImages, ..} ) <$> f systemDataUsageResponseImages
{-# INLINE systemDataUsageResponseImagesL #-}

-- | 'systemDataUsageResponseContainers' Lens
systemDataUsageResponseContainersL :: Lens_' SystemDataUsageResponse (Maybe [Array])
systemDataUsageResponseContainersL f SystemDataUsageResponse{..} = (\systemDataUsageResponseContainers -> SystemDataUsageResponse { systemDataUsageResponseContainers, ..} ) <$> f systemDataUsageResponseContainers
{-# INLINE systemDataUsageResponseContainersL #-}

-- | 'systemDataUsageResponseVolumes' Lens
systemDataUsageResponseVolumesL :: Lens_' SystemDataUsageResponse (Maybe [Volume])
systemDataUsageResponseVolumesL f SystemDataUsageResponse{..} = (\systemDataUsageResponseVolumes -> SystemDataUsageResponse { systemDataUsageResponseVolumes, ..} ) <$> f systemDataUsageResponseVolumes
{-# INLINE systemDataUsageResponseVolumesL #-}



-- * SystemEventsResponse

-- | 'systemEventsResponseType' Lens
systemEventsResponseTypeL :: Lens_' SystemEventsResponse (Maybe Text)
systemEventsResponseTypeL f SystemEventsResponse{..} = (\systemEventsResponseType -> SystemEventsResponse { systemEventsResponseType, ..} ) <$> f systemEventsResponseType
{-# INLINE systemEventsResponseTypeL #-}

-- | 'systemEventsResponseAction' Lens
systemEventsResponseActionL :: Lens_' SystemEventsResponse (Maybe Text)
systemEventsResponseActionL f SystemEventsResponse{..} = (\systemEventsResponseAction -> SystemEventsResponse { systemEventsResponseAction, ..} ) <$> f systemEventsResponseAction
{-# INLINE systemEventsResponseActionL #-}

-- | 'systemEventsResponseActor' Lens
systemEventsResponseActorL :: Lens_' SystemEventsResponse (Maybe SystemEventsResponseActor)
systemEventsResponseActorL f SystemEventsResponse{..} = (\systemEventsResponseActor -> SystemEventsResponse { systemEventsResponseActor, ..} ) <$> f systemEventsResponseActor
{-# INLINE systemEventsResponseActorL #-}

-- | 'systemEventsResponseTime' Lens
systemEventsResponseTimeL :: Lens_' SystemEventsResponse (Maybe Int)
systemEventsResponseTimeL f SystemEventsResponse{..} = (\systemEventsResponseTime -> SystemEventsResponse { systemEventsResponseTime, ..} ) <$> f systemEventsResponseTime
{-# INLINE systemEventsResponseTimeL #-}

-- | 'systemEventsResponseTimeNano' Lens
systemEventsResponseTimeNanoL :: Lens_' SystemEventsResponse (Maybe Integer)
systemEventsResponseTimeNanoL f SystemEventsResponse{..} = (\systemEventsResponseTimeNano -> SystemEventsResponse { systemEventsResponseTimeNano, ..} ) <$> f systemEventsResponseTimeNano
{-# INLINE systemEventsResponseTimeNanoL #-}



-- * SystemEventsResponseActor

-- | 'systemEventsResponseActorId' Lens
systemEventsResponseActorIdL :: Lens_' SystemEventsResponseActor (Maybe Text)
systemEventsResponseActorIdL f SystemEventsResponseActor{..} = (\systemEventsResponseActorId -> SystemEventsResponseActor { systemEventsResponseActorId, ..} ) <$> f systemEventsResponseActorId
{-# INLINE systemEventsResponseActorIdL #-}

-- | 'systemEventsResponseActorAttributes' Lens
systemEventsResponseActorAttributesL :: Lens_' SystemEventsResponseActor (Maybe (Map.Map String Text))
systemEventsResponseActorAttributesL f SystemEventsResponseActor{..} = (\systemEventsResponseActorAttributes -> SystemEventsResponseActor { systemEventsResponseActorAttributes, ..} ) <$> f systemEventsResponseActorAttributes
{-# INLINE systemEventsResponseActorAttributesL #-}



-- * SystemInfo

-- | 'systemInfoId' Lens
systemInfoIdL :: Lens_' SystemInfo (Maybe Text)
systemInfoIdL f SystemInfo{..} = (\systemInfoId -> SystemInfo { systemInfoId, ..} ) <$> f systemInfoId
{-# INLINE systemInfoIdL #-}

-- | 'systemInfoContainers' Lens
systemInfoContainersL :: Lens_' SystemInfo (Maybe Int)
systemInfoContainersL f SystemInfo{..} = (\systemInfoContainers -> SystemInfo { systemInfoContainers, ..} ) <$> f systemInfoContainers
{-# INLINE systemInfoContainersL #-}

-- | 'systemInfoContainersRunning' Lens
systemInfoContainersRunningL :: Lens_' SystemInfo (Maybe Int)
systemInfoContainersRunningL f SystemInfo{..} = (\systemInfoContainersRunning -> SystemInfo { systemInfoContainersRunning, ..} ) <$> f systemInfoContainersRunning
{-# INLINE systemInfoContainersRunningL #-}

-- | 'systemInfoContainersPaused' Lens
systemInfoContainersPausedL :: Lens_' SystemInfo (Maybe Int)
systemInfoContainersPausedL f SystemInfo{..} = (\systemInfoContainersPaused -> SystemInfo { systemInfoContainersPaused, ..} ) <$> f systemInfoContainersPaused
{-# INLINE systemInfoContainersPausedL #-}

-- | 'systemInfoContainersStopped' Lens
systemInfoContainersStoppedL :: Lens_' SystemInfo (Maybe Int)
systemInfoContainersStoppedL f SystemInfo{..} = (\systemInfoContainersStopped -> SystemInfo { systemInfoContainersStopped, ..} ) <$> f systemInfoContainersStopped
{-# INLINE systemInfoContainersStoppedL #-}

-- | 'systemInfoImages' Lens
systemInfoImagesL :: Lens_' SystemInfo (Maybe Int)
systemInfoImagesL f SystemInfo{..} = (\systemInfoImages -> SystemInfo { systemInfoImages, ..} ) <$> f systemInfoImages
{-# INLINE systemInfoImagesL #-}

-- | 'systemInfoDriver' Lens
systemInfoDriverL :: Lens_' SystemInfo (Maybe Text)
systemInfoDriverL f SystemInfo{..} = (\systemInfoDriver -> SystemInfo { systemInfoDriver, ..} ) <$> f systemInfoDriver
{-# INLINE systemInfoDriverL #-}

-- | 'systemInfoDriverStatus' Lens
systemInfoDriverStatusL :: Lens_' SystemInfo (Maybe [[Text]])
systemInfoDriverStatusL f SystemInfo{..} = (\systemInfoDriverStatus -> SystemInfo { systemInfoDriverStatus, ..} ) <$> f systemInfoDriverStatus
{-# INLINE systemInfoDriverStatusL #-}

-- | 'systemInfoDockerRootDir' Lens
systemInfoDockerRootDirL :: Lens_' SystemInfo (Maybe Text)
systemInfoDockerRootDirL f SystemInfo{..} = (\systemInfoDockerRootDir -> SystemInfo { systemInfoDockerRootDir, ..} ) <$> f systemInfoDockerRootDir
{-# INLINE systemInfoDockerRootDirL #-}

-- | 'systemInfoSystemStatus' Lens
systemInfoSystemStatusL :: Lens_' SystemInfo (Maybe [[Text]])
systemInfoSystemStatusL f SystemInfo{..} = (\systemInfoSystemStatus -> SystemInfo { systemInfoSystemStatus, ..} ) <$> f systemInfoSystemStatus
{-# INLINE systemInfoSystemStatusL #-}

-- | 'systemInfoPlugins' Lens
systemInfoPluginsL :: Lens_' SystemInfo (Maybe PluginsInfo)
systemInfoPluginsL f SystemInfo{..} = (\systemInfoPlugins -> SystemInfo { systemInfoPlugins, ..} ) <$> f systemInfoPlugins
{-# INLINE systemInfoPluginsL #-}

-- | 'systemInfoMemoryLimit' Lens
systemInfoMemoryLimitL :: Lens_' SystemInfo (Maybe Bool)
systemInfoMemoryLimitL f SystemInfo{..} = (\systemInfoMemoryLimit -> SystemInfo { systemInfoMemoryLimit, ..} ) <$> f systemInfoMemoryLimit
{-# INLINE systemInfoMemoryLimitL #-}

-- | 'systemInfoSwapLimit' Lens
systemInfoSwapLimitL :: Lens_' SystemInfo (Maybe Bool)
systemInfoSwapLimitL f SystemInfo{..} = (\systemInfoSwapLimit -> SystemInfo { systemInfoSwapLimit, ..} ) <$> f systemInfoSwapLimit
{-# INLINE systemInfoSwapLimitL #-}

-- | 'systemInfoKernelMemory' Lens
systemInfoKernelMemoryL :: Lens_' SystemInfo (Maybe Bool)
systemInfoKernelMemoryL f SystemInfo{..} = (\systemInfoKernelMemory -> SystemInfo { systemInfoKernelMemory, ..} ) <$> f systemInfoKernelMemory
{-# INLINE systemInfoKernelMemoryL #-}

-- | 'systemInfoCpuCfsPeriod' Lens
systemInfoCpuCfsPeriodL :: Lens_' SystemInfo (Maybe Bool)
systemInfoCpuCfsPeriodL f SystemInfo{..} = (\systemInfoCpuCfsPeriod -> SystemInfo { systemInfoCpuCfsPeriod, ..} ) <$> f systemInfoCpuCfsPeriod
{-# INLINE systemInfoCpuCfsPeriodL #-}

-- | 'systemInfoCpuCfsQuota' Lens
systemInfoCpuCfsQuotaL :: Lens_' SystemInfo (Maybe Bool)
systemInfoCpuCfsQuotaL f SystemInfo{..} = (\systemInfoCpuCfsQuota -> SystemInfo { systemInfoCpuCfsQuota, ..} ) <$> f systemInfoCpuCfsQuota
{-# INLINE systemInfoCpuCfsQuotaL #-}

-- | 'systemInfoCpuShares' Lens
systemInfoCpuSharesL :: Lens_' SystemInfo (Maybe Bool)
systemInfoCpuSharesL f SystemInfo{..} = (\systemInfoCpuShares -> SystemInfo { systemInfoCpuShares, ..} ) <$> f systemInfoCpuShares
{-# INLINE systemInfoCpuSharesL #-}

-- | 'systemInfoCpuSet' Lens
systemInfoCpuSetL :: Lens_' SystemInfo (Maybe Bool)
systemInfoCpuSetL f SystemInfo{..} = (\systemInfoCpuSet -> SystemInfo { systemInfoCpuSet, ..} ) <$> f systemInfoCpuSet
{-# INLINE systemInfoCpuSetL #-}

-- | 'systemInfoOomKillDisable' Lens
systemInfoOomKillDisableL :: Lens_' SystemInfo (Maybe Bool)
systemInfoOomKillDisableL f SystemInfo{..} = (\systemInfoOomKillDisable -> SystemInfo { systemInfoOomKillDisable, ..} ) <$> f systemInfoOomKillDisable
{-# INLINE systemInfoOomKillDisableL #-}

-- | 'systemInfoIpv4Forwarding' Lens
systemInfoIpv4ForwardingL :: Lens_' SystemInfo (Maybe Bool)
systemInfoIpv4ForwardingL f SystemInfo{..} = (\systemInfoIpv4Forwarding -> SystemInfo { systemInfoIpv4Forwarding, ..} ) <$> f systemInfoIpv4Forwarding
{-# INLINE systemInfoIpv4ForwardingL #-}

-- | 'systemInfoBridgeNfIptables' Lens
systemInfoBridgeNfIptablesL :: Lens_' SystemInfo (Maybe Bool)
systemInfoBridgeNfIptablesL f SystemInfo{..} = (\systemInfoBridgeNfIptables -> SystemInfo { systemInfoBridgeNfIptables, ..} ) <$> f systemInfoBridgeNfIptables
{-# INLINE systemInfoBridgeNfIptablesL #-}

-- | 'systemInfoBridgeNfIp6tables' Lens
systemInfoBridgeNfIp6tablesL :: Lens_' SystemInfo (Maybe Bool)
systemInfoBridgeNfIp6tablesL f SystemInfo{..} = (\systemInfoBridgeNfIp6tables -> SystemInfo { systemInfoBridgeNfIp6tables, ..} ) <$> f systemInfoBridgeNfIp6tables
{-# INLINE systemInfoBridgeNfIp6tablesL #-}

-- | 'systemInfoDebug' Lens
systemInfoDebugL :: Lens_' SystemInfo (Maybe Bool)
systemInfoDebugL f SystemInfo{..} = (\systemInfoDebug -> SystemInfo { systemInfoDebug, ..} ) <$> f systemInfoDebug
{-# INLINE systemInfoDebugL #-}

-- | 'systemInfoNfd' Lens
systemInfoNfdL :: Lens_' SystemInfo (Maybe Int)
systemInfoNfdL f SystemInfo{..} = (\systemInfoNfd -> SystemInfo { systemInfoNfd, ..} ) <$> f systemInfoNfd
{-# INLINE systemInfoNfdL #-}

-- | 'systemInfoNGoroutines' Lens
systemInfoNGoroutinesL :: Lens_' SystemInfo (Maybe Int)
systemInfoNGoroutinesL f SystemInfo{..} = (\systemInfoNGoroutines -> SystemInfo { systemInfoNGoroutines, ..} ) <$> f systemInfoNGoroutines
{-# INLINE systemInfoNGoroutinesL #-}

-- | 'systemInfoSystemTime' Lens
systemInfoSystemTimeL :: Lens_' SystemInfo (Maybe Text)
systemInfoSystemTimeL f SystemInfo{..} = (\systemInfoSystemTime -> SystemInfo { systemInfoSystemTime, ..} ) <$> f systemInfoSystemTime
{-# INLINE systemInfoSystemTimeL #-}

-- | 'systemInfoLoggingDriver' Lens
systemInfoLoggingDriverL :: Lens_' SystemInfo (Maybe Text)
systemInfoLoggingDriverL f SystemInfo{..} = (\systemInfoLoggingDriver -> SystemInfo { systemInfoLoggingDriver, ..} ) <$> f systemInfoLoggingDriver
{-# INLINE systemInfoLoggingDriverL #-}

-- | 'systemInfoCgroupDriver' Lens
systemInfoCgroupDriverL :: Lens_' SystemInfo (Maybe E'CgroupDriver)
systemInfoCgroupDriverL f SystemInfo{..} = (\systemInfoCgroupDriver -> SystemInfo { systemInfoCgroupDriver, ..} ) <$> f systemInfoCgroupDriver
{-# INLINE systemInfoCgroupDriverL #-}

-- | 'systemInfoNEventsListener' Lens
systemInfoNEventsListenerL :: Lens_' SystemInfo (Maybe Int)
systemInfoNEventsListenerL f SystemInfo{..} = (\systemInfoNEventsListener -> SystemInfo { systemInfoNEventsListener, ..} ) <$> f systemInfoNEventsListener
{-# INLINE systemInfoNEventsListenerL #-}

-- | 'systemInfoKernelVersion' Lens
systemInfoKernelVersionL :: Lens_' SystemInfo (Maybe Text)
systemInfoKernelVersionL f SystemInfo{..} = (\systemInfoKernelVersion -> SystemInfo { systemInfoKernelVersion, ..} ) <$> f systemInfoKernelVersion
{-# INLINE systemInfoKernelVersionL #-}

-- | 'systemInfoOperatingSystem' Lens
systemInfoOperatingSystemL :: Lens_' SystemInfo (Maybe Text)
systemInfoOperatingSystemL f SystemInfo{..} = (\systemInfoOperatingSystem -> SystemInfo { systemInfoOperatingSystem, ..} ) <$> f systemInfoOperatingSystem
{-# INLINE systemInfoOperatingSystemL #-}

-- | 'systemInfoOsType' Lens
systemInfoOsTypeL :: Lens_' SystemInfo (Maybe Text)
systemInfoOsTypeL f SystemInfo{..} = (\systemInfoOsType -> SystemInfo { systemInfoOsType, ..} ) <$> f systemInfoOsType
{-# INLINE systemInfoOsTypeL #-}

-- | 'systemInfoArchitecture' Lens
systemInfoArchitectureL :: Lens_' SystemInfo (Maybe Text)
systemInfoArchitectureL f SystemInfo{..} = (\systemInfoArchitecture -> SystemInfo { systemInfoArchitecture, ..} ) <$> f systemInfoArchitecture
{-# INLINE systemInfoArchitectureL #-}

-- | 'systemInfoNcpu' Lens
systemInfoNcpuL :: Lens_' SystemInfo (Maybe Int)
systemInfoNcpuL f SystemInfo{..} = (\systemInfoNcpu -> SystemInfo { systemInfoNcpu, ..} ) <$> f systemInfoNcpu
{-# INLINE systemInfoNcpuL #-}

-- | 'systemInfoMemTotal' Lens
systemInfoMemTotalL :: Lens_' SystemInfo (Maybe Integer)
systemInfoMemTotalL f SystemInfo{..} = (\systemInfoMemTotal -> SystemInfo { systemInfoMemTotal, ..} ) <$> f systemInfoMemTotal
{-# INLINE systemInfoMemTotalL #-}

-- | 'systemInfoIndexServerAddress' Lens
systemInfoIndexServerAddressL :: Lens_' SystemInfo (Maybe Text)
systemInfoIndexServerAddressL f SystemInfo{..} = (\systemInfoIndexServerAddress -> SystemInfo { systemInfoIndexServerAddress, ..} ) <$> f systemInfoIndexServerAddress
{-# INLINE systemInfoIndexServerAddressL #-}

-- | 'systemInfoRegistryConfig' Lens
systemInfoRegistryConfigL :: Lens_' SystemInfo (Maybe RegistryServiceConfig)
systemInfoRegistryConfigL f SystemInfo{..} = (\systemInfoRegistryConfig -> SystemInfo { systemInfoRegistryConfig, ..} ) <$> f systemInfoRegistryConfig
{-# INLINE systemInfoRegistryConfigL #-}

-- | 'systemInfoGenericResources' Lens
systemInfoGenericResourcesL :: Lens_' SystemInfo (Maybe [GenericResourcesInner])
systemInfoGenericResourcesL f SystemInfo{..} = (\systemInfoGenericResources -> SystemInfo { systemInfoGenericResources, ..} ) <$> f systemInfoGenericResources
{-# INLINE systemInfoGenericResourcesL #-}

-- | 'systemInfoHttpProxy' Lens
systemInfoHttpProxyL :: Lens_' SystemInfo (Maybe Text)
systemInfoHttpProxyL f SystemInfo{..} = (\systemInfoHttpProxy -> SystemInfo { systemInfoHttpProxy, ..} ) <$> f systemInfoHttpProxy
{-# INLINE systemInfoHttpProxyL #-}

-- | 'systemInfoHttpsProxy' Lens
systemInfoHttpsProxyL :: Lens_' SystemInfo (Maybe Text)
systemInfoHttpsProxyL f SystemInfo{..} = (\systemInfoHttpsProxy -> SystemInfo { systemInfoHttpsProxy, ..} ) <$> f systemInfoHttpsProxy
{-# INLINE systemInfoHttpsProxyL #-}

-- | 'systemInfoNoProxy' Lens
systemInfoNoProxyL :: Lens_' SystemInfo (Maybe Text)
systemInfoNoProxyL f SystemInfo{..} = (\systemInfoNoProxy -> SystemInfo { systemInfoNoProxy, ..} ) <$> f systemInfoNoProxy
{-# INLINE systemInfoNoProxyL #-}

-- | 'systemInfoName' Lens
systemInfoNameL :: Lens_' SystemInfo (Maybe Text)
systemInfoNameL f SystemInfo{..} = (\systemInfoName -> SystemInfo { systemInfoName, ..} ) <$> f systemInfoName
{-# INLINE systemInfoNameL #-}

-- | 'systemInfoLabels' Lens
systemInfoLabelsL :: Lens_' SystemInfo (Maybe [Text])
systemInfoLabelsL f SystemInfo{..} = (\systemInfoLabels -> SystemInfo { systemInfoLabels, ..} ) <$> f systemInfoLabels
{-# INLINE systemInfoLabelsL #-}

-- | 'systemInfoExperimentalBuild' Lens
systemInfoExperimentalBuildL :: Lens_' SystemInfo (Maybe Bool)
systemInfoExperimentalBuildL f SystemInfo{..} = (\systemInfoExperimentalBuild -> SystemInfo { systemInfoExperimentalBuild, ..} ) <$> f systemInfoExperimentalBuild
{-# INLINE systemInfoExperimentalBuildL #-}

-- | 'systemInfoServerVersion' Lens
systemInfoServerVersionL :: Lens_' SystemInfo (Maybe Text)
systemInfoServerVersionL f SystemInfo{..} = (\systemInfoServerVersion -> SystemInfo { systemInfoServerVersion, ..} ) <$> f systemInfoServerVersion
{-# INLINE systemInfoServerVersionL #-}

-- | 'systemInfoClusterStore' Lens
systemInfoClusterStoreL :: Lens_' SystemInfo (Maybe Text)
systemInfoClusterStoreL f SystemInfo{..} = (\systemInfoClusterStore -> SystemInfo { systemInfoClusterStore, ..} ) <$> f systemInfoClusterStore
{-# INLINE systemInfoClusterStoreL #-}

-- | 'systemInfoClusterAdvertise' Lens
systemInfoClusterAdvertiseL :: Lens_' SystemInfo (Maybe Text)
systemInfoClusterAdvertiseL f SystemInfo{..} = (\systemInfoClusterAdvertise -> SystemInfo { systemInfoClusterAdvertise, ..} ) <$> f systemInfoClusterAdvertise
{-# INLINE systemInfoClusterAdvertiseL #-}

-- | 'systemInfoRuntimes' Lens
systemInfoRuntimesL :: Lens_' SystemInfo (Maybe (Map.Map String Runtime))
systemInfoRuntimesL f SystemInfo{..} = (\systemInfoRuntimes -> SystemInfo { systemInfoRuntimes, ..} ) <$> f systemInfoRuntimes
{-# INLINE systemInfoRuntimesL #-}

-- | 'systemInfoDefaultRuntime' Lens
systemInfoDefaultRuntimeL :: Lens_' SystemInfo (Maybe Text)
systemInfoDefaultRuntimeL f SystemInfo{..} = (\systemInfoDefaultRuntime -> SystemInfo { systemInfoDefaultRuntime, ..} ) <$> f systemInfoDefaultRuntime
{-# INLINE systemInfoDefaultRuntimeL #-}

-- | 'systemInfoSwarm' Lens
systemInfoSwarmL :: Lens_' SystemInfo (Maybe SwarmInfo)
systemInfoSwarmL f SystemInfo{..} = (\systemInfoSwarm -> SystemInfo { systemInfoSwarm, ..} ) <$> f systemInfoSwarm
{-# INLINE systemInfoSwarmL #-}

-- | 'systemInfoLiveRestoreEnabled' Lens
systemInfoLiveRestoreEnabledL :: Lens_' SystemInfo (Maybe Bool)
systemInfoLiveRestoreEnabledL f SystemInfo{..} = (\systemInfoLiveRestoreEnabled -> SystemInfo { systemInfoLiveRestoreEnabled, ..} ) <$> f systemInfoLiveRestoreEnabled
{-# INLINE systemInfoLiveRestoreEnabledL #-}

-- | 'systemInfoIsolation' Lens
systemInfoIsolationL :: Lens_' SystemInfo (Maybe E'Isolation2)
systemInfoIsolationL f SystemInfo{..} = (\systemInfoIsolation -> SystemInfo { systemInfoIsolation, ..} ) <$> f systemInfoIsolation
{-# INLINE systemInfoIsolationL #-}

-- | 'systemInfoInitBinary' Lens
systemInfoInitBinaryL :: Lens_' SystemInfo (Maybe Text)
systemInfoInitBinaryL f SystemInfo{..} = (\systemInfoInitBinary -> SystemInfo { systemInfoInitBinary, ..} ) <$> f systemInfoInitBinary
{-# INLINE systemInfoInitBinaryL #-}

-- | 'systemInfoContainerdCommit' Lens
systemInfoContainerdCommitL :: Lens_' SystemInfo (Maybe Commit)
systemInfoContainerdCommitL f SystemInfo{..} = (\systemInfoContainerdCommit -> SystemInfo { systemInfoContainerdCommit, ..} ) <$> f systemInfoContainerdCommit
{-# INLINE systemInfoContainerdCommitL #-}

-- | 'systemInfoRuncCommit' Lens
systemInfoRuncCommitL :: Lens_' SystemInfo (Maybe Commit)
systemInfoRuncCommitL f SystemInfo{..} = (\systemInfoRuncCommit -> SystemInfo { systemInfoRuncCommit, ..} ) <$> f systemInfoRuncCommit
{-# INLINE systemInfoRuncCommitL #-}

-- | 'systemInfoInitCommit' Lens
systemInfoInitCommitL :: Lens_' SystemInfo (Maybe Commit)
systemInfoInitCommitL f SystemInfo{..} = (\systemInfoInitCommit -> SystemInfo { systemInfoInitCommit, ..} ) <$> f systemInfoInitCommit
{-# INLINE systemInfoInitCommitL #-}

-- | 'systemInfoSecurityOptions' Lens
systemInfoSecurityOptionsL :: Lens_' SystemInfo (Maybe [Text])
systemInfoSecurityOptionsL f SystemInfo{..} = (\systemInfoSecurityOptions -> SystemInfo { systemInfoSecurityOptions, ..} ) <$> f systemInfoSecurityOptions
{-# INLINE systemInfoSecurityOptionsL #-}



-- * SystemVersionResponse

-- | 'systemVersionResponsePlatform' Lens
systemVersionResponsePlatformL :: Lens_' SystemVersionResponse (Maybe SystemVersionResponsePlatform)
systemVersionResponsePlatformL f SystemVersionResponse{..} = (\systemVersionResponsePlatform -> SystemVersionResponse { systemVersionResponsePlatform, ..} ) <$> f systemVersionResponsePlatform
{-# INLINE systemVersionResponsePlatformL #-}

-- | 'systemVersionResponseComponents' Lens
systemVersionResponseComponentsL :: Lens_' SystemVersionResponse (Maybe [SystemVersionResponseComponentsInner])
systemVersionResponseComponentsL f SystemVersionResponse{..} = (\systemVersionResponseComponents -> SystemVersionResponse { systemVersionResponseComponents, ..} ) <$> f systemVersionResponseComponents
{-# INLINE systemVersionResponseComponentsL #-}

-- | 'systemVersionResponseVersion' Lens
systemVersionResponseVersionL :: Lens_' SystemVersionResponse (Maybe Text)
systemVersionResponseVersionL f SystemVersionResponse{..} = (\systemVersionResponseVersion -> SystemVersionResponse { systemVersionResponseVersion, ..} ) <$> f systemVersionResponseVersion
{-# INLINE systemVersionResponseVersionL #-}

-- | 'systemVersionResponseApiVersion' Lens
systemVersionResponseApiVersionL :: Lens_' SystemVersionResponse (Maybe Text)
systemVersionResponseApiVersionL f SystemVersionResponse{..} = (\systemVersionResponseApiVersion -> SystemVersionResponse { systemVersionResponseApiVersion, ..} ) <$> f systemVersionResponseApiVersion
{-# INLINE systemVersionResponseApiVersionL #-}

-- | 'systemVersionResponseMinApiVersion' Lens
systemVersionResponseMinApiVersionL :: Lens_' SystemVersionResponse (Maybe Text)
systemVersionResponseMinApiVersionL f SystemVersionResponse{..} = (\systemVersionResponseMinApiVersion -> SystemVersionResponse { systemVersionResponseMinApiVersion, ..} ) <$> f systemVersionResponseMinApiVersion
{-# INLINE systemVersionResponseMinApiVersionL #-}

-- | 'systemVersionResponseGitCommit' Lens
systemVersionResponseGitCommitL :: Lens_' SystemVersionResponse (Maybe Text)
systemVersionResponseGitCommitL f SystemVersionResponse{..} = (\systemVersionResponseGitCommit -> SystemVersionResponse { systemVersionResponseGitCommit, ..} ) <$> f systemVersionResponseGitCommit
{-# INLINE systemVersionResponseGitCommitL #-}

-- | 'systemVersionResponseGoVersion' Lens
systemVersionResponseGoVersionL :: Lens_' SystemVersionResponse (Maybe Text)
systemVersionResponseGoVersionL f SystemVersionResponse{..} = (\systemVersionResponseGoVersion -> SystemVersionResponse { systemVersionResponseGoVersion, ..} ) <$> f systemVersionResponseGoVersion
{-# INLINE systemVersionResponseGoVersionL #-}

-- | 'systemVersionResponseOs' Lens
systemVersionResponseOsL :: Lens_' SystemVersionResponse (Maybe Text)
systemVersionResponseOsL f SystemVersionResponse{..} = (\systemVersionResponseOs -> SystemVersionResponse { systemVersionResponseOs, ..} ) <$> f systemVersionResponseOs
{-# INLINE systemVersionResponseOsL #-}

-- | 'systemVersionResponseArch' Lens
systemVersionResponseArchL :: Lens_' SystemVersionResponse (Maybe Text)
systemVersionResponseArchL f SystemVersionResponse{..} = (\systemVersionResponseArch -> SystemVersionResponse { systemVersionResponseArch, ..} ) <$> f systemVersionResponseArch
{-# INLINE systemVersionResponseArchL #-}

-- | 'systemVersionResponseKernelVersion' Lens
systemVersionResponseKernelVersionL :: Lens_' SystemVersionResponse (Maybe Text)
systemVersionResponseKernelVersionL f SystemVersionResponse{..} = (\systemVersionResponseKernelVersion -> SystemVersionResponse { systemVersionResponseKernelVersion, ..} ) <$> f systemVersionResponseKernelVersion
{-# INLINE systemVersionResponseKernelVersionL #-}

-- | 'systemVersionResponseExperimental' Lens
systemVersionResponseExperimentalL :: Lens_' SystemVersionResponse (Maybe Bool)
systemVersionResponseExperimentalL f SystemVersionResponse{..} = (\systemVersionResponseExperimental -> SystemVersionResponse { systemVersionResponseExperimental, ..} ) <$> f systemVersionResponseExperimental
{-# INLINE systemVersionResponseExperimentalL #-}

-- | 'systemVersionResponseBuildTime' Lens
systemVersionResponseBuildTimeL :: Lens_' SystemVersionResponse (Maybe Text)
systemVersionResponseBuildTimeL f SystemVersionResponse{..} = (\systemVersionResponseBuildTime -> SystemVersionResponse { systemVersionResponseBuildTime, ..} ) <$> f systemVersionResponseBuildTime
{-# INLINE systemVersionResponseBuildTimeL #-}



-- * SystemVersionResponseComponentsInner

-- | 'systemVersionResponseComponentsInnerName' Lens
systemVersionResponseComponentsInnerNameL :: Lens_' SystemVersionResponseComponentsInner (Text)
systemVersionResponseComponentsInnerNameL f SystemVersionResponseComponentsInner{..} = (\systemVersionResponseComponentsInnerName -> SystemVersionResponseComponentsInner { systemVersionResponseComponentsInnerName, ..} ) <$> f systemVersionResponseComponentsInnerName
{-# INLINE systemVersionResponseComponentsInnerNameL #-}

-- | 'systemVersionResponseComponentsInnerVersion' Lens
systemVersionResponseComponentsInnerVersionL :: Lens_' SystemVersionResponseComponentsInner (Text)
systemVersionResponseComponentsInnerVersionL f SystemVersionResponseComponentsInner{..} = (\systemVersionResponseComponentsInnerVersion -> SystemVersionResponseComponentsInner { systemVersionResponseComponentsInnerVersion, ..} ) <$> f systemVersionResponseComponentsInnerVersion
{-# INLINE systemVersionResponseComponentsInnerVersionL #-}

-- | 'systemVersionResponseComponentsInnerDetails' Lens
systemVersionResponseComponentsInnerDetailsL :: Lens_' SystemVersionResponseComponentsInner (Maybe A.Value)
systemVersionResponseComponentsInnerDetailsL f SystemVersionResponseComponentsInner{..} = (\systemVersionResponseComponentsInnerDetails -> SystemVersionResponseComponentsInner { systemVersionResponseComponentsInnerDetails, ..} ) <$> f systemVersionResponseComponentsInnerDetails
{-# INLINE systemVersionResponseComponentsInnerDetailsL #-}



-- * SystemVersionResponsePlatform

-- | 'systemVersionResponsePlatformName' Lens
systemVersionResponsePlatformNameL :: Lens_' SystemVersionResponsePlatform (Text)
systemVersionResponsePlatformNameL f SystemVersionResponsePlatform{..} = (\systemVersionResponsePlatformName -> SystemVersionResponsePlatform { systemVersionResponsePlatformName, ..} ) <$> f systemVersionResponsePlatformName
{-# INLINE systemVersionResponsePlatformNameL #-}



-- * TLSInfo

-- | 'tLSInfoTrustRoot' Lens
tLSInfoTrustRootL :: Lens_' TLSInfo (Maybe Text)
tLSInfoTrustRootL f TLSInfo{..} = (\tLSInfoTrustRoot -> TLSInfo { tLSInfoTrustRoot, ..} ) <$> f tLSInfoTrustRoot
{-# INLINE tLSInfoTrustRootL #-}

-- | 'tLSInfoCertIssuerSubject' Lens
tLSInfoCertIssuerSubjectL :: Lens_' TLSInfo (Maybe Text)
tLSInfoCertIssuerSubjectL f TLSInfo{..} = (\tLSInfoCertIssuerSubject -> TLSInfo { tLSInfoCertIssuerSubject, ..} ) <$> f tLSInfoCertIssuerSubject
{-# INLINE tLSInfoCertIssuerSubjectL #-}

-- | 'tLSInfoCertIssuerPublicKey' Lens
tLSInfoCertIssuerPublicKeyL :: Lens_' TLSInfo (Maybe Text)
tLSInfoCertIssuerPublicKeyL f TLSInfo{..} = (\tLSInfoCertIssuerPublicKey -> TLSInfo { tLSInfoCertIssuerPublicKey, ..} ) <$> f tLSInfoCertIssuerPublicKey
{-# INLINE tLSInfoCertIssuerPublicKeyL #-}



-- * Task

-- | 'taskId' Lens
taskIdL :: Lens_' Task (Maybe Text)
taskIdL f Task{..} = (\taskId -> Task { taskId, ..} ) <$> f taskId
{-# INLINE taskIdL #-}

-- | 'taskVersion' Lens
taskVersionL :: Lens_' Task (Maybe ObjectVersion)
taskVersionL f Task{..} = (\taskVersion -> Task { taskVersion, ..} ) <$> f taskVersion
{-# INLINE taskVersionL #-}

-- | 'taskCreatedAt' Lens
taskCreatedAtL :: Lens_' Task (Maybe Text)
taskCreatedAtL f Task{..} = (\taskCreatedAt -> Task { taskCreatedAt, ..} ) <$> f taskCreatedAt
{-# INLINE taskCreatedAtL #-}

-- | 'taskUpdatedAt' Lens
taskUpdatedAtL :: Lens_' Task (Maybe Text)
taskUpdatedAtL f Task{..} = (\taskUpdatedAt -> Task { taskUpdatedAt, ..} ) <$> f taskUpdatedAt
{-# INLINE taskUpdatedAtL #-}

-- | 'taskName' Lens
taskNameL :: Lens_' Task (Maybe Text)
taskNameL f Task{..} = (\taskName -> Task { taskName, ..} ) <$> f taskName
{-# INLINE taskNameL #-}

-- | 'taskLabels' Lens
taskLabelsL :: Lens_' Task (Maybe (Map.Map String Text))
taskLabelsL f Task{..} = (\taskLabels -> Task { taskLabels, ..} ) <$> f taskLabels
{-# INLINE taskLabelsL #-}

-- | 'taskSpec' Lens
taskSpecL :: Lens_' Task (Maybe TaskSpec)
taskSpecL f Task{..} = (\taskSpec -> Task { taskSpec, ..} ) <$> f taskSpec
{-# INLINE taskSpecL #-}

-- | 'taskServiceId' Lens
taskServiceIdL :: Lens_' Task (Maybe Text)
taskServiceIdL f Task{..} = (\taskServiceId -> Task { taskServiceId, ..} ) <$> f taskServiceId
{-# INLINE taskServiceIdL #-}

-- | 'taskSlot' Lens
taskSlotL :: Lens_' Task (Maybe Int)
taskSlotL f Task{..} = (\taskSlot -> Task { taskSlot, ..} ) <$> f taskSlot
{-# INLINE taskSlotL #-}

-- | 'taskNodeId' Lens
taskNodeIdL :: Lens_' Task (Maybe Text)
taskNodeIdL f Task{..} = (\taskNodeId -> Task { taskNodeId, ..} ) <$> f taskNodeId
{-# INLINE taskNodeIdL #-}

-- | 'taskAssignedGenericResources' Lens
taskAssignedGenericResourcesL :: Lens_' Task (Maybe [GenericResourcesInner])
taskAssignedGenericResourcesL f Task{..} = (\taskAssignedGenericResources -> Task { taskAssignedGenericResources, ..} ) <$> f taskAssignedGenericResources
{-# INLINE taskAssignedGenericResourcesL #-}

-- | 'taskStatus' Lens
taskStatusL :: Lens_' Task (Maybe TaskStatus)
taskStatusL f Task{..} = (\taskStatus -> Task { taskStatus, ..} ) <$> f taskStatus
{-# INLINE taskStatusL #-}

-- | 'taskDesiredState' Lens
taskDesiredStateL :: Lens_' Task (Maybe TaskState)
taskDesiredStateL f Task{..} = (\taskDesiredState -> Task { taskDesiredState, ..} ) <$> f taskDesiredState
{-# INLINE taskDesiredStateL #-}



-- * TaskSpec

-- | 'taskSpecPluginSpec' Lens
taskSpecPluginSpecL :: Lens_' TaskSpec (Maybe TaskSpecPluginSpec)
taskSpecPluginSpecL f TaskSpec{..} = (\taskSpecPluginSpec -> TaskSpec { taskSpecPluginSpec, ..} ) <$> f taskSpecPluginSpec
{-# INLINE taskSpecPluginSpecL #-}

-- | 'taskSpecContainerSpec' Lens
taskSpecContainerSpecL :: Lens_' TaskSpec (Maybe TaskSpecContainerSpec)
taskSpecContainerSpecL f TaskSpec{..} = (\taskSpecContainerSpec -> TaskSpec { taskSpecContainerSpec, ..} ) <$> f taskSpecContainerSpec
{-# INLINE taskSpecContainerSpecL #-}

-- | 'taskSpecNetworkAttachmentSpec' Lens
taskSpecNetworkAttachmentSpecL :: Lens_' TaskSpec (Maybe TaskSpecNetworkAttachmentSpec)
taskSpecNetworkAttachmentSpecL f TaskSpec{..} = (\taskSpecNetworkAttachmentSpec -> TaskSpec { taskSpecNetworkAttachmentSpec, ..} ) <$> f taskSpecNetworkAttachmentSpec
{-# INLINE taskSpecNetworkAttachmentSpecL #-}

-- | 'taskSpecResources' Lens
taskSpecResourcesL :: Lens_' TaskSpec (Maybe TaskSpecResources)
taskSpecResourcesL f TaskSpec{..} = (\taskSpecResources -> TaskSpec { taskSpecResources, ..} ) <$> f taskSpecResources
{-# INLINE taskSpecResourcesL #-}

-- | 'taskSpecRestartPolicy' Lens
taskSpecRestartPolicyL :: Lens_' TaskSpec (Maybe TaskSpecRestartPolicy)
taskSpecRestartPolicyL f TaskSpec{..} = (\taskSpecRestartPolicy -> TaskSpec { taskSpecRestartPolicy, ..} ) <$> f taskSpecRestartPolicy
{-# INLINE taskSpecRestartPolicyL #-}

-- | 'taskSpecPlacement' Lens
taskSpecPlacementL :: Lens_' TaskSpec (Maybe TaskSpecPlacement)
taskSpecPlacementL f TaskSpec{..} = (\taskSpecPlacement -> TaskSpec { taskSpecPlacement, ..} ) <$> f taskSpecPlacement
{-# INLINE taskSpecPlacementL #-}

-- | 'taskSpecForceUpdate' Lens
taskSpecForceUpdateL :: Lens_' TaskSpec (Maybe Int)
taskSpecForceUpdateL f TaskSpec{..} = (\taskSpecForceUpdate -> TaskSpec { taskSpecForceUpdate, ..} ) <$> f taskSpecForceUpdate
{-# INLINE taskSpecForceUpdateL #-}

-- | 'taskSpecRuntime' Lens
taskSpecRuntimeL :: Lens_' TaskSpec (Maybe Text)
taskSpecRuntimeL f TaskSpec{..} = (\taskSpecRuntime -> TaskSpec { taskSpecRuntime, ..} ) <$> f taskSpecRuntime
{-# INLINE taskSpecRuntimeL #-}

-- | 'taskSpecNetworks' Lens
taskSpecNetworksL :: Lens_' TaskSpec (Maybe [TaskSpecNetworksInner])
taskSpecNetworksL f TaskSpec{..} = (\taskSpecNetworks -> TaskSpec { taskSpecNetworks, ..} ) <$> f taskSpecNetworks
{-# INLINE taskSpecNetworksL #-}

-- | 'taskSpecLogDriver' Lens
taskSpecLogDriverL :: Lens_' TaskSpec (Maybe TaskSpecLogDriver)
taskSpecLogDriverL f TaskSpec{..} = (\taskSpecLogDriver -> TaskSpec { taskSpecLogDriver, ..} ) <$> f taskSpecLogDriver
{-# INLINE taskSpecLogDriverL #-}



-- * TaskSpecContainerSpec

-- | 'taskSpecContainerSpecImage' Lens
taskSpecContainerSpecImageL :: Lens_' TaskSpecContainerSpec (Maybe Text)
taskSpecContainerSpecImageL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecImage -> TaskSpecContainerSpec { taskSpecContainerSpecImage, ..} ) <$> f taskSpecContainerSpecImage
{-# INLINE taskSpecContainerSpecImageL #-}

-- | 'taskSpecContainerSpecLabels' Lens
taskSpecContainerSpecLabelsL :: Lens_' TaskSpecContainerSpec (Maybe (Map.Map String Text))
taskSpecContainerSpecLabelsL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecLabels -> TaskSpecContainerSpec { taskSpecContainerSpecLabels, ..} ) <$> f taskSpecContainerSpecLabels
{-# INLINE taskSpecContainerSpecLabelsL #-}

-- | 'taskSpecContainerSpecCommand' Lens
taskSpecContainerSpecCommandL :: Lens_' TaskSpecContainerSpec (Maybe [Text])
taskSpecContainerSpecCommandL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecCommand -> TaskSpecContainerSpec { taskSpecContainerSpecCommand, ..} ) <$> f taskSpecContainerSpecCommand
{-# INLINE taskSpecContainerSpecCommandL #-}

-- | 'taskSpecContainerSpecArgs' Lens
taskSpecContainerSpecArgsL :: Lens_' TaskSpecContainerSpec (Maybe [Text])
taskSpecContainerSpecArgsL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecArgs -> TaskSpecContainerSpec { taskSpecContainerSpecArgs, ..} ) <$> f taskSpecContainerSpecArgs
{-# INLINE taskSpecContainerSpecArgsL #-}

-- | 'taskSpecContainerSpecHostname' Lens
taskSpecContainerSpecHostnameL :: Lens_' TaskSpecContainerSpec (Maybe Text)
taskSpecContainerSpecHostnameL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecHostname -> TaskSpecContainerSpec { taskSpecContainerSpecHostname, ..} ) <$> f taskSpecContainerSpecHostname
{-# INLINE taskSpecContainerSpecHostnameL #-}

-- | 'taskSpecContainerSpecEnv' Lens
taskSpecContainerSpecEnvL :: Lens_' TaskSpecContainerSpec (Maybe [Text])
taskSpecContainerSpecEnvL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecEnv -> TaskSpecContainerSpec { taskSpecContainerSpecEnv, ..} ) <$> f taskSpecContainerSpecEnv
{-# INLINE taskSpecContainerSpecEnvL #-}

-- | 'taskSpecContainerSpecDir' Lens
taskSpecContainerSpecDirL :: Lens_' TaskSpecContainerSpec (Maybe Text)
taskSpecContainerSpecDirL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecDir -> TaskSpecContainerSpec { taskSpecContainerSpecDir, ..} ) <$> f taskSpecContainerSpecDir
{-# INLINE taskSpecContainerSpecDirL #-}

-- | 'taskSpecContainerSpecUser' Lens
taskSpecContainerSpecUserL :: Lens_' TaskSpecContainerSpec (Maybe Text)
taskSpecContainerSpecUserL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecUser -> TaskSpecContainerSpec { taskSpecContainerSpecUser, ..} ) <$> f taskSpecContainerSpecUser
{-# INLINE taskSpecContainerSpecUserL #-}

-- | 'taskSpecContainerSpecGroups' Lens
taskSpecContainerSpecGroupsL :: Lens_' TaskSpecContainerSpec (Maybe [Text])
taskSpecContainerSpecGroupsL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecGroups -> TaskSpecContainerSpec { taskSpecContainerSpecGroups, ..} ) <$> f taskSpecContainerSpecGroups
{-# INLINE taskSpecContainerSpecGroupsL #-}

-- | 'taskSpecContainerSpecPrivileges' Lens
taskSpecContainerSpecPrivilegesL :: Lens_' TaskSpecContainerSpec (Maybe TaskSpecContainerSpecPrivileges)
taskSpecContainerSpecPrivilegesL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecPrivileges -> TaskSpecContainerSpec { taskSpecContainerSpecPrivileges, ..} ) <$> f taskSpecContainerSpecPrivileges
{-# INLINE taskSpecContainerSpecPrivilegesL #-}

-- | 'taskSpecContainerSpecTty' Lens
taskSpecContainerSpecTtyL :: Lens_' TaskSpecContainerSpec (Maybe Bool)
taskSpecContainerSpecTtyL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecTty -> TaskSpecContainerSpec { taskSpecContainerSpecTty, ..} ) <$> f taskSpecContainerSpecTty
{-# INLINE taskSpecContainerSpecTtyL #-}

-- | 'taskSpecContainerSpecOpenStdin' Lens
taskSpecContainerSpecOpenStdinL :: Lens_' TaskSpecContainerSpec (Maybe Bool)
taskSpecContainerSpecOpenStdinL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecOpenStdin -> TaskSpecContainerSpec { taskSpecContainerSpecOpenStdin, ..} ) <$> f taskSpecContainerSpecOpenStdin
{-# INLINE taskSpecContainerSpecOpenStdinL #-}

-- | 'taskSpecContainerSpecReadOnly' Lens
taskSpecContainerSpecReadOnlyL :: Lens_' TaskSpecContainerSpec (Maybe Bool)
taskSpecContainerSpecReadOnlyL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecReadOnly -> TaskSpecContainerSpec { taskSpecContainerSpecReadOnly, ..} ) <$> f taskSpecContainerSpecReadOnly
{-# INLINE taskSpecContainerSpecReadOnlyL #-}

-- | 'taskSpecContainerSpecMounts' Lens
taskSpecContainerSpecMountsL :: Lens_' TaskSpecContainerSpec (Maybe [Mount])
taskSpecContainerSpecMountsL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecMounts -> TaskSpecContainerSpec { taskSpecContainerSpecMounts, ..} ) <$> f taskSpecContainerSpecMounts
{-# INLINE taskSpecContainerSpecMountsL #-}

-- | 'taskSpecContainerSpecStopSignal' Lens
taskSpecContainerSpecStopSignalL :: Lens_' TaskSpecContainerSpec (Maybe Text)
taskSpecContainerSpecStopSignalL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecStopSignal -> TaskSpecContainerSpec { taskSpecContainerSpecStopSignal, ..} ) <$> f taskSpecContainerSpecStopSignal
{-# INLINE taskSpecContainerSpecStopSignalL #-}

-- | 'taskSpecContainerSpecStopGracePeriod' Lens
taskSpecContainerSpecStopGracePeriodL :: Lens_' TaskSpecContainerSpec (Maybe Integer)
taskSpecContainerSpecStopGracePeriodL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecStopGracePeriod -> TaskSpecContainerSpec { taskSpecContainerSpecStopGracePeriod, ..} ) <$> f taskSpecContainerSpecStopGracePeriod
{-# INLINE taskSpecContainerSpecStopGracePeriodL #-}

-- | 'taskSpecContainerSpecHealthCheck' Lens
taskSpecContainerSpecHealthCheckL :: Lens_' TaskSpecContainerSpec (Maybe HealthConfig)
taskSpecContainerSpecHealthCheckL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecHealthCheck -> TaskSpecContainerSpec { taskSpecContainerSpecHealthCheck, ..} ) <$> f taskSpecContainerSpecHealthCheck
{-# INLINE taskSpecContainerSpecHealthCheckL #-}

-- | 'taskSpecContainerSpecHosts' Lens
taskSpecContainerSpecHostsL :: Lens_' TaskSpecContainerSpec (Maybe [Text])
taskSpecContainerSpecHostsL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecHosts -> TaskSpecContainerSpec { taskSpecContainerSpecHosts, ..} ) <$> f taskSpecContainerSpecHosts
{-# INLINE taskSpecContainerSpecHostsL #-}

-- | 'taskSpecContainerSpecDnsConfig' Lens
taskSpecContainerSpecDnsConfigL :: Lens_' TaskSpecContainerSpec (Maybe TaskSpecContainerSpecDNSConfig)
taskSpecContainerSpecDnsConfigL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecDnsConfig -> TaskSpecContainerSpec { taskSpecContainerSpecDnsConfig, ..} ) <$> f taskSpecContainerSpecDnsConfig
{-# INLINE taskSpecContainerSpecDnsConfigL #-}

-- | 'taskSpecContainerSpecSecrets' Lens
taskSpecContainerSpecSecretsL :: Lens_' TaskSpecContainerSpec (Maybe [TaskSpecContainerSpecSecretsInner])
taskSpecContainerSpecSecretsL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecSecrets -> TaskSpecContainerSpec { taskSpecContainerSpecSecrets, ..} ) <$> f taskSpecContainerSpecSecrets
{-# INLINE taskSpecContainerSpecSecretsL #-}

-- | 'taskSpecContainerSpecConfigs' Lens
taskSpecContainerSpecConfigsL :: Lens_' TaskSpecContainerSpec (Maybe [TaskSpecContainerSpecConfigsInner])
taskSpecContainerSpecConfigsL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecConfigs -> TaskSpecContainerSpec { taskSpecContainerSpecConfigs, ..} ) <$> f taskSpecContainerSpecConfigs
{-# INLINE taskSpecContainerSpecConfigsL #-}

-- | 'taskSpecContainerSpecIsolation' Lens
taskSpecContainerSpecIsolationL :: Lens_' TaskSpecContainerSpec (Maybe E'Isolation)
taskSpecContainerSpecIsolationL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecIsolation -> TaskSpecContainerSpec { taskSpecContainerSpecIsolation, ..} ) <$> f taskSpecContainerSpecIsolation
{-# INLINE taskSpecContainerSpecIsolationL #-}

-- | 'taskSpecContainerSpecInit' Lens
taskSpecContainerSpecInitL :: Lens_' TaskSpecContainerSpec (Maybe Bool)
taskSpecContainerSpecInitL f TaskSpecContainerSpec{..} = (\taskSpecContainerSpecInit -> TaskSpecContainerSpec { taskSpecContainerSpecInit, ..} ) <$> f taskSpecContainerSpecInit
{-# INLINE taskSpecContainerSpecInitL #-}



-- * TaskSpecContainerSpecConfigsInner

-- | 'taskSpecContainerSpecConfigsInnerFile' Lens
taskSpecContainerSpecConfigsInnerFileL :: Lens_' TaskSpecContainerSpecConfigsInner (Maybe TaskSpecContainerSpecSecretsInnerFile)
taskSpecContainerSpecConfigsInnerFileL f TaskSpecContainerSpecConfigsInner{..} = (\taskSpecContainerSpecConfigsInnerFile -> TaskSpecContainerSpecConfigsInner { taskSpecContainerSpecConfigsInnerFile, ..} ) <$> f taskSpecContainerSpecConfigsInnerFile
{-# INLINE taskSpecContainerSpecConfigsInnerFileL #-}

-- | 'taskSpecContainerSpecConfigsInnerConfigId' Lens
taskSpecContainerSpecConfigsInnerConfigIdL :: Lens_' TaskSpecContainerSpecConfigsInner (Maybe Text)
taskSpecContainerSpecConfigsInnerConfigIdL f TaskSpecContainerSpecConfigsInner{..} = (\taskSpecContainerSpecConfigsInnerConfigId -> TaskSpecContainerSpecConfigsInner { taskSpecContainerSpecConfigsInnerConfigId, ..} ) <$> f taskSpecContainerSpecConfigsInnerConfigId
{-# INLINE taskSpecContainerSpecConfigsInnerConfigIdL #-}

-- | 'taskSpecContainerSpecConfigsInnerConfigName' Lens
taskSpecContainerSpecConfigsInnerConfigNameL :: Lens_' TaskSpecContainerSpecConfigsInner (Maybe Text)
taskSpecContainerSpecConfigsInnerConfigNameL f TaskSpecContainerSpecConfigsInner{..} = (\taskSpecContainerSpecConfigsInnerConfigName -> TaskSpecContainerSpecConfigsInner { taskSpecContainerSpecConfigsInnerConfigName, ..} ) <$> f taskSpecContainerSpecConfigsInnerConfigName
{-# INLINE taskSpecContainerSpecConfigsInnerConfigNameL #-}



-- * TaskSpecContainerSpecDNSConfig

-- | 'taskSpecContainerSpecDNSConfigNameservers' Lens
taskSpecContainerSpecDNSConfigNameserversL :: Lens_' TaskSpecContainerSpecDNSConfig (Maybe [Text])
taskSpecContainerSpecDNSConfigNameserversL f TaskSpecContainerSpecDNSConfig{..} = (\taskSpecContainerSpecDNSConfigNameservers -> TaskSpecContainerSpecDNSConfig { taskSpecContainerSpecDNSConfigNameservers, ..} ) <$> f taskSpecContainerSpecDNSConfigNameservers
{-# INLINE taskSpecContainerSpecDNSConfigNameserversL #-}

-- | 'taskSpecContainerSpecDNSConfigSearch' Lens
taskSpecContainerSpecDNSConfigSearchL :: Lens_' TaskSpecContainerSpecDNSConfig (Maybe [Text])
taskSpecContainerSpecDNSConfigSearchL f TaskSpecContainerSpecDNSConfig{..} = (\taskSpecContainerSpecDNSConfigSearch -> TaskSpecContainerSpecDNSConfig { taskSpecContainerSpecDNSConfigSearch, ..} ) <$> f taskSpecContainerSpecDNSConfigSearch
{-# INLINE taskSpecContainerSpecDNSConfigSearchL #-}

-- | 'taskSpecContainerSpecDNSConfigOptions' Lens
taskSpecContainerSpecDNSConfigOptionsL :: Lens_' TaskSpecContainerSpecDNSConfig (Maybe [Text])
taskSpecContainerSpecDNSConfigOptionsL f TaskSpecContainerSpecDNSConfig{..} = (\taskSpecContainerSpecDNSConfigOptions -> TaskSpecContainerSpecDNSConfig { taskSpecContainerSpecDNSConfigOptions, ..} ) <$> f taskSpecContainerSpecDNSConfigOptions
{-# INLINE taskSpecContainerSpecDNSConfigOptionsL #-}



-- * TaskSpecContainerSpecPrivileges

-- | 'taskSpecContainerSpecPrivilegesCredentialSpec' Lens
taskSpecContainerSpecPrivilegesCredentialSpecL :: Lens_' TaskSpecContainerSpecPrivileges (Maybe TaskSpecContainerSpecPrivilegesCredentialSpec)
taskSpecContainerSpecPrivilegesCredentialSpecL f TaskSpecContainerSpecPrivileges{..} = (\taskSpecContainerSpecPrivilegesCredentialSpec -> TaskSpecContainerSpecPrivileges { taskSpecContainerSpecPrivilegesCredentialSpec, ..} ) <$> f taskSpecContainerSpecPrivilegesCredentialSpec
{-# INLINE taskSpecContainerSpecPrivilegesCredentialSpecL #-}

-- | 'taskSpecContainerSpecPrivilegesSeLinuxContext' Lens
taskSpecContainerSpecPrivilegesSeLinuxContextL :: Lens_' TaskSpecContainerSpecPrivileges (Maybe TaskSpecContainerSpecPrivilegesSELinuxContext)
taskSpecContainerSpecPrivilegesSeLinuxContextL f TaskSpecContainerSpecPrivileges{..} = (\taskSpecContainerSpecPrivilegesSeLinuxContext -> TaskSpecContainerSpecPrivileges { taskSpecContainerSpecPrivilegesSeLinuxContext, ..} ) <$> f taskSpecContainerSpecPrivilegesSeLinuxContext
{-# INLINE taskSpecContainerSpecPrivilegesSeLinuxContextL #-}



-- * TaskSpecContainerSpecPrivilegesCredentialSpec

-- | 'taskSpecContainerSpecPrivilegesCredentialSpecFile' Lens
taskSpecContainerSpecPrivilegesCredentialSpecFileL :: Lens_' TaskSpecContainerSpecPrivilegesCredentialSpec (Maybe Text)
taskSpecContainerSpecPrivilegesCredentialSpecFileL f TaskSpecContainerSpecPrivilegesCredentialSpec{..} = (\taskSpecContainerSpecPrivilegesCredentialSpecFile -> TaskSpecContainerSpecPrivilegesCredentialSpec { taskSpecContainerSpecPrivilegesCredentialSpecFile, ..} ) <$> f taskSpecContainerSpecPrivilegesCredentialSpecFile
{-# INLINE taskSpecContainerSpecPrivilegesCredentialSpecFileL #-}

-- | 'taskSpecContainerSpecPrivilegesCredentialSpecRegistry' Lens
taskSpecContainerSpecPrivilegesCredentialSpecRegistryL :: Lens_' TaskSpecContainerSpecPrivilegesCredentialSpec (Maybe Text)
taskSpecContainerSpecPrivilegesCredentialSpecRegistryL f TaskSpecContainerSpecPrivilegesCredentialSpec{..} = (\taskSpecContainerSpecPrivilegesCredentialSpecRegistry -> TaskSpecContainerSpecPrivilegesCredentialSpec { taskSpecContainerSpecPrivilegesCredentialSpecRegistry, ..} ) <$> f taskSpecContainerSpecPrivilegesCredentialSpecRegistry
{-# INLINE taskSpecContainerSpecPrivilegesCredentialSpecRegistryL #-}



-- * TaskSpecContainerSpecPrivilegesSELinuxContext

-- | 'taskSpecContainerSpecPrivilegesSELinuxContextDisable' Lens
taskSpecContainerSpecPrivilegesSELinuxContextDisableL :: Lens_' TaskSpecContainerSpecPrivilegesSELinuxContext (Maybe Bool)
taskSpecContainerSpecPrivilegesSELinuxContextDisableL f TaskSpecContainerSpecPrivilegesSELinuxContext{..} = (\taskSpecContainerSpecPrivilegesSELinuxContextDisable -> TaskSpecContainerSpecPrivilegesSELinuxContext { taskSpecContainerSpecPrivilegesSELinuxContextDisable, ..} ) <$> f taskSpecContainerSpecPrivilegesSELinuxContextDisable
{-# INLINE taskSpecContainerSpecPrivilegesSELinuxContextDisableL #-}

-- | 'taskSpecContainerSpecPrivilegesSELinuxContextUser' Lens
taskSpecContainerSpecPrivilegesSELinuxContextUserL :: Lens_' TaskSpecContainerSpecPrivilegesSELinuxContext (Maybe Text)
taskSpecContainerSpecPrivilegesSELinuxContextUserL f TaskSpecContainerSpecPrivilegesSELinuxContext{..} = (\taskSpecContainerSpecPrivilegesSELinuxContextUser -> TaskSpecContainerSpecPrivilegesSELinuxContext { taskSpecContainerSpecPrivilegesSELinuxContextUser, ..} ) <$> f taskSpecContainerSpecPrivilegesSELinuxContextUser
{-# INLINE taskSpecContainerSpecPrivilegesSELinuxContextUserL #-}

-- | 'taskSpecContainerSpecPrivilegesSELinuxContextRole' Lens
taskSpecContainerSpecPrivilegesSELinuxContextRoleL :: Lens_' TaskSpecContainerSpecPrivilegesSELinuxContext (Maybe Text)
taskSpecContainerSpecPrivilegesSELinuxContextRoleL f TaskSpecContainerSpecPrivilegesSELinuxContext{..} = (\taskSpecContainerSpecPrivilegesSELinuxContextRole -> TaskSpecContainerSpecPrivilegesSELinuxContext { taskSpecContainerSpecPrivilegesSELinuxContextRole, ..} ) <$> f taskSpecContainerSpecPrivilegesSELinuxContextRole
{-# INLINE taskSpecContainerSpecPrivilegesSELinuxContextRoleL #-}

-- | 'taskSpecContainerSpecPrivilegesSELinuxContextType' Lens
taskSpecContainerSpecPrivilegesSELinuxContextTypeL :: Lens_' TaskSpecContainerSpecPrivilegesSELinuxContext (Maybe Text)
taskSpecContainerSpecPrivilegesSELinuxContextTypeL f TaskSpecContainerSpecPrivilegesSELinuxContext{..} = (\taskSpecContainerSpecPrivilegesSELinuxContextType -> TaskSpecContainerSpecPrivilegesSELinuxContext { taskSpecContainerSpecPrivilegesSELinuxContextType, ..} ) <$> f taskSpecContainerSpecPrivilegesSELinuxContextType
{-# INLINE taskSpecContainerSpecPrivilegesSELinuxContextTypeL #-}

-- | 'taskSpecContainerSpecPrivilegesSELinuxContextLevel' Lens
taskSpecContainerSpecPrivilegesSELinuxContextLevelL :: Lens_' TaskSpecContainerSpecPrivilegesSELinuxContext (Maybe Text)
taskSpecContainerSpecPrivilegesSELinuxContextLevelL f TaskSpecContainerSpecPrivilegesSELinuxContext{..} = (\taskSpecContainerSpecPrivilegesSELinuxContextLevel -> TaskSpecContainerSpecPrivilegesSELinuxContext { taskSpecContainerSpecPrivilegesSELinuxContextLevel, ..} ) <$> f taskSpecContainerSpecPrivilegesSELinuxContextLevel
{-# INLINE taskSpecContainerSpecPrivilegesSELinuxContextLevelL #-}



-- * TaskSpecContainerSpecSecretsInner

-- | 'taskSpecContainerSpecSecretsInnerFile' Lens
taskSpecContainerSpecSecretsInnerFileL :: Lens_' TaskSpecContainerSpecSecretsInner (Maybe TaskSpecContainerSpecSecretsInnerFile)
taskSpecContainerSpecSecretsInnerFileL f TaskSpecContainerSpecSecretsInner{..} = (\taskSpecContainerSpecSecretsInnerFile -> TaskSpecContainerSpecSecretsInner { taskSpecContainerSpecSecretsInnerFile, ..} ) <$> f taskSpecContainerSpecSecretsInnerFile
{-# INLINE taskSpecContainerSpecSecretsInnerFileL #-}

-- | 'taskSpecContainerSpecSecretsInnerSecretId' Lens
taskSpecContainerSpecSecretsInnerSecretIdL :: Lens_' TaskSpecContainerSpecSecretsInner (Maybe Text)
taskSpecContainerSpecSecretsInnerSecretIdL f TaskSpecContainerSpecSecretsInner{..} = (\taskSpecContainerSpecSecretsInnerSecretId -> TaskSpecContainerSpecSecretsInner { taskSpecContainerSpecSecretsInnerSecretId, ..} ) <$> f taskSpecContainerSpecSecretsInnerSecretId
{-# INLINE taskSpecContainerSpecSecretsInnerSecretIdL #-}

-- | 'taskSpecContainerSpecSecretsInnerSecretName' Lens
taskSpecContainerSpecSecretsInnerSecretNameL :: Lens_' TaskSpecContainerSpecSecretsInner (Maybe Text)
taskSpecContainerSpecSecretsInnerSecretNameL f TaskSpecContainerSpecSecretsInner{..} = (\taskSpecContainerSpecSecretsInnerSecretName -> TaskSpecContainerSpecSecretsInner { taskSpecContainerSpecSecretsInnerSecretName, ..} ) <$> f taskSpecContainerSpecSecretsInnerSecretName
{-# INLINE taskSpecContainerSpecSecretsInnerSecretNameL #-}



-- * TaskSpecContainerSpecSecretsInnerFile

-- | 'taskSpecContainerSpecSecretsInnerFileName' Lens
taskSpecContainerSpecSecretsInnerFileNameL :: Lens_' TaskSpecContainerSpecSecretsInnerFile (Maybe Text)
taskSpecContainerSpecSecretsInnerFileNameL f TaskSpecContainerSpecSecretsInnerFile{..} = (\taskSpecContainerSpecSecretsInnerFileName -> TaskSpecContainerSpecSecretsInnerFile { taskSpecContainerSpecSecretsInnerFileName, ..} ) <$> f taskSpecContainerSpecSecretsInnerFileName
{-# INLINE taskSpecContainerSpecSecretsInnerFileNameL #-}

-- | 'taskSpecContainerSpecSecretsInnerFileUid' Lens
taskSpecContainerSpecSecretsInnerFileUidL :: Lens_' TaskSpecContainerSpecSecretsInnerFile (Maybe Text)
taskSpecContainerSpecSecretsInnerFileUidL f TaskSpecContainerSpecSecretsInnerFile{..} = (\taskSpecContainerSpecSecretsInnerFileUid -> TaskSpecContainerSpecSecretsInnerFile { taskSpecContainerSpecSecretsInnerFileUid, ..} ) <$> f taskSpecContainerSpecSecretsInnerFileUid
{-# INLINE taskSpecContainerSpecSecretsInnerFileUidL #-}

-- | 'taskSpecContainerSpecSecretsInnerFileGid' Lens
taskSpecContainerSpecSecretsInnerFileGidL :: Lens_' TaskSpecContainerSpecSecretsInnerFile (Maybe Text)
taskSpecContainerSpecSecretsInnerFileGidL f TaskSpecContainerSpecSecretsInnerFile{..} = (\taskSpecContainerSpecSecretsInnerFileGid -> TaskSpecContainerSpecSecretsInnerFile { taskSpecContainerSpecSecretsInnerFileGid, ..} ) <$> f taskSpecContainerSpecSecretsInnerFileGid
{-# INLINE taskSpecContainerSpecSecretsInnerFileGidL #-}

-- | 'taskSpecContainerSpecSecretsInnerFileMode' Lens
taskSpecContainerSpecSecretsInnerFileModeL :: Lens_' TaskSpecContainerSpecSecretsInnerFile (Maybe Int)
taskSpecContainerSpecSecretsInnerFileModeL f TaskSpecContainerSpecSecretsInnerFile{..} = (\taskSpecContainerSpecSecretsInnerFileMode -> TaskSpecContainerSpecSecretsInnerFile { taskSpecContainerSpecSecretsInnerFileMode, ..} ) <$> f taskSpecContainerSpecSecretsInnerFileMode
{-# INLINE taskSpecContainerSpecSecretsInnerFileModeL #-}



-- * TaskSpecLogDriver

-- | 'taskSpecLogDriverName' Lens
taskSpecLogDriverNameL :: Lens_' TaskSpecLogDriver (Maybe Text)
taskSpecLogDriverNameL f TaskSpecLogDriver{..} = (\taskSpecLogDriverName -> TaskSpecLogDriver { taskSpecLogDriverName, ..} ) <$> f taskSpecLogDriverName
{-# INLINE taskSpecLogDriverNameL #-}

-- | 'taskSpecLogDriverOptions' Lens
taskSpecLogDriverOptionsL :: Lens_' TaskSpecLogDriver (Maybe (Map.Map String Text))
taskSpecLogDriverOptionsL f TaskSpecLogDriver{..} = (\taskSpecLogDriverOptions -> TaskSpecLogDriver { taskSpecLogDriverOptions, ..} ) <$> f taskSpecLogDriverOptions
{-# INLINE taskSpecLogDriverOptionsL #-}



-- * TaskSpecNetworkAttachmentSpec

-- | 'taskSpecNetworkAttachmentSpecContainerId' Lens
taskSpecNetworkAttachmentSpecContainerIdL :: Lens_' TaskSpecNetworkAttachmentSpec (Maybe Text)
taskSpecNetworkAttachmentSpecContainerIdL f TaskSpecNetworkAttachmentSpec{..} = (\taskSpecNetworkAttachmentSpecContainerId -> TaskSpecNetworkAttachmentSpec { taskSpecNetworkAttachmentSpecContainerId, ..} ) <$> f taskSpecNetworkAttachmentSpecContainerId
{-# INLINE taskSpecNetworkAttachmentSpecContainerIdL #-}



-- * TaskSpecNetworksInner

-- | 'taskSpecNetworksInnerTarget' Lens
taskSpecNetworksInnerTargetL :: Lens_' TaskSpecNetworksInner (Maybe Text)
taskSpecNetworksInnerTargetL f TaskSpecNetworksInner{..} = (\taskSpecNetworksInnerTarget -> TaskSpecNetworksInner { taskSpecNetworksInnerTarget, ..} ) <$> f taskSpecNetworksInnerTarget
{-# INLINE taskSpecNetworksInnerTargetL #-}

-- | 'taskSpecNetworksInnerAliases' Lens
taskSpecNetworksInnerAliasesL :: Lens_' TaskSpecNetworksInner (Maybe [Text])
taskSpecNetworksInnerAliasesL f TaskSpecNetworksInner{..} = (\taskSpecNetworksInnerAliases -> TaskSpecNetworksInner { taskSpecNetworksInnerAliases, ..} ) <$> f taskSpecNetworksInnerAliases
{-# INLINE taskSpecNetworksInnerAliasesL #-}



-- * TaskSpecPlacement

-- | 'taskSpecPlacementConstraints' Lens
taskSpecPlacementConstraintsL :: Lens_' TaskSpecPlacement (Maybe [Text])
taskSpecPlacementConstraintsL f TaskSpecPlacement{..} = (\taskSpecPlacementConstraints -> TaskSpecPlacement { taskSpecPlacementConstraints, ..} ) <$> f taskSpecPlacementConstraints
{-# INLINE taskSpecPlacementConstraintsL #-}

-- | 'taskSpecPlacementPreferences' Lens
taskSpecPlacementPreferencesL :: Lens_' TaskSpecPlacement (Maybe [TaskSpecPlacementPreferencesInner])
taskSpecPlacementPreferencesL f TaskSpecPlacement{..} = (\taskSpecPlacementPreferences -> TaskSpecPlacement { taskSpecPlacementPreferences, ..} ) <$> f taskSpecPlacementPreferences
{-# INLINE taskSpecPlacementPreferencesL #-}

-- | 'taskSpecPlacementPlatforms' Lens
taskSpecPlacementPlatformsL :: Lens_' TaskSpecPlacement (Maybe [Platform])
taskSpecPlacementPlatformsL f TaskSpecPlacement{..} = (\taskSpecPlacementPlatforms -> TaskSpecPlacement { taskSpecPlacementPlatforms, ..} ) <$> f taskSpecPlacementPlatforms
{-# INLINE taskSpecPlacementPlatformsL #-}



-- * TaskSpecPlacementPreferencesInner

-- | 'taskSpecPlacementPreferencesInnerSpread' Lens
taskSpecPlacementPreferencesInnerSpreadL :: Lens_' TaskSpecPlacementPreferencesInner (Maybe TaskSpecPlacementPreferencesInnerSpread)
taskSpecPlacementPreferencesInnerSpreadL f TaskSpecPlacementPreferencesInner{..} = (\taskSpecPlacementPreferencesInnerSpread -> TaskSpecPlacementPreferencesInner { taskSpecPlacementPreferencesInnerSpread, ..} ) <$> f taskSpecPlacementPreferencesInnerSpread
{-# INLINE taskSpecPlacementPreferencesInnerSpreadL #-}



-- * TaskSpecPlacementPreferencesInnerSpread

-- | 'taskSpecPlacementPreferencesInnerSpreadSpreadDescriptor' Lens
taskSpecPlacementPreferencesInnerSpreadSpreadDescriptorL :: Lens_' TaskSpecPlacementPreferencesInnerSpread (Maybe Text)
taskSpecPlacementPreferencesInnerSpreadSpreadDescriptorL f TaskSpecPlacementPreferencesInnerSpread{..} = (\taskSpecPlacementPreferencesInnerSpreadSpreadDescriptor -> TaskSpecPlacementPreferencesInnerSpread { taskSpecPlacementPreferencesInnerSpreadSpreadDescriptor, ..} ) <$> f taskSpecPlacementPreferencesInnerSpreadSpreadDescriptor
{-# INLINE taskSpecPlacementPreferencesInnerSpreadSpreadDescriptorL #-}



-- * TaskSpecPluginSpec

-- | 'taskSpecPluginSpecName' Lens
taskSpecPluginSpecNameL :: Lens_' TaskSpecPluginSpec (Maybe Text)
taskSpecPluginSpecNameL f TaskSpecPluginSpec{..} = (\taskSpecPluginSpecName -> TaskSpecPluginSpec { taskSpecPluginSpecName, ..} ) <$> f taskSpecPluginSpecName
{-# INLINE taskSpecPluginSpecNameL #-}

-- | 'taskSpecPluginSpecRemote' Lens
taskSpecPluginSpecRemoteL :: Lens_' TaskSpecPluginSpec (Maybe Text)
taskSpecPluginSpecRemoteL f TaskSpecPluginSpec{..} = (\taskSpecPluginSpecRemote -> TaskSpecPluginSpec { taskSpecPluginSpecRemote, ..} ) <$> f taskSpecPluginSpecRemote
{-# INLINE taskSpecPluginSpecRemoteL #-}

-- | 'taskSpecPluginSpecDisabled' Lens
taskSpecPluginSpecDisabledL :: Lens_' TaskSpecPluginSpec (Maybe Bool)
taskSpecPluginSpecDisabledL f TaskSpecPluginSpec{..} = (\taskSpecPluginSpecDisabled -> TaskSpecPluginSpec { taskSpecPluginSpecDisabled, ..} ) <$> f taskSpecPluginSpecDisabled
{-# INLINE taskSpecPluginSpecDisabledL #-}

-- | 'taskSpecPluginSpecPluginPrivilege' Lens
taskSpecPluginSpecPluginPrivilegeL :: Lens_' TaskSpecPluginSpec (Maybe [PluginPullRequestInner])
taskSpecPluginSpecPluginPrivilegeL f TaskSpecPluginSpec{..} = (\taskSpecPluginSpecPluginPrivilege -> TaskSpecPluginSpec { taskSpecPluginSpecPluginPrivilege, ..} ) <$> f taskSpecPluginSpecPluginPrivilege
{-# INLINE taskSpecPluginSpecPluginPrivilegeL #-}



-- * TaskSpecResources

-- | 'taskSpecResourcesLimits' Lens
taskSpecResourcesLimitsL :: Lens_' TaskSpecResources (Maybe ResourceObject)
taskSpecResourcesLimitsL f TaskSpecResources{..} = (\taskSpecResourcesLimits -> TaskSpecResources { taskSpecResourcesLimits, ..} ) <$> f taskSpecResourcesLimits
{-# INLINE taskSpecResourcesLimitsL #-}

-- | 'taskSpecResourcesReservations' Lens
taskSpecResourcesReservationsL :: Lens_' TaskSpecResources (Maybe ResourceObject)
taskSpecResourcesReservationsL f TaskSpecResources{..} = (\taskSpecResourcesReservations -> TaskSpecResources { taskSpecResourcesReservations, ..} ) <$> f taskSpecResourcesReservations
{-# INLINE taskSpecResourcesReservationsL #-}



-- * TaskSpecRestartPolicy

-- | 'taskSpecRestartPolicyCondition' Lens
taskSpecRestartPolicyConditionL :: Lens_' TaskSpecRestartPolicy (Maybe E'Condition)
taskSpecRestartPolicyConditionL f TaskSpecRestartPolicy{..} = (\taskSpecRestartPolicyCondition -> TaskSpecRestartPolicy { taskSpecRestartPolicyCondition, ..} ) <$> f taskSpecRestartPolicyCondition
{-# INLINE taskSpecRestartPolicyConditionL #-}

-- | 'taskSpecRestartPolicyDelay' Lens
taskSpecRestartPolicyDelayL :: Lens_' TaskSpecRestartPolicy (Maybe Integer)
taskSpecRestartPolicyDelayL f TaskSpecRestartPolicy{..} = (\taskSpecRestartPolicyDelay -> TaskSpecRestartPolicy { taskSpecRestartPolicyDelay, ..} ) <$> f taskSpecRestartPolicyDelay
{-# INLINE taskSpecRestartPolicyDelayL #-}

-- | 'taskSpecRestartPolicyMaxAttempts' Lens
taskSpecRestartPolicyMaxAttemptsL :: Lens_' TaskSpecRestartPolicy (Maybe Integer)
taskSpecRestartPolicyMaxAttemptsL f TaskSpecRestartPolicy{..} = (\taskSpecRestartPolicyMaxAttempts -> TaskSpecRestartPolicy { taskSpecRestartPolicyMaxAttempts, ..} ) <$> f taskSpecRestartPolicyMaxAttempts
{-# INLINE taskSpecRestartPolicyMaxAttemptsL #-}

-- | 'taskSpecRestartPolicyWindow' Lens
taskSpecRestartPolicyWindowL :: Lens_' TaskSpecRestartPolicy (Maybe Integer)
taskSpecRestartPolicyWindowL f TaskSpecRestartPolicy{..} = (\taskSpecRestartPolicyWindow -> TaskSpecRestartPolicy { taskSpecRestartPolicyWindow, ..} ) <$> f taskSpecRestartPolicyWindow
{-# INLINE taskSpecRestartPolicyWindowL #-}



-- * TaskState



-- * TaskStatus

-- | 'taskStatusTimestamp' Lens
taskStatusTimestampL :: Lens_' TaskStatus (Maybe Text)
taskStatusTimestampL f TaskStatus{..} = (\taskStatusTimestamp -> TaskStatus { taskStatusTimestamp, ..} ) <$> f taskStatusTimestamp
{-# INLINE taskStatusTimestampL #-}

-- | 'taskStatusState' Lens
taskStatusStateL :: Lens_' TaskStatus (Maybe TaskState)
taskStatusStateL f TaskStatus{..} = (\taskStatusState -> TaskStatus { taskStatusState, ..} ) <$> f taskStatusState
{-# INLINE taskStatusStateL #-}

-- | 'taskStatusMessage' Lens
taskStatusMessageL :: Lens_' TaskStatus (Maybe Text)
taskStatusMessageL f TaskStatus{..} = (\taskStatusMessage -> TaskStatus { taskStatusMessage, ..} ) <$> f taskStatusMessage
{-# INLINE taskStatusMessageL #-}

-- | 'taskStatusErr' Lens
taskStatusErrL :: Lens_' TaskStatus (Maybe Text)
taskStatusErrL f TaskStatus{..} = (\taskStatusErr -> TaskStatus { taskStatusErr, ..} ) <$> f taskStatusErr
{-# INLINE taskStatusErrL #-}

-- | 'taskStatusContainerStatus' Lens
taskStatusContainerStatusL :: Lens_' TaskStatus (Maybe TaskStatusContainerStatus)
taskStatusContainerStatusL f TaskStatus{..} = (\taskStatusContainerStatus -> TaskStatus { taskStatusContainerStatus, ..} ) <$> f taskStatusContainerStatus
{-# INLINE taskStatusContainerStatusL #-}



-- * TaskStatusContainerStatus

-- | 'taskStatusContainerStatusContainerId' Lens
taskStatusContainerStatusContainerIdL :: Lens_' TaskStatusContainerStatus (Maybe Text)
taskStatusContainerStatusContainerIdL f TaskStatusContainerStatus{..} = (\taskStatusContainerStatusContainerId -> TaskStatusContainerStatus { taskStatusContainerStatusContainerId, ..} ) <$> f taskStatusContainerStatusContainerId
{-# INLINE taskStatusContainerStatusContainerIdL #-}

-- | 'taskStatusContainerStatusPid' Lens
taskStatusContainerStatusPidL :: Lens_' TaskStatusContainerStatus (Maybe Int)
taskStatusContainerStatusPidL f TaskStatusContainerStatus{..} = (\taskStatusContainerStatusPid -> TaskStatusContainerStatus { taskStatusContainerStatusPid, ..} ) <$> f taskStatusContainerStatusPid
{-# INLINE taskStatusContainerStatusPidL #-}

-- | 'taskStatusContainerStatusExitCode' Lens
taskStatusContainerStatusExitCodeL :: Lens_' TaskStatusContainerStatus (Maybe Int)
taskStatusContainerStatusExitCodeL f TaskStatusContainerStatus{..} = (\taskStatusContainerStatusExitCode -> TaskStatusContainerStatus { taskStatusContainerStatusExitCode, ..} ) <$> f taskStatusContainerStatusExitCode
{-# INLINE taskStatusContainerStatusExitCodeL #-}



-- * ThrottleDevice

-- | 'throttleDevicePath' Lens
throttleDevicePathL :: Lens_' ThrottleDevice (Maybe Text)
throttleDevicePathL f ThrottleDevice{..} = (\throttleDevicePath -> ThrottleDevice { throttleDevicePath, ..} ) <$> f throttleDevicePath
{-# INLINE throttleDevicePathL #-}

-- | 'throttleDeviceRate' Lens
throttleDeviceRateL :: Lens_' ThrottleDevice (Maybe Integer)
throttleDeviceRateL f ThrottleDevice{..} = (\throttleDeviceRate -> ThrottleDevice { throttleDeviceRate, ..} ) <$> f throttleDeviceRate
{-# INLINE throttleDeviceRateL #-}



-- * UnlockKeyResponse

-- | 'unlockKeyResponseUnlockKey' Lens
unlockKeyResponseUnlockKeyL :: Lens_' UnlockKeyResponse (Maybe Text)
unlockKeyResponseUnlockKeyL f UnlockKeyResponse{..} = (\unlockKeyResponseUnlockKey -> UnlockKeyResponse { unlockKeyResponseUnlockKey, ..} ) <$> f unlockKeyResponseUnlockKey
{-# INLINE unlockKeyResponseUnlockKeyL #-}



-- * Volume

-- | 'volumeName' Lens
volumeNameL :: Lens_' Volume (Text)
volumeNameL f Volume{..} = (\volumeName -> Volume { volumeName, ..} ) <$> f volumeName
{-# INLINE volumeNameL #-}

-- | 'volumeDriver' Lens
volumeDriverL :: Lens_' Volume (Text)
volumeDriverL f Volume{..} = (\volumeDriver -> Volume { volumeDriver, ..} ) <$> f volumeDriver
{-# INLINE volumeDriverL #-}

-- | 'volumeMountpoint' Lens
volumeMountpointL :: Lens_' Volume (Text)
volumeMountpointL f Volume{..} = (\volumeMountpoint -> Volume { volumeMountpoint, ..} ) <$> f volumeMountpoint
{-# INLINE volumeMountpointL #-}

-- | 'volumeCreatedAt' Lens
volumeCreatedAtL :: Lens_' Volume (Maybe Text)
volumeCreatedAtL f Volume{..} = (\volumeCreatedAt -> Volume { volumeCreatedAt, ..} ) <$> f volumeCreatedAt
{-# INLINE volumeCreatedAtL #-}

-- | 'volumeStatus' Lens
volumeStatusL :: Lens_' Volume (Maybe (Map.Map String A.Value))
volumeStatusL f Volume{..} = (\volumeStatus -> Volume { volumeStatus, ..} ) <$> f volumeStatus
{-# INLINE volumeStatusL #-}

-- | 'volumeLabels' Lens
volumeLabelsL :: Lens_' Volume ((Map.Map String Text))
volumeLabelsL f Volume{..} = (\volumeLabels -> Volume { volumeLabels, ..} ) <$> f volumeLabels
{-# INLINE volumeLabelsL #-}

-- | 'volumeScope' Lens
volumeScopeL :: Lens_' Volume (E'Scope)
volumeScopeL f Volume{..} = (\volumeScope -> Volume { volumeScope, ..} ) <$> f volumeScope
{-# INLINE volumeScopeL #-}

-- | 'volumeOptions' Lens
volumeOptionsL :: Lens_' Volume ((Map.Map String Text))
volumeOptionsL f Volume{..} = (\volumeOptions -> Volume { volumeOptions, ..} ) <$> f volumeOptions
{-# INLINE volumeOptionsL #-}

-- | 'volumeUsageData' Lens
volumeUsageDataL :: Lens_' Volume (Maybe VolumeUsageData)
volumeUsageDataL f Volume{..} = (\volumeUsageData -> Volume { volumeUsageData, ..} ) <$> f volumeUsageData
{-# INLINE volumeUsageDataL #-}



-- * VolumeCreateRequest

-- | 'volumeCreateRequestName' Lens
volumeCreateRequestNameL :: Lens_' VolumeCreateRequest (Maybe Text)
volumeCreateRequestNameL f VolumeCreateRequest{..} = (\volumeCreateRequestName -> VolumeCreateRequest { volumeCreateRequestName, ..} ) <$> f volumeCreateRequestName
{-# INLINE volumeCreateRequestNameL #-}

-- | 'volumeCreateRequestDriver' Lens
volumeCreateRequestDriverL :: Lens_' VolumeCreateRequest (Maybe Text)
volumeCreateRequestDriverL f VolumeCreateRequest{..} = (\volumeCreateRequestDriver -> VolumeCreateRequest { volumeCreateRequestDriver, ..} ) <$> f volumeCreateRequestDriver
{-# INLINE volumeCreateRequestDriverL #-}

-- | 'volumeCreateRequestDriverOpts' Lens
volumeCreateRequestDriverOptsL :: Lens_' VolumeCreateRequest (Maybe (Map.Map String Text))
volumeCreateRequestDriverOptsL f VolumeCreateRequest{..} = (\volumeCreateRequestDriverOpts -> VolumeCreateRequest { volumeCreateRequestDriverOpts, ..} ) <$> f volumeCreateRequestDriverOpts
{-# INLINE volumeCreateRequestDriverOptsL #-}

-- | 'volumeCreateRequestLabels' Lens
volumeCreateRequestLabelsL :: Lens_' VolumeCreateRequest (Maybe (Map.Map String Text))
volumeCreateRequestLabelsL f VolumeCreateRequest{..} = (\volumeCreateRequestLabels -> VolumeCreateRequest { volumeCreateRequestLabels, ..} ) <$> f volumeCreateRequestLabels
{-# INLINE volumeCreateRequestLabelsL #-}



-- * VolumeListResponse

-- | 'volumeListResponseVolumes' Lens
volumeListResponseVolumesL :: Lens_' VolumeListResponse ([Volume])
volumeListResponseVolumesL f VolumeListResponse{..} = (\volumeListResponseVolumes -> VolumeListResponse { volumeListResponseVolumes, ..} ) <$> f volumeListResponseVolumes
{-# INLINE volumeListResponseVolumesL #-}

-- | 'volumeListResponseWarnings' Lens
volumeListResponseWarningsL :: Lens_' VolumeListResponse ([Text])
volumeListResponseWarningsL f VolumeListResponse{..} = (\volumeListResponseWarnings -> VolumeListResponse { volumeListResponseWarnings, ..} ) <$> f volumeListResponseWarnings
{-# INLINE volumeListResponseWarningsL #-}



-- * VolumePruneResponse

-- | 'volumePruneResponseVolumesDeleted' Lens
volumePruneResponseVolumesDeletedL :: Lens_' VolumePruneResponse (Maybe [Text])
volumePruneResponseVolumesDeletedL f VolumePruneResponse{..} = (\volumePruneResponseVolumesDeleted -> VolumePruneResponse { volumePruneResponseVolumesDeleted, ..} ) <$> f volumePruneResponseVolumesDeleted
{-# INLINE volumePruneResponseVolumesDeletedL #-}

-- | 'volumePruneResponseSpaceReclaimed' Lens
volumePruneResponseSpaceReclaimedL :: Lens_' VolumePruneResponse (Maybe Integer)
volumePruneResponseSpaceReclaimedL f VolumePruneResponse{..} = (\volumePruneResponseSpaceReclaimed -> VolumePruneResponse { volumePruneResponseSpaceReclaimed, ..} ) <$> f volumePruneResponseSpaceReclaimed
{-# INLINE volumePruneResponseSpaceReclaimedL #-}



-- * VolumeUsageData

-- | 'volumeUsageDataSize' Lens
volumeUsageDataSizeL :: Lens_' VolumeUsageData (Int)
volumeUsageDataSizeL f VolumeUsageData{..} = (\volumeUsageDataSize -> VolumeUsageData { volumeUsageDataSize, ..} ) <$> f volumeUsageDataSize
{-# INLINE volumeUsageDataSizeL #-}

-- | 'volumeUsageDataRefCount' Lens
volumeUsageDataRefCountL :: Lens_' VolumeUsageData (Int)
volumeUsageDataRefCountL f VolumeUsageData{..} = (\volumeUsageDataRefCount -> VolumeUsageData { volumeUsageDataRefCount, ..} ) <$> f volumeUsageDataRefCount
{-# INLINE volumeUsageDataRefCountL #-}


